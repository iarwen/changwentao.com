{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/CNAME","path":"CNAME","modified":1,"renderable":1},{"_id":"themes/next/source/about.html","path":"about.html","modified":1,"renderable":1},{"_id":"themes/next/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/default_avatar.jpg","path":"images/default_avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/_config.yml","hash":"916e921a2ea5276c692a3e359932714d8e7164be","modified":1526370154424},{"_id":"source/categories/index.md","hash":"3042c8526e3d71f4a95b69088a7759e1fdd47a73","modified":1526370154229},{"_id":"source/tags/index.md","hash":"a9bc60ded7410376f6d3307d191b05fc7751a073","modified":1526370154230},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1526370154427},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1526370154429},{"_id":"themes/next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1526370154430},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1526370154431},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1526370154432},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1526370154433},{"_id":"themes/next/languages/zh-Hans.yml","hash":"23b45e77c1846c9457b98c745a60a9461678c389","modified":1526370154434},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1526370154436},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1526370154435},{"_id":"themes/next/layout/_layout.swig","hash":"0754f57d68b25bc58ba837b26839d633e1b61feb","modified":1526370154438},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1526370154485},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1526370154486},{"_id":"themes/next/layout/index.swig","hash":"56a70d0cd51ce739787da3e07638969ccb6abd2f","modified":1526370154487},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1526370154488},{"_id":"themes/next/layout/post.swig","hash":"e67a6aabe4d71cbcf01a4cace652424bd49acc9b","modified":1526370154489},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1526370154490},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1526370154492},{"_id":"themes/next/source/404.html","hash":"e36e1e1aa203d768ce26f7784b5de1a9a597461d","modified":1526370154497},{"_id":"themes/next/source/CNAME","hash":"d3117afbad8de1fa33d0d415e310bb8a49d6520d","modified":1526370154499},{"_id":"themes/next/source/about.html","hash":"0ec961c31cf3e8ca917c8a4733c4eeb07b2f95a1","modified":1526370154499},{"_id":"themes/next/source/favicon.ico","hash":"caa90b56cf113ac2b3a5e477ddde10ed5f86753b","modified":1526370154606},{"_id":"themes/next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1526370154728},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1526370154730},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1526370154731},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154608},{"_id":"source/_posts/database/2016-05-12-mysql-problems.md","hash":"3a6b5c9cd63fc0fc769b027693e58dd95979a787","modified":1526370154197},{"_id":"source/_posts/database/2016-07-28-oracle-dead-lock-query-and-kill.md","hash":"6490d590fdcdb840774ef0e257a117ea1ba1e34b","modified":1526370154199},{"_id":"source/_posts/dockers/2016-08-01-docker-learning-01.md","hash":"2fe749101ae43d691d924e20cddb900f01452003","modified":1526370154200},{"_id":"source/_posts/dockers/2016-08-01-docker-learning-02.md","hash":"2cd35d83a96cfa0555400ca06419c84eb2e377d7","modified":1526370154203},{"_id":"source/_posts/go/2018-05-15-go-select-case.md","hash":"3b122780858428a718f508cf0930a100846a62a2","modified":1528253088645},{"_id":"source/_posts/java/2016-08-08-java-8-feature.md","hash":"f261b45b9b10f9e5f86cca5066b221cca7008121","modified":1526370154205},{"_id":"source/_posts/life/2016-03-08-programmer-three-line-code.md","hash":"743e7feb39e84580437052d6da7a8da3b3d6978f","modified":1526370154213},{"_id":"source/_posts/life/2016-07-28-magic-rubik-for-me.md","hash":"a2ea3095c74bdc890d5fac2d7fbdb3c2d66fbf90","modified":1526370154215},{"_id":"source/_posts/life/2016-07-28-theories-of-psychology.md","hash":"56a8765d42d260c67d3ab0646979dfbf1359a1d1","modified":1526370154216},{"_id":"source/_posts/life/2017-01-24-5years.md","hash":"ec6af1d7604894ad061829d849d3567615770962","modified":1526370154217},{"_id":"source/_posts/linux/2016-03-08-ubuntu-14.04.3LTS-ssh-unreadable-code.md","hash":"b5f3e56aac804318793522244ba0dc00a4c74b77","modified":1526370154219},{"_id":"source/_posts/linux/2016-03-22-cron-expression.md","hash":"525632f2d2b7a4fac4067314a9c957d729c8a793","modified":1526370154221},{"_id":"source/_posts/linux/2016-06-13-ubuntu14-04-change-charset-from-cn-to-en.md","hash":"1dbee6e711f0f5389fa5a097e18471ebdc48cc88","modified":1526370154222},{"_id":"source/_posts/linux/2016-08-01-ubuntu-base-setting.md","hash":"7e673d02d38be8f7674416a3b398705301a4478c","modified":1526370154223},{"_id":"source/_posts/system/2016-03-22-vbs-send-email.md","hash":"6c53247ba931a9e80767d7a71349954ec286f9b4","modified":1526370154225},{"_id":"source/_posts/system/2016-03-22-vmware-cannot-shudown.md","hash":"c75e95442ed289fa8a5521b77c18252ce5265405","modified":1526370154226},{"_id":"themes/next/layout/_macro/post.swig","hash":"ee7253f48691a577494cd134d42bb9db70c6d8d1","modified":1526370154442},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1526370154440},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"2fdc6f40d7268b0f3b465152b4ccf80021392202","modified":1526370154443},{"_id":"themes/next/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1526370154445},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1526370154447},{"_id":"themes/next/layout/_partials/footer.swig","hash":"8ee918c7e6acc0e683fb3bc88f8ce9f5c2102011","modified":1526370154448},{"_id":"themes/next/layout/_partials/head.swig","hash":"59775dce3398ad32b66da153b507944fa491ca3c","modified":1526370154449},{"_id":"themes/next/layout/_partials/header.swig","hash":"6946b69b5ee1cf74f002ebfd0f824cf3e35b9fb3","modified":1526370154450},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1526370154451},{"_id":"themes/next/layout/_partials/search.swig","hash":"1b86eb85017599392071d1230171e900045f8e69","modified":1526370154452},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1526370154460},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1526370154462},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"2894a5e663bbc291cb9365150c05026b1e90bdee","modified":1526370154484},{"_id":"themes/next/scripts/filters/sticky.js","hash":"4e4c9a837e186f94f256bd6eabb89b138cfc0db6","modified":1526370154492},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1526370154494},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1526370154495},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1526370154496},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1526370154604},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1526370154610},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1526370154611},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1526370154612},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1526370154613},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1526370154614},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1526370154615},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1526370154617},{"_id":"themes/next/source/images/default_avatar.jpg","hash":"24dad8451fc0aea8509e355ce50f65980300940d","modified":1526370154618},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526370154619},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526370154620},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1526370154621},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1526370154622},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526370154623},{"_id":"themes/next/layout/_scripts/bootstrap/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154461},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154465},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154466},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154570},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154571},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154574},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526370154598},{"_id":"source/_posts/architecture/maven/2016-08-01-maven-learning.md","hash":"93e06a96aae2e5aa9bac9753840a0268b8de6219","modified":1526370154193},{"_id":"source/_posts/architecture/mq/2016-08-01-install-rabbit-mq.md","hash":"8f3669b1ec421229999c9ec2c5bba61a30974559","modified":1526370154196},{"_id":"source/_posts/java/springboot/2017-01-03-springboot-test.md","hash":"4e8fc6f448c9d1f822e9da50d607d0d68b85b41f","modified":1526370154207},{"_id":"source/_posts/language/javascript/2016-03-08-js-control-checkbox.md","hash":"00d3ebf55394a99c2650a9c2e0a6cb3e9e984c7e","modified":1526370154209},{"_id":"source/_posts/language/javascript/2017-04-13-js-control-different-timezone.md","hash":"ec4a45cbc2825a8150431bc25f944b2cf5b7c5b2","modified":1526370154211},{"_id":"source/_posts/language/python/2018-07-18-lagou-9600s-cloud-tag.md","hash":"5d4786e78cee3dbefb93b08466da5b2a92273135","modified":1531896032014},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1526370154455},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1526370154454},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1526370154457},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1526370154458},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"90e4c642c3abc6e3eee31ee3b55afea9b450592a","modified":1526370154464},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526370154467},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"c73e1def5243f3ab545d462b275d8df9d38a8823","modified":1526370154469},{"_id":"themes/next/layout/_scripts/third-party/baidushare.swig","hash":"640d4dda003f54a0dffa4508fba4d91ac0dcfa6e","modified":1526370154476},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1526370154477},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"aebc73513c9cbbbbda2935e2eb18e09bb1c24bf8","modified":1526370154480},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"8eecd19c756df615afb3f5ec6a527cd7bd06d20c","modified":1526370154481},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1526370154483},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1526370154569},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526370154572},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"10ca6744a8594c1a085b50120f4ed0a1ef433f40","modified":1526370154573},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1526370154597},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"8d2ef9b580aeeb8767ef376a25ff092cb3ce3b2e","modified":1526370154600},{"_id":"themes/next/source/css/_variables/base.styl","hash":"7e58b0648d6270e54e1b65a42ab765ad76be0685","modified":1526370154601},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"26b986bb640183f99534d2a20ece4a66c577b870","modified":1526370154602},{"_id":"themes/next/source/css/_variables/default.styl","hash":"17779fa6fa3c9e1262ba100a86a8dec730c2f312","modified":1526370154603},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"f54b58318baceed9b272dad7db2f1f2414915755","modified":1526370154627},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1526370154630},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1526370154625},{"_id":"themes/next/source/js/src/motion.js","hash":"6be9dcb59b7ad5344fda6834b85b8d86d94e6d39","modified":1526370154631},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1526370154634},{"_id":"themes/next/source/js/src/utils.js","hash":"1aaa0d97302bb6478be6da9f17a2ad270105a263","modified":1526370154635},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1526370154638},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1526370154640},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1526370154664},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1526370154666},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1526370154667},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1526370154668},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1526370154672},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1526370154675},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1526370154674},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1526370154676},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1526370154678},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1526370154701},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1526370154705},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1526370154706},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1526370154707},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1526370154709},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1526370154710},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1526370154711},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1526370154719},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1526370154718},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1526370154723},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1526370154725},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1526370154726},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1526370154703},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1526370154471},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1526370154472},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1526370154473},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1526370154474},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1526370154478},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"da8aa3beab56d8c306dd97cf41127a3859e2d00c","modified":1526370154479},{"_id":"themes/next/source/css/_common/_component/posts-expand.styl","hash":"7f85f342f250f45a86cdf03688e556f84678054b","modified":1526370154502},{"_id":"themes/next/source/css/_common/_section/header.styl","hash":"cd6527e4877f62f08e8668b020ec9f9e53f625a9","modified":1526370154504},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1526370154507},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"148b410553f2dec4dff96412997e83302ffd6818","modified":1526370154505},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1526370154508},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1526370154509},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1526370154528},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1526370154552},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2bc7197d8a58b17cc3c349f5b8f75091771e51ee","modified":1526370154562},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1526370154564},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"c02804c259b267d5b09a697ff478de7ce2bef117","modified":1526370154565},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1526370154566},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1526370154567},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"16a98866f5025c050c56e52312228355a16d00d9","modified":1526370154568},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"e4b5b56e1a035c99ebd50d00e93d89e2e8d0b735","modified":1526370154576},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"452e71caf2c37fa5a06f8d9ada81337a57485885","modified":1526370154577},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1526370154578},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"3b0a186e8d9d5cfe30dd611456b61053ea535d7b","modified":1526370154579},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1526370154581},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"f10be4b0c642104a6f533b94ac09e22019aa640e","modified":1526370154582},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1526370154584},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"dd667be3f5f24cebdc15d0262c7d397f23d751c5","modified":1526370154585},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"ea4838886d1fe556a546003e2d228836c7d41d63","modified":1526370154586},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"ecd76494cea5fbf592cc13ba1e4ccdfedbc5bf1b","modified":1526370154587},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"d1bc8f62e4a65354426c4f7affdc857cc227cc8c","modified":1526370154588},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1526370154590},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"330979caddad8f74e2503d746d7408be920ef7b1","modified":1526370154591},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"f575b82c8562a5cf1d0fb586c56a739ae70a35d3","modified":1526370154592},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1526370154593},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"69bb2e38bfa22f70c0f00cd231c2b8422861b439","modified":1526370154594},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1526370154596},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8b37699252a24741716b40fb70972a77453cbfe1","modified":1526370154633},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526370154642},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526370154644},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526370154646},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526370154645},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526370154648},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526370154649},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1526370154660},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1526370154661},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1526370154663},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1526370154669},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526370154671},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1526370154680},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1526370154682},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1526370154683},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1526370154699},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1526370154714},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1526370154716},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1526370154689},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1526370154691},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1526370154698},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1526370154722},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1526370154513},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1526370154511},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c88f11fdd934045b093e96f611a453b09d6692d5","modified":1526370154516},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"f168f79ba8cc80c775907da4cc00d01771ac1e1e","modified":1526370154517},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1526370154518},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"627cdd38b34b15c9fc17f4dc332b1be928f8ed0d","modified":1526370154519},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"9f0606d4d94ffa6bd77f91628507bba19133cf36","modified":1526370154521},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"8539c1122966a6aea64267d48af05603caa5fa29","modified":1526370154523},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"6c34f2cf9ad9b9b787007cfca522deeb6b1ae3b7","modified":1526370154525},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1526370154526},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1526370154527},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"68ed6b0ad40745cb07ecd38f13960bb217aef848","modified":1526370154530},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1526370154531},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"22ceb6b6dac7e1b4ced6c9b15390c97cf43627cd","modified":1526370154533},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1526370154534},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"5dba4ca272d7c767b57233cd99fba95dbf82153f","modified":1526370154535},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"aeef7e3d59d5cb910023c4c4b8eee6fa3cd242c7","modified":1526370154536},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1526370154537},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1526370154538},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"758d64ad65f718537ab5bfe5592a626abc40987e","modified":1526370154540},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1526370154541},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"98ab1039ec0726ba217a2f318ca53b737d07857c","modified":1526370154542},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1526370154544},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"70407054dbb5180c69e50ea2655d32835494394e","modified":1526370154545},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1526370154546},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1526370154547},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"97832be1f30b631dbc2202524918b6eb55e74c4b","modified":1526370154548},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1526370154550},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"830c376f15ee839179c40d6b655d180eff914f45","modified":1526370154550},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"99c4b7d1459569cda394c733845d368008a180bf","modified":1526370154552},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1526370154555},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1526370154554},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1526370154556},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1526370154557},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1526370154559},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1526370154560},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"16b01b24f02370229a4cbb95e094c397e3e6d079","modified":1526370154561},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1526370154514},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526370154651},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1526370154653},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1526370154654},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1526370154655},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1526370154656},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1526370154658},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1526370154696},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1526370154694}],"Category":[{"name":"oracle","_id":"cjl1wa8em00042wh5n1y4bytj"},{"name":"mysql","_id":"cjl1wa8es00092wh5qsbapr4c"},{"name":"docker学习","_id":"cjl1wa8ey000e2wh56kgjshts"},{"name":"Go","_id":"cjl1wa8fb000p2wh5irkuv26f"},{"name":"Java","_id":"cjl1wa8fe000x2wh56sper5g5"},{"name":"程序员","_id":"cjl1wa8fk00142wh5ngxtl55p"},{"name":"魔方","_id":"cjl1wa8fm00172wh5mhrucadj"},{"name":"心理学","_id":"cjl1wa8fn001c2wh53j47mp2f"},{"name":"人生历程","_id":"cjl1wa8fo001g2wh56f846axy"},{"name":"Ubuntu Linux","_id":"cjl1wa8fp001k2wh5ymbkyao9"},{"name":"Linux","_id":"cjl1wa8fq001n2wh5znyvhbc0"},{"name":"windows","_id":"cjl1wa8fu001z2wh59wst1ibi"},{"name":"VMware","_id":"cjl1wa8fv00242wh59om4nsew"},{"name":"Maven","_id":"cjl1wa8gt002y2wh5f2fzdau2"},{"name":"MQ","_id":"cjl1wa8gx00332wh59q60d77j"},{"name":"SpringBoot","_id":"cjl1wa8h000382wh55mpg1cbw"},{"name":"javascript","_id":"cjl1wa8h1003c2wh53vr365ph"},{"name":"timezone","_id":"cjl1wa8h2003f2wh5wssieq5a"},{"name":"爬虫 结巴分词 标签云 Node.js Python","_id":"cjl1wa8h4003k2wh5to0v3tx9"}],"Data":[],"Page":[{"title":"分类","date":"2016-02-18T03:32:57.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"title: 分类\ndate: 2016-02-18 11:32:57\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-05-15T07:42:34.229Z","path":"categories/index.html","layout":"page","_id":"cjl1wa8bp00002wh50fgqtm9o","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tagcloud","date":"2016-02-18T03:36:49.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: Tagcloud\ndate: 2016-02-18 11:36:49\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-05-15T07:42:34.230Z","path":"tags/index.html","layout":"page","_id":"cjl1wa8bs00012wh5gg574x3r","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"oracle 数据库死锁查询以及解锁","date":"2016-07-28T06:49:25.000Z","_content":"查询产生死锁的session以及相关信息：\n```\nselect t2.SID,t2.SERIAL#,*\nfrom v$locked_object t1,v$session t2,v$sqltext t3\nwhere t1.session_id=t2.sid\nand t2.sql_address=t3.address\norder by t2.logon_time;\n```\n解锁语句：\n```\nalter system kill session '134,42671' immediate;\n```\n134,42671为t2.SID,t2.SERIAL#两个字段\n\n能产生死锁，很大部分是由于SQL语句写的有问题或者对表的锁控制有问题，解除锁仅仅只是消除现象，根源还要细细检查。","source":"_posts/database/2016-07-28-oracle-dead-lock-query-and-kill.md","raw":"title: oracle 数据库死锁查询以及解锁\ndate: 2016/07/28 14:49:25\ncategories:\n- oracle\ntags: [oracle,死锁]\n---\n查询产生死锁的session以及相关信息：\n```\nselect t2.SID,t2.SERIAL#,*\nfrom v$locked_object t1,v$session t2,v$sqltext t3\nwhere t1.session_id=t2.sid\nand t2.sql_address=t3.address\norder by t2.logon_time;\n```\n解锁语句：\n```\nalter system kill session '134,42671' immediate;\n```\n134,42671为t2.SID,t2.SERIAL#两个字段\n\n能产生死锁，很大部分是由于SQL语句写的有问题或者对表的锁控制有问题，解除锁仅仅只是消除现象，根源还要细细检查。","slug":"database/2016-07-28-oracle-dead-lock-query-and-kill","published":1,"updated":"2018-05-15T07:42:34.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8ee00022wh5mphnhwez","content":"<p>查询产生死锁的session以及相关信息：<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select <span class=\"built_in\">t2</span>.SID,<span class=\"built_in\">t2</span>.SERIAL<span class=\"comment\">#,*</span></span><br><span class=\"line\">from v$locked_object <span class=\"built_in\">t1</span>,v$session <span class=\"built_in\">t2</span>,v$sqltext <span class=\"built_in\">t3</span></span><br><span class=\"line\">where <span class=\"built_in\">t1</span>.session_id=<span class=\"built_in\">t2</span>.sid</span><br><span class=\"line\"><span class=\"keyword\">and </span><span class=\"built_in\">t2</span>.sql_address=<span class=\"built_in\">t3</span>.<span class=\"keyword\">address</span></span><br><span class=\"line\"><span class=\"keyword\">order </span><span class=\"keyword\">by </span><span class=\"built_in\">t2</span>.logon_time<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>\n<p>解锁语句：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">system</span> <span class=\"keyword\">kill</span> <span class=\"keyword\">session</span> <span class=\"string\">'134,42671'</span> <span class=\"keyword\">immediate</span>;</span><br></pre></td></tr></table></figure></p>\n<p>134,42671为t2.SID,t2.SERIAL#两个字段</p>\n<p>能产生死锁，很大部分是由于SQL语句写的有问题或者对表的锁控制有问题，解除锁仅仅只是消除现象，根源还要细细检查。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>查询产生死锁的session以及相关信息：<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select <span class=\"built_in\">t2</span>.SID,<span class=\"built_in\">t2</span>.SERIAL<span class=\"comment\">#,*</span></span><br><span class=\"line\">from v$locked_object <span class=\"built_in\">t1</span>,v$session <span class=\"built_in\">t2</span>,v$sqltext <span class=\"built_in\">t3</span></span><br><span class=\"line\">where <span class=\"built_in\">t1</span>.session_id=<span class=\"built_in\">t2</span>.sid</span><br><span class=\"line\"><span class=\"keyword\">and </span><span class=\"built_in\">t2</span>.sql_address=<span class=\"built_in\">t3</span>.<span class=\"keyword\">address</span></span><br><span class=\"line\"><span class=\"keyword\">order </span><span class=\"keyword\">by </span><span class=\"built_in\">t2</span>.logon_time<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>\n<p>解锁语句：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">system</span> <span class=\"keyword\">kill</span> <span class=\"keyword\">session</span> <span class=\"string\">'134,42671'</span> <span class=\"keyword\">immediate</span>;</span><br></pre></td></tr></table></figure></p>\n<p>134,42671为t2.SID,t2.SERIAL#两个字段</p>\n<p>能产生死锁，很大部分是由于SQL语句写的有问题或者对表的锁控制有问题，解除锁仅仅只是消除现象，根源还要细细检查。</p>\n","sticky":0},{"title":"mysql问题手册","date":"2016-05-12T05:00:25.000Z","_content":"\n###  root忘记密码\n```\n/etc/init.d/mysql stop\nmysqld_safe --user=mysql --skip-grant-tables --skip-networking &\nmysql -u root mysql\n```\n进入之后随便改密码和host\n\n### 查询慢sql\n```\nset global slow_query_log=1;\ntail -f -n200 /var/lib/mysql/localhost-slow.log\n```","source":"_posts/database/2016-05-12-mysql-problems.md","raw":"title: mysql问题手册\ndate: 2016/05/12 13:00:25\ncategories:\n- mysql\ntags: [mysql,mysql-safe]\n---\n\n###  root忘记密码\n```\n/etc/init.d/mysql stop\nmysqld_safe --user=mysql --skip-grant-tables --skip-networking &\nmysql -u root mysql\n```\n进入之后随便改密码和host\n\n### 查询慢sql\n```\nset global slow_query_log=1;\ntail -f -n200 /var/lib/mysql/localhost-slow.log\n```","slug":"database/2016-05-12-mysql-problems","published":1,"updated":"2018-05-15T07:42:34.197Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8ek00032wh5qdpo8sxx","content":"<h3 id=\"root忘记密码\"><a href=\"#root忘记密码\" class=\"headerlink\" title=\"root忘记密码\"></a>root忘记密码</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/etc/init.d/mysql</span> stop</span><br><span class=\"line\">mysqld_safe <span class=\"params\">--user=mysql</span> <span class=\"params\">--skip-grant-tables</span> <span class=\"params\">--skip-networking</span> &amp;</span><br><span class=\"line\">mysql -u root mysql</span><br></pre></td></tr></table></figure>\n<p>进入之后随便改密码和host</p>\n<h3 id=\"查询慢sql\"><a href=\"#查询慢sql\" class=\"headerlink\" title=\"查询慢sql\"></a>查询慢sql</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global slow_query_log=<span class=\"number\">1</span>;</span><br><span class=\"line\">tail -f -n200 /var/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">mysql</span>/<span class=\"title\">localhost</span>-<span class=\"title\">slow</span>.<span class=\"title\">log</span></span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"root忘记密码\"><a href=\"#root忘记密码\" class=\"headerlink\" title=\"root忘记密码\"></a>root忘记密码</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/etc/init.d/mysql</span> stop</span><br><span class=\"line\">mysqld_safe <span class=\"params\">--user=mysql</span> <span class=\"params\">--skip-grant-tables</span> <span class=\"params\">--skip-networking</span> &amp;</span><br><span class=\"line\">mysql -u root mysql</span><br></pre></td></tr></table></figure>\n<p>进入之后随便改密码和host</p>\n<h3 id=\"查询慢sql\"><a href=\"#查询慢sql\" class=\"headerlink\" title=\"查询慢sql\"></a>查询慢sql</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global slow_query_log=<span class=\"number\">1</span>;</span><br><span class=\"line\">tail -f -n200 /var/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">mysql</span>/<span class=\"title\">localhost</span>-<span class=\"title\">slow</span>.<span class=\"title\">log</span></span></span><br></pre></td></tr></table></figure>","sticky":0},{"title":"docker学习-01-安装","date":"2016-08-01T07:49:25.000Z","_content":"\n学习`docker`一段时间了，有部分常用的服务也转到了docker上，虽然是起了virtualbox运行了个ubuntu，然后再搭建docker环境。\n暂时工作还是依赖了windows环境，所以兼学习兼工作的折腾了一段时间。\n目前使用过的服务有`register` `mysql` `docker-ui` `git-lab`\n从[官方hub](http://hub.docker.com)下载镜像在我的网络里十分慢，所以我一般使用Dockerfile构建镜像。作为补充，也可以从阿里的hub搜索\n[阿里hub](https://dev.aliyun.com/search.html)\n目前官网能搜到的镜像一般都提供github的Dockerfile连接\n\n## 安装\ndocker 的安装比较简单，尤其是ubuntu下，官网也提供了方法，具体如下\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n安装的是官网最新的发布版\n```\ndocker --version\nDocker version 1.11.2, build b9f10c9\n```\n一个 helloworld\n```\ndocker run -ti alpine:3.4 echo 'hello world'\n```\n如果你本地没有pull过任何镜像，以上命令会从docker镜像库中下载一个名为alpine，tag为3.4的镜像，这个镜像超级小[<5MB]，很多镜像以此镜像作为base镜像\n然后ti的命令表示以终端交互的方式运行后面的命令`echo 'hello world'`\n\n## docker 命令\n学习docker的道路不易，单一级命令就很多，二级命令更是繁杂，但按实际使用，常用的组合经常用经常敲就熟了，也不怕记不住，毕竟有一些工具[后面讲]\n贴一下一级命令\n```\nroot@ubuntu:~# docker --help\nUsage: docker [OPTIONS] COMMAND [arg...]\n       docker daemon [ --help | ... ]\n       docker [ --help | -v | --version ]\n\nA self-sufficient runtime for containers.\n\nOptions:\n\n  --config=~/.docker              Location of client config files\n  -D, --debug                     Enable debug mode\n  -H, --host=[]                   Daemon socket(s) to connect to\n  -h, --help                      Print usage\n  -l, --log-level=info            Set the logging level\n  --tls                           Use TLS; implied by --tlsverify\n  --tlscacert=~/.docker/ca.pem    Trust certs signed only by this CA\n  --tlscert=~/.docker/cert.pem    Path to TLS certificate file\n  --tlskey=~/.docker/key.pem      Path to TLS key file\n  --tlsverify                     Use TLS and verify the remote\n  -v, --version                   Print version information and quit\n\nCommands:\n    attach    Attach to a running container\n    build     Build an image from a Dockerfile\n    commit    Create a new image from a container's changes\n    cp        Copy files/folders between a container and the local filesystem\n    create    Create a new container\n    diff      Inspect changes on a container's filesystem\n    events    Get real time events from the server\n    exec      Run a command in a running container\n    export    Export a container's filesystem as a tar archive\n    history   Show the history of an image\n    images    List images\n    import    Import the contents from a tarball to create a filesystem image\n    info      Display system-wide information\n    inspect   Return low-level information on a container or image\n    kill      Kill a running container\n    load      Load an image from a tar archive or STDIN\n    login     Log in to a Docker registry\n    logout    Log out from a Docker registry\n    logs      Fetch the logs of a container\n    network   Manage Docker networks\n    pause     Pause all processes within a container\n    port      List port mappings or a specific mapping for the CONTAINER\n    ps        List containers\n    pull      Pull an image or a repository from a registry\n    push      Push an image or a repository to a registry\n    rename    Rename a container\n    restart   Restart a container\n    rm        Remove one or more containers\n    rmi       Remove one or more images\n    run       Run a command in a new container\n    save      Save one or more images to a tar archive\n    search    Search the Docker Hub for images\n    start     Start one or more stopped containers\n    stats     Display a live stream of container(s) resource usage statistics\n    stop      Stop a running container\n    tag       Tag an image into a repository\n    top       Display the running processes of a container\n    unpause   Unpause all processes within a container\n    update    Update configuration of one or more containers\n    version   Show the Docker version information\n    volume    Manage Docker volumes\n    wait      Block until a container stops, then print its exit code\n\nRun 'docker COMMAND --help' for more information on a command.\n```\n\n\n","source":"_posts/dockers/2016-08-01-docker-learning-01.md","raw":"title: docker学习-01-安装\ndate: 2016/08/01 15:49:25\ncategories:\n- docker学习\ntags: [docker]\n---\n\n学习`docker`一段时间了，有部分常用的服务也转到了docker上，虽然是起了virtualbox运行了个ubuntu，然后再搭建docker环境。\n暂时工作还是依赖了windows环境，所以兼学习兼工作的折腾了一段时间。\n目前使用过的服务有`register` `mysql` `docker-ui` `git-lab`\n从[官方hub](http://hub.docker.com)下载镜像在我的网络里十分慢，所以我一般使用Dockerfile构建镜像。作为补充，也可以从阿里的hub搜索\n[阿里hub](https://dev.aliyun.com/search.html)\n目前官网能搜到的镜像一般都提供github的Dockerfile连接\n\n## 安装\ndocker 的安装比较简单，尤其是ubuntu下，官网也提供了方法，具体如下\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n安装的是官网最新的发布版\n```\ndocker --version\nDocker version 1.11.2, build b9f10c9\n```\n一个 helloworld\n```\ndocker run -ti alpine:3.4 echo 'hello world'\n```\n如果你本地没有pull过任何镜像，以上命令会从docker镜像库中下载一个名为alpine，tag为3.4的镜像，这个镜像超级小[<5MB]，很多镜像以此镜像作为base镜像\n然后ti的命令表示以终端交互的方式运行后面的命令`echo 'hello world'`\n\n## docker 命令\n学习docker的道路不易，单一级命令就很多，二级命令更是繁杂，但按实际使用，常用的组合经常用经常敲就熟了，也不怕记不住，毕竟有一些工具[后面讲]\n贴一下一级命令\n```\nroot@ubuntu:~# docker --help\nUsage: docker [OPTIONS] COMMAND [arg...]\n       docker daemon [ --help | ... ]\n       docker [ --help | -v | --version ]\n\nA self-sufficient runtime for containers.\n\nOptions:\n\n  --config=~/.docker              Location of client config files\n  -D, --debug                     Enable debug mode\n  -H, --host=[]                   Daemon socket(s) to connect to\n  -h, --help                      Print usage\n  -l, --log-level=info            Set the logging level\n  --tls                           Use TLS; implied by --tlsverify\n  --tlscacert=~/.docker/ca.pem    Trust certs signed only by this CA\n  --tlscert=~/.docker/cert.pem    Path to TLS certificate file\n  --tlskey=~/.docker/key.pem      Path to TLS key file\n  --tlsverify                     Use TLS and verify the remote\n  -v, --version                   Print version information and quit\n\nCommands:\n    attach    Attach to a running container\n    build     Build an image from a Dockerfile\n    commit    Create a new image from a container's changes\n    cp        Copy files/folders between a container and the local filesystem\n    create    Create a new container\n    diff      Inspect changes on a container's filesystem\n    events    Get real time events from the server\n    exec      Run a command in a running container\n    export    Export a container's filesystem as a tar archive\n    history   Show the history of an image\n    images    List images\n    import    Import the contents from a tarball to create a filesystem image\n    info      Display system-wide information\n    inspect   Return low-level information on a container or image\n    kill      Kill a running container\n    load      Load an image from a tar archive or STDIN\n    login     Log in to a Docker registry\n    logout    Log out from a Docker registry\n    logs      Fetch the logs of a container\n    network   Manage Docker networks\n    pause     Pause all processes within a container\n    port      List port mappings or a specific mapping for the CONTAINER\n    ps        List containers\n    pull      Pull an image or a repository from a registry\n    push      Push an image or a repository to a registry\n    rename    Rename a container\n    restart   Restart a container\n    rm        Remove one or more containers\n    rmi       Remove one or more images\n    run       Run a command in a new container\n    save      Save one or more images to a tar archive\n    search    Search the Docker Hub for images\n    start     Start one or more stopped containers\n    stats     Display a live stream of container(s) resource usage statistics\n    stop      Stop a running container\n    tag       Tag an image into a repository\n    top       Display the running processes of a container\n    unpause   Unpause all processes within a container\n    update    Update configuration of one or more containers\n    version   Show the Docker version information\n    volume    Manage Docker volumes\n    wait      Block until a container stops, then print its exit code\n\nRun 'docker COMMAND --help' for more information on a command.\n```\n\n\n","slug":"dockers/2016-08-01-docker-learning-01","published":1,"updated":"2018-05-15T07:42:34.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8ep00062wh5obk4qfzr","content":"<p>学习<code>docker</code>一段时间了，有部分常用的服务也转到了docker上，虽然是起了virtualbox运行了个ubuntu，然后再搭建docker环境。<br>暂时工作还是依赖了windows环境，所以兼学习兼工作的折腾了一段时间。<br>目前使用过的服务有<code>register</code> <code>mysql</code> <code>docker-ui</code> <code>git-lab</code><br>从<a href=\"http://hub.docker.com\" target=\"_blank\" rel=\"noopener\">官方hub</a>下载镜像在我的网络里十分慢，所以我一般使用Dockerfile构建镜像。作为补充，也可以从阿里的hub搜索<br><a href=\"https://dev.aliyun.com/search.html\" target=\"_blank\" rel=\"noopener\">阿里hub</a><br>目前官网能搜到的镜像一般都提供github的Dockerfile连接</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>docker 的安装比较简单，尤其是ubuntu下，官网也提供了方法，具体如下<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL http<span class=\"variable\">s:</span>//<span class=\"built_in\">get</span>.docker.<span class=\"keyword\">com</span>/ | <span class=\"keyword\">sh</span></span><br></pre></td></tr></table></figure></p>\n<p>安装的是官网最新的发布版<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"comment\">--version</span></span><br><span class=\"line\">Docker <span class=\"built_in\">version</span> <span class=\"number\">1.11</span><span class=\"number\">.2</span>, build b9f10c9</span><br></pre></td></tr></table></figure></p>\n<p>一个 helloworld<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"keyword\">run</span><span class=\"bash\"> -ti alpine:3.4 <span class=\"built_in\">echo</span> <span class=\"string\">'hello world'</span></span></span><br></pre></td></tr></table></figure></p>\n<p>如果你本地没有pull过任何镜像，以上命令会从docker镜像库中下载一个名为alpine，tag为3.4的镜像，这个镜像超级小[&lt;5MB]，很多镜像以此镜像作为base镜像<br>然后ti的命令表示以终端交互的方式运行后面的命令<code>echo &#39;hello world&#39;</code></p>\n<h2 id=\"docker-命令\"><a href=\"#docker-命令\" class=\"headerlink\" title=\"docker 命令\"></a>docker 命令</h2><p>学习docker的道路不易，单一级命令就很多，二级命令更是繁杂，但按实际使用，常用的组合经常用经常敲就熟了，也不怕记不住，毕竟有一些工具[后面讲]<br>贴一下一级命令<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --<span class=\"keyword\">help</span></span><br><span class=\"line\">Usage: docker [OPTIONS] COMMAND [arg...]</span><br><span class=\"line\">       docker daemon [ --<span class=\"keyword\">help</span> | ... ]</span><br><span class=\"line\">       docker [ --<span class=\"keyword\">help</span> | -v | --<span class=\"keyword\">version</span> ]</span><br><span class=\"line\"></span><br><span class=\"line\">A self-sufficient runtime <span class=\"keyword\">for</span> containers.</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\"></span><br><span class=\"line\">  --config=~/.docker              Location of client config files</span><br><span class=\"line\">  -<span class=\"keyword\">D</span>, --debug                     Enable debug mode</span><br><span class=\"line\">  -<span class=\"keyword\">H</span>, --host=[]                   Daemon socket(s) to connect to</span><br><span class=\"line\">  -<span class=\"keyword\">h</span>, --<span class=\"keyword\">help</span>                      <span class=\"keyword\">Print</span> usage</span><br><span class=\"line\">  -<span class=\"keyword\">l</span>, --<span class=\"keyword\">log</span>-level=info            <span class=\"keyword\">Set</span> the logging level</span><br><span class=\"line\">  --tls                           <span class=\"keyword\">Use</span> TLS; implied <span class=\"keyword\">by</span> --tlsverify</span><br><span class=\"line\">  --tlscacert=~/.docker/<span class=\"keyword\">ca</span>.pem    Trust certs signed only <span class=\"keyword\">by</span> this <span class=\"keyword\">CA</span></span><br><span class=\"line\">  --tlscert=~/.docker/cert.pem    Path to TLS certificate <span class=\"keyword\">file</span></span><br><span class=\"line\">  --tlskey=~/.docker/key.pem      Path to TLS key <span class=\"keyword\">file</span></span><br><span class=\"line\">  --tlsverify                     <span class=\"keyword\">Use</span> TLS and verify the remote</span><br><span class=\"line\">  -v, --<span class=\"keyword\">version</span>                   <span class=\"keyword\">Print</span> <span class=\"keyword\">version</span> information and quit</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">    attach    Attach to a running container</span><br><span class=\"line\">    build     Build <span class=\"keyword\">an</span> image from a Dockerfile</span><br><span class=\"line\">    commit    Create a new image from a container's changes</span><br><span class=\"line\">    cp        <span class=\"keyword\">Copy</span> files/folders between a container and the <span class=\"keyword\">local</span> filesystem</span><br><span class=\"line\">    create    Create a new container</span><br><span class=\"line\">    diff      <span class=\"keyword\">Inspect</span> changes <span class=\"keyword\">on</span> a container's filesystem</span><br><span class=\"line\">    events    Get real time events from the server</span><br><span class=\"line\">    exec      <span class=\"keyword\">Run</span> a command <span class=\"keyword\">in</span> a running container</span><br><span class=\"line\">    export    Export a container's filesystem <span class=\"keyword\">as</span> a tar archive</span><br><span class=\"line\">    history   Show the history of <span class=\"keyword\">an</span> image</span><br><span class=\"line\">    images    <span class=\"keyword\">List</span> images</span><br><span class=\"line\">    import    Import the contents from a tarball to create a filesystem image</span><br><span class=\"line\">    info      <span class=\"keyword\">Display</span> system-wide information</span><br><span class=\"line\">    <span class=\"keyword\">inspect</span>   <span class=\"keyword\">Return</span> low-level information <span class=\"keyword\">on</span> a container or image</span><br><span class=\"line\">    kill      Kill a running container</span><br><span class=\"line\">    load      Load <span class=\"keyword\">an</span> image from a tar archive or STDIN</span><br><span class=\"line\">    login     <span class=\"keyword\">Log</span> <span class=\"keyword\">in</span> to a Docker registry</span><br><span class=\"line\">    logout    <span class=\"keyword\">Log</span> <span class=\"keyword\">out</span> from a Docker registry</span><br><span class=\"line\">    logs      Fetch the logs of a container</span><br><span class=\"line\">    network   Manage Docker networks</span><br><span class=\"line\">    <span class=\"keyword\">pause</span>     <span class=\"keyword\">Pause</span> all processes within a container</span><br><span class=\"line\">    port      <span class=\"keyword\">List</span> port mappings or a specific mapping <span class=\"keyword\">for</span> the CONTAINER</span><br><span class=\"line\">    ps        <span class=\"keyword\">List</span> containers</span><br><span class=\"line\">    pull      Pull <span class=\"keyword\">an</span> image or a repository from a registry</span><br><span class=\"line\">    push      Push <span class=\"keyword\">an</span> image or a repository to a registry</span><br><span class=\"line\">    <span class=\"keyword\">rename</span>    <span class=\"keyword\">Rename</span> a container</span><br><span class=\"line\">    restart   Restart a container</span><br><span class=\"line\">    <span class=\"keyword\">rm</span>        Remove <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> containers</span><br><span class=\"line\">    rmi       Remove <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> images</span><br><span class=\"line\">    <span class=\"keyword\">run</span>       <span class=\"keyword\">Run</span> a command <span class=\"keyword\">in</span> a new container</span><br><span class=\"line\">    <span class=\"keyword\">save</span>      <span class=\"keyword\">Save</span> <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> images to a tar archive</span><br><span class=\"line\">    <span class=\"keyword\">search</span>    <span class=\"keyword\">Search</span> the Docker Hub <span class=\"keyword\">for</span> images</span><br><span class=\"line\">    start     Start <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> stopped containers</span><br><span class=\"line\">    stats     <span class=\"keyword\">Display</span> a live stream of container(s) resource usage statistics</span><br><span class=\"line\">    stop      Stop a running container</span><br><span class=\"line\">    tag       Tag <span class=\"keyword\">an</span> image into a repository</span><br><span class=\"line\">    top       <span class=\"keyword\">Display</span> the running processes of a container</span><br><span class=\"line\">    unpause   Unpause all processes within a container</span><br><span class=\"line\">    <span class=\"keyword\">update</span>    <span class=\"keyword\">Update</span> configuration of <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> containers</span><br><span class=\"line\">    <span class=\"keyword\">version</span>   Show the Docker <span class=\"keyword\">version</span> information</span><br><span class=\"line\">    volume    Manage Docker volumes</span><br><span class=\"line\">    wait      Block until a container stops, then <span class=\"keyword\">print</span> its <span class=\"keyword\">exit</span> code</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Run</span> 'docker COMMAND --<span class=\"keyword\">help</span>' <span class=\"keyword\">for</span> <span class=\"keyword\">more</span> information <span class=\"keyword\">on</span> a command.</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>学习<code>docker</code>一段时间了，有部分常用的服务也转到了docker上，虽然是起了virtualbox运行了个ubuntu，然后再搭建docker环境。<br>暂时工作还是依赖了windows环境，所以兼学习兼工作的折腾了一段时间。<br>目前使用过的服务有<code>register</code> <code>mysql</code> <code>docker-ui</code> <code>git-lab</code><br>从<a href=\"http://hub.docker.com\" target=\"_blank\" rel=\"noopener\">官方hub</a>下载镜像在我的网络里十分慢，所以我一般使用Dockerfile构建镜像。作为补充，也可以从阿里的hub搜索<br><a href=\"https://dev.aliyun.com/search.html\" target=\"_blank\" rel=\"noopener\">阿里hub</a><br>目前官网能搜到的镜像一般都提供github的Dockerfile连接</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>docker 的安装比较简单，尤其是ubuntu下，官网也提供了方法，具体如下<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL http<span class=\"variable\">s:</span>//<span class=\"built_in\">get</span>.docker.<span class=\"keyword\">com</span>/ | <span class=\"keyword\">sh</span></span><br></pre></td></tr></table></figure></p>\n<p>安装的是官网最新的发布版<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"comment\">--version</span></span><br><span class=\"line\">Docker <span class=\"built_in\">version</span> <span class=\"number\">1.11</span><span class=\"number\">.2</span>, build b9f10c9</span><br></pre></td></tr></table></figure></p>\n<p>一个 helloworld<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"keyword\">run</span><span class=\"bash\"> -ti alpine:3.4 <span class=\"built_in\">echo</span> <span class=\"string\">'hello world'</span></span></span><br></pre></td></tr></table></figure></p>\n<p>如果你本地没有pull过任何镜像，以上命令会从docker镜像库中下载一个名为alpine，tag为3.4的镜像，这个镜像超级小[&lt;5MB]，很多镜像以此镜像作为base镜像<br>然后ti的命令表示以终端交互的方式运行后面的命令<code>echo &#39;hello world&#39;</code></p>\n<h2 id=\"docker-命令\"><a href=\"#docker-命令\" class=\"headerlink\" title=\"docker 命令\"></a>docker 命令</h2><p>学习docker的道路不易，单一级命令就很多，二级命令更是繁杂，但按实际使用，常用的组合经常用经常敲就熟了，也不怕记不住，毕竟有一些工具[后面讲]<br>贴一下一级命令<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --<span class=\"keyword\">help</span></span><br><span class=\"line\">Usage: docker [OPTIONS] COMMAND [arg...]</span><br><span class=\"line\">       docker daemon [ --<span class=\"keyword\">help</span> | ... ]</span><br><span class=\"line\">       docker [ --<span class=\"keyword\">help</span> | -v | --<span class=\"keyword\">version</span> ]</span><br><span class=\"line\"></span><br><span class=\"line\">A self-sufficient runtime <span class=\"keyword\">for</span> containers.</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\"></span><br><span class=\"line\">  --config=~/.docker              Location of client config files</span><br><span class=\"line\">  -<span class=\"keyword\">D</span>, --debug                     Enable debug mode</span><br><span class=\"line\">  -<span class=\"keyword\">H</span>, --host=[]                   Daemon socket(s) to connect to</span><br><span class=\"line\">  -<span class=\"keyword\">h</span>, --<span class=\"keyword\">help</span>                      <span class=\"keyword\">Print</span> usage</span><br><span class=\"line\">  -<span class=\"keyword\">l</span>, --<span class=\"keyword\">log</span>-level=info            <span class=\"keyword\">Set</span> the logging level</span><br><span class=\"line\">  --tls                           <span class=\"keyword\">Use</span> TLS; implied <span class=\"keyword\">by</span> --tlsverify</span><br><span class=\"line\">  --tlscacert=~/.docker/<span class=\"keyword\">ca</span>.pem    Trust certs signed only <span class=\"keyword\">by</span> this <span class=\"keyword\">CA</span></span><br><span class=\"line\">  --tlscert=~/.docker/cert.pem    Path to TLS certificate <span class=\"keyword\">file</span></span><br><span class=\"line\">  --tlskey=~/.docker/key.pem      Path to TLS key <span class=\"keyword\">file</span></span><br><span class=\"line\">  --tlsverify                     <span class=\"keyword\">Use</span> TLS and verify the remote</span><br><span class=\"line\">  -v, --<span class=\"keyword\">version</span>                   <span class=\"keyword\">Print</span> <span class=\"keyword\">version</span> information and quit</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">    attach    Attach to a running container</span><br><span class=\"line\">    build     Build <span class=\"keyword\">an</span> image from a Dockerfile</span><br><span class=\"line\">    commit    Create a new image from a container's changes</span><br><span class=\"line\">    cp        <span class=\"keyword\">Copy</span> files/folders between a container and the <span class=\"keyword\">local</span> filesystem</span><br><span class=\"line\">    create    Create a new container</span><br><span class=\"line\">    diff      <span class=\"keyword\">Inspect</span> changes <span class=\"keyword\">on</span> a container's filesystem</span><br><span class=\"line\">    events    Get real time events from the server</span><br><span class=\"line\">    exec      <span class=\"keyword\">Run</span> a command <span class=\"keyword\">in</span> a running container</span><br><span class=\"line\">    export    Export a container's filesystem <span class=\"keyword\">as</span> a tar archive</span><br><span class=\"line\">    history   Show the history of <span class=\"keyword\">an</span> image</span><br><span class=\"line\">    images    <span class=\"keyword\">List</span> images</span><br><span class=\"line\">    import    Import the contents from a tarball to create a filesystem image</span><br><span class=\"line\">    info      <span class=\"keyword\">Display</span> system-wide information</span><br><span class=\"line\">    <span class=\"keyword\">inspect</span>   <span class=\"keyword\">Return</span> low-level information <span class=\"keyword\">on</span> a container or image</span><br><span class=\"line\">    kill      Kill a running container</span><br><span class=\"line\">    load      Load <span class=\"keyword\">an</span> image from a tar archive or STDIN</span><br><span class=\"line\">    login     <span class=\"keyword\">Log</span> <span class=\"keyword\">in</span> to a Docker registry</span><br><span class=\"line\">    logout    <span class=\"keyword\">Log</span> <span class=\"keyword\">out</span> from a Docker registry</span><br><span class=\"line\">    logs      Fetch the logs of a container</span><br><span class=\"line\">    network   Manage Docker networks</span><br><span class=\"line\">    <span class=\"keyword\">pause</span>     <span class=\"keyword\">Pause</span> all processes within a container</span><br><span class=\"line\">    port      <span class=\"keyword\">List</span> port mappings or a specific mapping <span class=\"keyword\">for</span> the CONTAINER</span><br><span class=\"line\">    ps        <span class=\"keyword\">List</span> containers</span><br><span class=\"line\">    pull      Pull <span class=\"keyword\">an</span> image or a repository from a registry</span><br><span class=\"line\">    push      Push <span class=\"keyword\">an</span> image or a repository to a registry</span><br><span class=\"line\">    <span class=\"keyword\">rename</span>    <span class=\"keyword\">Rename</span> a container</span><br><span class=\"line\">    restart   Restart a container</span><br><span class=\"line\">    <span class=\"keyword\">rm</span>        Remove <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> containers</span><br><span class=\"line\">    rmi       Remove <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> images</span><br><span class=\"line\">    <span class=\"keyword\">run</span>       <span class=\"keyword\">Run</span> a command <span class=\"keyword\">in</span> a new container</span><br><span class=\"line\">    <span class=\"keyword\">save</span>      <span class=\"keyword\">Save</span> <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> images to a tar archive</span><br><span class=\"line\">    <span class=\"keyword\">search</span>    <span class=\"keyword\">Search</span> the Docker Hub <span class=\"keyword\">for</span> images</span><br><span class=\"line\">    start     Start <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> stopped containers</span><br><span class=\"line\">    stats     <span class=\"keyword\">Display</span> a live stream of container(s) resource usage statistics</span><br><span class=\"line\">    stop      Stop a running container</span><br><span class=\"line\">    tag       Tag <span class=\"keyword\">an</span> image into a repository</span><br><span class=\"line\">    top       <span class=\"keyword\">Display</span> the running processes of a container</span><br><span class=\"line\">    unpause   Unpause all processes within a container</span><br><span class=\"line\">    <span class=\"keyword\">update</span>    <span class=\"keyword\">Update</span> configuration of <span class=\"keyword\">one</span> or <span class=\"keyword\">more</span> containers</span><br><span class=\"line\">    <span class=\"keyword\">version</span>   Show the Docker <span class=\"keyword\">version</span> information</span><br><span class=\"line\">    volume    Manage Docker volumes</span><br><span class=\"line\">    wait      Block until a container stops, then <span class=\"keyword\">print</span> its <span class=\"keyword\">exit</span> code</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Run</span> 'docker COMMAND --<span class=\"keyword\">help</span>' <span class=\"keyword\">for</span> <span class=\"keyword\">more</span> information <span class=\"keyword\">on</span> a command.</span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"docker学习-02-docker-run","date":"2016-08-01T08:11:25.000Z","_content":"\ndocker运行镜像靠run，run命令会自动从指定的镜像运行，如果镜像不存在，会先自动pull到本地，docker的文件系统称为layer，有发生变化的layer会新生成一个layer，有一个image id。\n目前我使用docker，一般是用镜像启动成一个容器，然后以后就直接stop/start这个容器\n常用的组合\n端口：-p 3306:3306\n起名：--name mysql\n磁盘映射：-v /data/mysql:/var/lib/mysql\n例如\n```\ndocker run --name mysql -p 3306:3306 -v /data/mysql:/var/lib/mysql mysql:5.6-jessie\n```\n有时候Docker上的系统会对时间敏感，有可能由于时区的原因导致时间不正确，这个时候\n就要使用环境变量设置时区，保证运行环境的正确\n```\ndocker run --rm -it -e TZ=Asia/Shanghai sonatype/nexus date\n```\n贴一下docker run的二级命令，很多个子命令\n```\nroot@ubuntu:~# docker run --help\n`Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]`\nRun a command in a new container\n\n  -a, --attach=[]                 Attach to STDIN, STDOUT or STDERR\n  --add-host=[]                   Add a custom host-to-IP mapping (host:ip)\n  --blkio-weight                  Block IO (relative weight), between 10 and 1000\n  --blkio-weight-device=[]        Block IO weight (relative device weight)\n  --cpu-shares                    CPU shares (relative weight)\n  --cap-add=[]                    Add Linux capabilities\n  --cap-drop=[]                   Drop Linux capabilities\n  --cgroup-parent                 Optional parent cgroup for the container\n  --cidfile                       Write the container ID to the file\n  --cpu-period                    Limit CPU CFS (Completely Fair Scheduler) period\n  --cpu-quota                     Limit CPU CFS (Completely Fair Scheduler) quota\n  --cpuset-cpus                   CPUs in which to allow execution (0-3, 0,1)\n  --cpuset-mems                   MEMs in which to allow execution (0-3, 0,1)\n  -d, --detach                    Run container in background and print container ID\n  --detach-keys                   Override the key sequence for detaching a container\n  --device=[]                     Add a host device to the container\n  --device-read-bps=[]            Limit read rate (bytes per second) from a device\n  --device-read-iops=[]           Limit read rate (IO per second) from a device\n  --device-write-bps=[]           Limit write rate (bytes per second) to a device\n  --device-write-iops=[]          Limit write rate (IO per second) to a device\n  --disable-content-trust=true    Skip image verification\n  --dns=[]                        Set custom DNS servers\n  --dns-opt=[]                    Set DNS options\n  --dns-search=[]                 Set custom DNS search domains\n  -e, --env=[]                    Set environment variables\n  --entrypoint                    Overwrite the default ENTRYPOINT of the image\n  --env-file=[]                   Read in a file of environment variables\n  --expose=[]                     Expose a port or a range of ports\n  --group-add=[]                  Add additional groups to join\n  -h, --hostname                  Container host name\n  --help                          Print usage\n  -i, --interactive               Keep STDIN open even if not attached\n  --ip                            Container IPv4 address (e.g. 172.30.100.104)\n  --ip6                           Container IPv6 address (e.g. 2001:db8::33)\n  --ipc                           IPC namespace to use\n  --isolation                     Container isolation technology\n  --kernel-memory                 Kernel memory limit\n  -l, --label=[]                  Set meta data on a container\n  --label-file=[]                 Read in a line delimited file of labels\n  --link=[]                       Add link to another container\n  --log-driver                    Logging driver for container\n  --log-opt=[]                    Log driver options\n  -m, --memory                    Memory limit\n  --mac-address                   Container MAC address (e.g. 92:d0:c6:0a:29:33)\n  --memory-reservation            Memory soft limit\n  --memory-swap                   Swap limit equal to memory plus swap: '-1' to enable unlimited swap\n  --memory-swappiness=-1          Tune container memory swappiness (0 to 100)\n  --name                          Assign a name to the container\n  --net=default                   Connect a container to a network\n  --net-alias=[]                  Add network-scoped alias for the container\n  --oom-kill-disable              Disable OOM Killer\n  --oom-score-adj                 Tune host's OOM preferences (-1000 to 1000)\n  -P, --publish-all               Publish all exposed ports to random ports\n  -p, --publish=[]                Publish a container's port(s) to the host\n  --pid                           PID namespace to use\n  --pids-limit                    Tune container pids limit (set -1 for unlimited)\n  --privileged                    Give extended privileges to this container\n  --read-only                     Mount the container's root filesystem as read only\n  --restart=no                    Restart policy to apply when a container exits\n  --rm                            Automatically remove the container when it exits\n  --security-opt=[]               Security Options\n  --shm-size                      Size of /dev/shm, default value is 64MB\n  --sig-proxy=true                Proxy received signals to the process\n  --stop-signal=SIGTERM           Signal to stop a container, SIGTERM by default\n  -t, --tty                       Allocate a pseudo-TTY\n  --tmpfs=[]                      Mount a tmpfs directory\n  -u, --user                      Username or UID (format: <name|uid>[:<group|gid>])\n  --ulimit=[]                     Ulimit options\n  --userns                        User namespace to use\n  --uts                           UTS namespace to use\n  -v, --volume=[]                 Bind mount a volume\n  --volume-driver                 Optional volume driver for the container\n  --volumes-from=[]               Mount volumes from the specified container(s)\n  -w, --workdir                   Working directory inside the container\n```\n\n\n![](http://alwen.qiniudn.com//github/img/db6a0d5d0e95517db58a662ec5226fef.jpg)\n","source":"_posts/dockers/2016-08-01-docker-learning-02.md","raw":"title: docker学习-02-docker-run\ndate: 2016/08/01 16:11:25\ncategories:\n- docker学习\ntags: [docker,run]\n---\n\ndocker运行镜像靠run，run命令会自动从指定的镜像运行，如果镜像不存在，会先自动pull到本地，docker的文件系统称为layer，有发生变化的layer会新生成一个layer，有一个image id。\n目前我使用docker，一般是用镜像启动成一个容器，然后以后就直接stop/start这个容器\n常用的组合\n端口：-p 3306:3306\n起名：--name mysql\n磁盘映射：-v /data/mysql:/var/lib/mysql\n例如\n```\ndocker run --name mysql -p 3306:3306 -v /data/mysql:/var/lib/mysql mysql:5.6-jessie\n```\n有时候Docker上的系统会对时间敏感，有可能由于时区的原因导致时间不正确，这个时候\n就要使用环境变量设置时区，保证运行环境的正确\n```\ndocker run --rm -it -e TZ=Asia/Shanghai sonatype/nexus date\n```\n贴一下docker run的二级命令，很多个子命令\n```\nroot@ubuntu:~# docker run --help\n`Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]`\nRun a command in a new container\n\n  -a, --attach=[]                 Attach to STDIN, STDOUT or STDERR\n  --add-host=[]                   Add a custom host-to-IP mapping (host:ip)\n  --blkio-weight                  Block IO (relative weight), between 10 and 1000\n  --blkio-weight-device=[]        Block IO weight (relative device weight)\n  --cpu-shares                    CPU shares (relative weight)\n  --cap-add=[]                    Add Linux capabilities\n  --cap-drop=[]                   Drop Linux capabilities\n  --cgroup-parent                 Optional parent cgroup for the container\n  --cidfile                       Write the container ID to the file\n  --cpu-period                    Limit CPU CFS (Completely Fair Scheduler) period\n  --cpu-quota                     Limit CPU CFS (Completely Fair Scheduler) quota\n  --cpuset-cpus                   CPUs in which to allow execution (0-3, 0,1)\n  --cpuset-mems                   MEMs in which to allow execution (0-3, 0,1)\n  -d, --detach                    Run container in background and print container ID\n  --detach-keys                   Override the key sequence for detaching a container\n  --device=[]                     Add a host device to the container\n  --device-read-bps=[]            Limit read rate (bytes per second) from a device\n  --device-read-iops=[]           Limit read rate (IO per second) from a device\n  --device-write-bps=[]           Limit write rate (bytes per second) to a device\n  --device-write-iops=[]          Limit write rate (IO per second) to a device\n  --disable-content-trust=true    Skip image verification\n  --dns=[]                        Set custom DNS servers\n  --dns-opt=[]                    Set DNS options\n  --dns-search=[]                 Set custom DNS search domains\n  -e, --env=[]                    Set environment variables\n  --entrypoint                    Overwrite the default ENTRYPOINT of the image\n  --env-file=[]                   Read in a file of environment variables\n  --expose=[]                     Expose a port or a range of ports\n  --group-add=[]                  Add additional groups to join\n  -h, --hostname                  Container host name\n  --help                          Print usage\n  -i, --interactive               Keep STDIN open even if not attached\n  --ip                            Container IPv4 address (e.g. 172.30.100.104)\n  --ip6                           Container IPv6 address (e.g. 2001:db8::33)\n  --ipc                           IPC namespace to use\n  --isolation                     Container isolation technology\n  --kernel-memory                 Kernel memory limit\n  -l, --label=[]                  Set meta data on a container\n  --label-file=[]                 Read in a line delimited file of labels\n  --link=[]                       Add link to another container\n  --log-driver                    Logging driver for container\n  --log-opt=[]                    Log driver options\n  -m, --memory                    Memory limit\n  --mac-address                   Container MAC address (e.g. 92:d0:c6:0a:29:33)\n  --memory-reservation            Memory soft limit\n  --memory-swap                   Swap limit equal to memory plus swap: '-1' to enable unlimited swap\n  --memory-swappiness=-1          Tune container memory swappiness (0 to 100)\n  --name                          Assign a name to the container\n  --net=default                   Connect a container to a network\n  --net-alias=[]                  Add network-scoped alias for the container\n  --oom-kill-disable              Disable OOM Killer\n  --oom-score-adj                 Tune host's OOM preferences (-1000 to 1000)\n  -P, --publish-all               Publish all exposed ports to random ports\n  -p, --publish=[]                Publish a container's port(s) to the host\n  --pid                           PID namespace to use\n  --pids-limit                    Tune container pids limit (set -1 for unlimited)\n  --privileged                    Give extended privileges to this container\n  --read-only                     Mount the container's root filesystem as read only\n  --restart=no                    Restart policy to apply when a container exits\n  --rm                            Automatically remove the container when it exits\n  --security-opt=[]               Security Options\n  --shm-size                      Size of /dev/shm, default value is 64MB\n  --sig-proxy=true                Proxy received signals to the process\n  --stop-signal=SIGTERM           Signal to stop a container, SIGTERM by default\n  -t, --tty                       Allocate a pseudo-TTY\n  --tmpfs=[]                      Mount a tmpfs directory\n  -u, --user                      Username or UID (format: <name|uid>[:<group|gid>])\n  --ulimit=[]                     Ulimit options\n  --userns                        User namespace to use\n  --uts                           UTS namespace to use\n  -v, --volume=[]                 Bind mount a volume\n  --volume-driver                 Optional volume driver for the container\n  --volumes-from=[]               Mount volumes from the specified container(s)\n  -w, --workdir                   Working directory inside the container\n```\n\n\n![](http://alwen.qiniudn.com//github/img/db6a0d5d0e95517db58a662ec5226fef.jpg)\n","slug":"dockers/2016-08-01-docker-learning-02","published":1,"updated":"2018-05-15T07:42:34.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8eq00072wh5g0ul5ykw","content":"<p>docker运行镜像靠run，run命令会自动从指定的镜像运行，如果镜像不存在，会先自动pull到本地，docker的文件系统称为layer，有发生变化的layer会新生成一个layer，有一个image id。<br>目前我使用docker，一般是用镜像启动成一个容器，然后以后就直接stop/start这个容器<br>常用的组合<br>端口：-p 3306:3306<br>起名：–name mysql<br>磁盘映射：-v /data/mysql:/var/lib/mysql<br>例如<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -p <span class=\"number\">3306</span>:<span class=\"number\">3306</span> -v /data/<span class=\"symbol\">mysql:</span>/var/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">mysql</span> <span class=\"title\">mysql</span>:5.6-<span class=\"title\">jessie</span></span></span><br></pre></td></tr></table></figure></p>\n<p>有时候Docker上的系统会对时间敏感，有可能由于时区的原因导致时间不正确，这个时候<br>就要使用环境变量设置时区，保证运行环境的正确<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"builtin-name\">run</span> --rm -it -e <span class=\"attribute\">TZ</span>=Asia/Shanghai sonatype/nexus date</span><br></pre></td></tr></table></figure></p>\n<p>贴一下docker run的二级命令，很多个子命令<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker run --help</span><br><span class=\"line\">`Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]`</span><br><span class=\"line\">Run a command in a new container</span><br><span class=\"line\"></span><br><span class=\"line\">  -<span class=\"ruby\">a, --attach=[]                 Attach to STDIN, STDOUT <span class=\"keyword\">or</span> STDERR</span></span><br><span class=\"line\"><span class=\"ruby\">  --add-host=[]                   Add a custom host-to-IP mapping (<span class=\"symbol\">host:</span>ip)</span></span><br><span class=\"line\"><span class=\"ruby\">  --blkio-weight                  Block IO (relative weight), between <span class=\"number\">10</span> <span class=\"keyword\">and</span> <span class=\"number\">1000</span></span></span><br><span class=\"line\"><span class=\"ruby\">  --blkio-weight-device=[]        Block IO weight (relative device weight)</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpu-shares                    CPU shares (relative weight)</span></span><br><span class=\"line\"><span class=\"ruby\">  --cap-add=[]                    Add Linux capabilities</span></span><br><span class=\"line\"><span class=\"ruby\">  --cap-drop=[]                   Drop Linux capabilities</span></span><br><span class=\"line\"><span class=\"ruby\">  --cgroup-parent                 Optional parent cgroup <span class=\"keyword\">for</span> the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --cidfile                       Write the container ID to the file</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpu-period                    Limit CPU CFS (Completely Fair Scheduler) period</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpu-quota                     Limit CPU CFS (Completely Fair Scheduler) quota</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpuset-cpus                   CPUs <span class=\"keyword\">in</span> which to allow execution (<span class=\"number\">0</span>-<span class=\"number\">3</span>, <span class=\"number\">0</span>,<span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpuset-mems                   MEMs <span class=\"keyword\">in</span> which to allow execution (<span class=\"number\">0</span>-<span class=\"number\">3</span>, <span class=\"number\">0</span>,<span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  -d, --detach                    Run container <span class=\"keyword\">in</span> background <span class=\"keyword\">and</span> print container ID</span></span><br><span class=\"line\"><span class=\"ruby\">  --detach-keys                   Override the key sequence <span class=\"keyword\">for</span> detaching a container</span></span><br><span class=\"line\"><span class=\"ruby\">  --device=[]                     Add a host device to the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-read-bps=[]            Limit read rate (bytes per second) from a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-read-iops=[]           Limit read rate (IO per second) from a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-write-bps=[]           Limit write rate (bytes per second) to a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-write-iops=[]          Limit write rate (IO per second) to a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --disable-content-trust=<span class=\"literal\">true</span>    Skip image verification</span></span><br><span class=\"line\"><span class=\"ruby\">  --dns=[]                        Set custom DNS servers</span></span><br><span class=\"line\"><span class=\"ruby\">  --dns-opt=[]                    Set DNS options</span></span><br><span class=\"line\"><span class=\"ruby\">  --dns-search=[]                 Set custom DNS search domains</span></span><br><span class=\"line\"><span class=\"ruby\">  -e, --env=[]                    Set environment variables</span></span><br><span class=\"line\"><span class=\"ruby\">  --entrypoint                    Overwrite the default ENTRYPOINT of the image</span></span><br><span class=\"line\"><span class=\"ruby\">  --env-file=[]                   Read <span class=\"keyword\">in</span> a file of environment variables</span></span><br><span class=\"line\"><span class=\"ruby\">  --expose=[]                     Expose a port <span class=\"keyword\">or</span> a range of ports</span></span><br><span class=\"line\"><span class=\"ruby\">  --group-add=[]                  Add additional groups to join</span></span><br><span class=\"line\"><span class=\"ruby\">  -h, --hostname                  Container host name</span></span><br><span class=\"line\"><span class=\"ruby\">  --help                          Print usage</span></span><br><span class=\"line\"><span class=\"ruby\">  -i, --interactive               Keep STDIN open even <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> attached</span></span><br><span class=\"line\"><span class=\"ruby\">  --ip                            Container IPv4 address (e.g. <span class=\"number\">172.30</span>.<span class=\"number\">100.104</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --ip6                           Container IPv6 address (e.g. <span class=\"number\">2001</span><span class=\"symbol\">:db8</span><span class=\"symbol\">:</span><span class=\"symbol\">:</span><span class=\"number\">33</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --ipc                           IPC namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  --isolation                     Container isolation technology</span></span><br><span class=\"line\"><span class=\"ruby\">  --kernel-memory                 Kernel memory limit</span></span><br><span class=\"line\"><span class=\"ruby\">  -l, --label=[]                  Set meta data on a container</span></span><br><span class=\"line\"><span class=\"ruby\">  --label-file=[]                 Read <span class=\"keyword\">in</span> a line delimited file of labels</span></span><br><span class=\"line\"><span class=\"ruby\">  --link=[]                       Add link to another container</span></span><br><span class=\"line\"><span class=\"ruby\">  --log-driver                    Logging driver <span class=\"keyword\">for</span> container</span></span><br><span class=\"line\"><span class=\"ruby\">  --log-opt=[]                    Log driver options</span></span><br><span class=\"line\"><span class=\"ruby\">  -m, --memory                    Memory limit</span></span><br><span class=\"line\"><span class=\"ruby\">  --mac-address                   Container MAC address (e.g. <span class=\"number\">92</span><span class=\"symbol\">:d0</span><span class=\"symbol\">:c6</span><span class=\"symbol\">:</span>0<span class=\"symbol\">a:</span><span class=\"number\">29</span><span class=\"symbol\">:</span><span class=\"number\">33</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --memory-reservation            Memory soft limit</span></span><br><span class=\"line\"><span class=\"ruby\">  --memory-swap                   Swap limit equal to memory plus <span class=\"symbol\">swap:</span> <span class=\"string\">'-1'</span> to enable unlimited swap</span></span><br><span class=\"line\"><span class=\"ruby\">  --memory-swappiness=-<span class=\"number\">1</span>          Tune container memory swappiness (<span class=\"number\">0</span> to <span class=\"number\">100</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --name                          Assign a name to the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --net=default                   Connect a container to a network</span></span><br><span class=\"line\"><span class=\"ruby\">  --net-<span class=\"keyword\">alias</span>=[]                  Add network-scoped <span class=\"keyword\">alias</span> <span class=\"keyword\">for</span> the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --oom-kill-disable              Disable OOM Killer</span></span><br><span class=\"line\"><span class=\"ruby\">  --oom-score-adj                 Tune host<span class=\"string\">'s OOM preferences (-1000 to 1000)</span></span></span><br><span class=\"line\"><span class=\"ruby\">  -P, --publish-all               Publish all exposed ports to random ports</span></span><br><span class=\"line\"><span class=\"ruby\">  -p, --publish=[]                Publish a container<span class=\"string\">'s port(s) to the host</span></span></span><br><span class=\"line\"><span class=\"ruby\">  --pid                           PID namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  --pids-limit                    Tune container pids limit (set -<span class=\"number\">1</span> <span class=\"keyword\">for</span> unlimited)</span></span><br><span class=\"line\"><span class=\"ruby\">  --privileged                    Give extended privileges to this container</span></span><br><span class=\"line\"><span class=\"ruby\">  --read-only                     Mount the container<span class=\"string\">'s root filesystem as read only</span></span></span><br><span class=\"line\"><span class=\"ruby\">  --restart=no                    Restart policy to apply <span class=\"keyword\">when</span> a container exits</span></span><br><span class=\"line\"><span class=\"ruby\">  --rm                            Automatically remove the container <span class=\"keyword\">when</span> it exits</span></span><br><span class=\"line\"><span class=\"ruby\">  --security-opt=[]               Security Options</span></span><br><span class=\"line\"><span class=\"ruby\">  --shm-size                      Size of /dev/shm, default value is <span class=\"number\">64</span>MB</span></span><br><span class=\"line\"><span class=\"ruby\">  --sig-proxy=<span class=\"literal\">true</span>                Proxy received signals to the process</span></span><br><span class=\"line\"><span class=\"ruby\">  --stop-signal=SIGTERM           Signal to stop a container, SIGTERM by default</span></span><br><span class=\"line\"><span class=\"ruby\">  -t, --tty                       Allocate a pseudo-TTY</span></span><br><span class=\"line\"><span class=\"ruby\">  --tmpfs=[]                      Mount a tmpfs directory</span></span><br><span class=\"line\"><span class=\"ruby\">  -u, --user                      Username <span class=\"keyword\">or</span> UID (<span class=\"symbol\">format:</span> &lt;name<span class=\"params\">|uid&gt;[:&lt;group|</span>gid&gt;])</span></span><br><span class=\"line\"><span class=\"ruby\">  --ulimit=[]                     Ulimit options</span></span><br><span class=\"line\"><span class=\"ruby\">  --userns                        User namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  --uts                           UTS namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  -v, --volume=[]                 Bind mount a volume</span></span><br><span class=\"line\"><span class=\"ruby\">  --volume-driver                 Optional volume driver <span class=\"keyword\">for</span> the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --volumes-from=[]               Mount volumes from the specified container(s)</span></span><br><span class=\"line\"><span class=\"ruby\">  -w, --workdir                   Working directory inside the container</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://alwen.qiniudn.com//github/img/db6a0d5d0e95517db58a662ec5226fef.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>docker运行镜像靠run，run命令会自动从指定的镜像运行，如果镜像不存在，会先自动pull到本地，docker的文件系统称为layer，有发生变化的layer会新生成一个layer，有一个image id。<br>目前我使用docker，一般是用镜像启动成一个容器，然后以后就直接stop/start这个容器<br>常用的组合<br>端口：-p 3306:3306<br>起名：–name mysql<br>磁盘映射：-v /data/mysql:/var/lib/mysql<br>例如<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -p <span class=\"number\">3306</span>:<span class=\"number\">3306</span> -v /data/<span class=\"symbol\">mysql:</span>/var/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">mysql</span> <span class=\"title\">mysql</span>:5.6-<span class=\"title\">jessie</span></span></span><br></pre></td></tr></table></figure></p>\n<p>有时候Docker上的系统会对时间敏感，有可能由于时区的原因导致时间不正确，这个时候<br>就要使用环境变量设置时区，保证运行环境的正确<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"builtin-name\">run</span> --rm -it -e <span class=\"attribute\">TZ</span>=Asia/Shanghai sonatype/nexus date</span><br></pre></td></tr></table></figure></p>\n<p>贴一下docker run的二级命令，很多个子命令<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker run --help</span><br><span class=\"line\">`Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]`</span><br><span class=\"line\">Run a command in a new container</span><br><span class=\"line\"></span><br><span class=\"line\">  -<span class=\"ruby\">a, --attach=[]                 Attach to STDIN, STDOUT <span class=\"keyword\">or</span> STDERR</span></span><br><span class=\"line\"><span class=\"ruby\">  --add-host=[]                   Add a custom host-to-IP mapping (<span class=\"symbol\">host:</span>ip)</span></span><br><span class=\"line\"><span class=\"ruby\">  --blkio-weight                  Block IO (relative weight), between <span class=\"number\">10</span> <span class=\"keyword\">and</span> <span class=\"number\">1000</span></span></span><br><span class=\"line\"><span class=\"ruby\">  --blkio-weight-device=[]        Block IO weight (relative device weight)</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpu-shares                    CPU shares (relative weight)</span></span><br><span class=\"line\"><span class=\"ruby\">  --cap-add=[]                    Add Linux capabilities</span></span><br><span class=\"line\"><span class=\"ruby\">  --cap-drop=[]                   Drop Linux capabilities</span></span><br><span class=\"line\"><span class=\"ruby\">  --cgroup-parent                 Optional parent cgroup <span class=\"keyword\">for</span> the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --cidfile                       Write the container ID to the file</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpu-period                    Limit CPU CFS (Completely Fair Scheduler) period</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpu-quota                     Limit CPU CFS (Completely Fair Scheduler) quota</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpuset-cpus                   CPUs <span class=\"keyword\">in</span> which to allow execution (<span class=\"number\">0</span>-<span class=\"number\">3</span>, <span class=\"number\">0</span>,<span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --cpuset-mems                   MEMs <span class=\"keyword\">in</span> which to allow execution (<span class=\"number\">0</span>-<span class=\"number\">3</span>, <span class=\"number\">0</span>,<span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  -d, --detach                    Run container <span class=\"keyword\">in</span> background <span class=\"keyword\">and</span> print container ID</span></span><br><span class=\"line\"><span class=\"ruby\">  --detach-keys                   Override the key sequence <span class=\"keyword\">for</span> detaching a container</span></span><br><span class=\"line\"><span class=\"ruby\">  --device=[]                     Add a host device to the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-read-bps=[]            Limit read rate (bytes per second) from a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-read-iops=[]           Limit read rate (IO per second) from a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-write-bps=[]           Limit write rate (bytes per second) to a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --device-write-iops=[]          Limit write rate (IO per second) to a device</span></span><br><span class=\"line\"><span class=\"ruby\">  --disable-content-trust=<span class=\"literal\">true</span>    Skip image verification</span></span><br><span class=\"line\"><span class=\"ruby\">  --dns=[]                        Set custom DNS servers</span></span><br><span class=\"line\"><span class=\"ruby\">  --dns-opt=[]                    Set DNS options</span></span><br><span class=\"line\"><span class=\"ruby\">  --dns-search=[]                 Set custom DNS search domains</span></span><br><span class=\"line\"><span class=\"ruby\">  -e, --env=[]                    Set environment variables</span></span><br><span class=\"line\"><span class=\"ruby\">  --entrypoint                    Overwrite the default ENTRYPOINT of the image</span></span><br><span class=\"line\"><span class=\"ruby\">  --env-file=[]                   Read <span class=\"keyword\">in</span> a file of environment variables</span></span><br><span class=\"line\"><span class=\"ruby\">  --expose=[]                     Expose a port <span class=\"keyword\">or</span> a range of ports</span></span><br><span class=\"line\"><span class=\"ruby\">  --group-add=[]                  Add additional groups to join</span></span><br><span class=\"line\"><span class=\"ruby\">  -h, --hostname                  Container host name</span></span><br><span class=\"line\"><span class=\"ruby\">  --help                          Print usage</span></span><br><span class=\"line\"><span class=\"ruby\">  -i, --interactive               Keep STDIN open even <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> attached</span></span><br><span class=\"line\"><span class=\"ruby\">  --ip                            Container IPv4 address (e.g. <span class=\"number\">172.30</span>.<span class=\"number\">100.104</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --ip6                           Container IPv6 address (e.g. <span class=\"number\">2001</span><span class=\"symbol\">:db8</span><span class=\"symbol\">:</span><span class=\"symbol\">:</span><span class=\"number\">33</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --ipc                           IPC namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  --isolation                     Container isolation technology</span></span><br><span class=\"line\"><span class=\"ruby\">  --kernel-memory                 Kernel memory limit</span></span><br><span class=\"line\"><span class=\"ruby\">  -l, --label=[]                  Set meta data on a container</span></span><br><span class=\"line\"><span class=\"ruby\">  --label-file=[]                 Read <span class=\"keyword\">in</span> a line delimited file of labels</span></span><br><span class=\"line\"><span class=\"ruby\">  --link=[]                       Add link to another container</span></span><br><span class=\"line\"><span class=\"ruby\">  --log-driver                    Logging driver <span class=\"keyword\">for</span> container</span></span><br><span class=\"line\"><span class=\"ruby\">  --log-opt=[]                    Log driver options</span></span><br><span class=\"line\"><span class=\"ruby\">  -m, --memory                    Memory limit</span></span><br><span class=\"line\"><span class=\"ruby\">  --mac-address                   Container MAC address (e.g. <span class=\"number\">92</span><span class=\"symbol\">:d0</span><span class=\"symbol\">:c6</span><span class=\"symbol\">:</span>0<span class=\"symbol\">a:</span><span class=\"number\">29</span><span class=\"symbol\">:</span><span class=\"number\">33</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --memory-reservation            Memory soft limit</span></span><br><span class=\"line\"><span class=\"ruby\">  --memory-swap                   Swap limit equal to memory plus <span class=\"symbol\">swap:</span> <span class=\"string\">'-1'</span> to enable unlimited swap</span></span><br><span class=\"line\"><span class=\"ruby\">  --memory-swappiness=-<span class=\"number\">1</span>          Tune container memory swappiness (<span class=\"number\">0</span> to <span class=\"number\">100</span>)</span></span><br><span class=\"line\"><span class=\"ruby\">  --name                          Assign a name to the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --net=default                   Connect a container to a network</span></span><br><span class=\"line\"><span class=\"ruby\">  --net-<span class=\"keyword\">alias</span>=[]                  Add network-scoped <span class=\"keyword\">alias</span> <span class=\"keyword\">for</span> the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --oom-kill-disable              Disable OOM Killer</span></span><br><span class=\"line\"><span class=\"ruby\">  --oom-score-adj                 Tune host<span class=\"string\">'s OOM preferences (-1000 to 1000)</span></span></span><br><span class=\"line\"><span class=\"ruby\">  -P, --publish-all               Publish all exposed ports to random ports</span></span><br><span class=\"line\"><span class=\"ruby\">  -p, --publish=[]                Publish a container<span class=\"string\">'s port(s) to the host</span></span></span><br><span class=\"line\"><span class=\"ruby\">  --pid                           PID namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  --pids-limit                    Tune container pids limit (set -<span class=\"number\">1</span> <span class=\"keyword\">for</span> unlimited)</span></span><br><span class=\"line\"><span class=\"ruby\">  --privileged                    Give extended privileges to this container</span></span><br><span class=\"line\"><span class=\"ruby\">  --read-only                     Mount the container<span class=\"string\">'s root filesystem as read only</span></span></span><br><span class=\"line\"><span class=\"ruby\">  --restart=no                    Restart policy to apply <span class=\"keyword\">when</span> a container exits</span></span><br><span class=\"line\"><span class=\"ruby\">  --rm                            Automatically remove the container <span class=\"keyword\">when</span> it exits</span></span><br><span class=\"line\"><span class=\"ruby\">  --security-opt=[]               Security Options</span></span><br><span class=\"line\"><span class=\"ruby\">  --shm-size                      Size of /dev/shm, default value is <span class=\"number\">64</span>MB</span></span><br><span class=\"line\"><span class=\"ruby\">  --sig-proxy=<span class=\"literal\">true</span>                Proxy received signals to the process</span></span><br><span class=\"line\"><span class=\"ruby\">  --stop-signal=SIGTERM           Signal to stop a container, SIGTERM by default</span></span><br><span class=\"line\"><span class=\"ruby\">  -t, --tty                       Allocate a pseudo-TTY</span></span><br><span class=\"line\"><span class=\"ruby\">  --tmpfs=[]                      Mount a tmpfs directory</span></span><br><span class=\"line\"><span class=\"ruby\">  -u, --user                      Username <span class=\"keyword\">or</span> UID (<span class=\"symbol\">format:</span> &lt;name<span class=\"params\">|uid&gt;[:&lt;group|</span>gid&gt;])</span></span><br><span class=\"line\"><span class=\"ruby\">  --ulimit=[]                     Ulimit options</span></span><br><span class=\"line\"><span class=\"ruby\">  --userns                        User namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  --uts                           UTS namespace to use</span></span><br><span class=\"line\"><span class=\"ruby\">  -v, --volume=[]                 Bind mount a volume</span></span><br><span class=\"line\"><span class=\"ruby\">  --volume-driver                 Optional volume driver <span class=\"keyword\">for</span> the container</span></span><br><span class=\"line\"><span class=\"ruby\">  --volumes-from=[]               Mount volumes from the specified container(s)</span></span><br><span class=\"line\"><span class=\"ruby\">  -w, --workdir                   Working directory inside the container</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://alwen.qiniudn.com//github/img/db6a0d5d0e95517db58a662ec5226fef.jpg\" alt=\"\"></p>\n","sticky":0},{"title":"Go的select-case学习","date":"2018-05-15T08:11:25.000Z","_content":"\ngolang 的 select 就是监听 IO 操作，当 IO 操作发生时，触发相应的动作。\n\n在执行select语句的时候，运行时系统会`自上而下地判断每个case中的发送或接收操作是否可以被立即执行`(立即执行：意思是当前Goroutine不会因此操作而被阻塞)\n\nselect的用法与switch非常类似，由select开始一个新的选择块，每个选择条件由case语句来描述。与switch语句可以选择任何可使用相等比较的条件相比，select有比较多的限制，其中最大的一条限制就是每个case语句里必须是一个IO操作，确切的说，应该是一个面向channel的IO操作。\n\n下面这段话来自官方文档：\n\n\"select\" statement chooses which of a set of possible send or receive operations will proceed. It looks similar to a \"switch\" statement but with the cases all referring to communication operations.\n\n这里面有个容易被忽略的地方，就是有多个case同时符合条件时，Go将随机选择一个case进行执行。\n\n\n下面的两个例子，case都有被执行的可能\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\t\"time\"\n)\n\nvar ch1 = make(chan int)\nvar ch2 = make(chan int)\nvar chs = []chan int{ch1, ch2}\nvar numbers = []int{1, 2, 3, 4, 5}\n\nfunc init() {\n\truntime.GOMAXPROCS(runtime.NumCPU())\n}\nfunc main() {\n\t/*\n\tx := make(chan int, 2)\n\ty := make(chan int, 1)\n\n\tx <- 7\n\tx <- 8\n\tx <- 9\n\ty <- 9\n\t随机进入\n\tselect {\n\tcase e := <-x:\n\t\tfmt.Println(\"x -- selected\", e)\n\tcase <-y:\n\t\tfmt.Println(\"y -- selected\")\n\t}*/\n\n\t//随机进入\n\tselect {\n\tcase getChan(0) <- getNumber(2):\n\t\tfmt.Println(\"1st case is selected.\")\n\tcase getChan(1) <- getNumber(3):\n\t\tfmt.Println(\"2st case is selected.\")\n\tdefault:\n\t\tfmt.Println(\"default!.\")\n\t}\n\n\tch := make(chan int, 1024)\n\tgo func(chan int) {\n\t\tfor {\n\t\t\tval := <-ch\n\t\t\tfmt.Printf(\"val is: %d\\n\", val)\n\t\t}\n\t}(ch)\n\ttick := time.NewTicker(1 * time.Second)\n\tfor i := 0; i < 20; i++ {\n\t\tselect {\n\t\tcase ch <- i:\n\t\tcase <-tick.C:\n\t\t\tch <- i\n\t\t\tfmt.Printf(\"%d:case<-tick\\n\", i)\n\t\t}\n\n\t\ttime.Sleep(200*time.Millisecond)\n\t}\n\tclose(ch)\n\ttick.Stop()\n}\n\nfunc getNumber(i int) int {\n\tfmt.Printf(\"numbers[%d]\\n\", i)\n\treturn numbers[i]\n}\n\nfunc getChan(i int) chan int {\n\tfmt.Printf(\"chs[%d]\\n\", i)\n\treturn chs[i]\n}\n```\n","source":"_posts/go/2018-05-15-go-select-case.md","raw":"title: Go的select-case学习\ndate: 2018/05/15 16:11:25\ncategories:\n- Go\ntags: [Go]\n---\n\ngolang 的 select 就是监听 IO 操作，当 IO 操作发生时，触发相应的动作。\n\n在执行select语句的时候，运行时系统会`自上而下地判断每个case中的发送或接收操作是否可以被立即执行`(立即执行：意思是当前Goroutine不会因此操作而被阻塞)\n\nselect的用法与switch非常类似，由select开始一个新的选择块，每个选择条件由case语句来描述。与switch语句可以选择任何可使用相等比较的条件相比，select有比较多的限制，其中最大的一条限制就是每个case语句里必须是一个IO操作，确切的说，应该是一个面向channel的IO操作。\n\n下面这段话来自官方文档：\n\n\"select\" statement chooses which of a set of possible send or receive operations will proceed. It looks similar to a \"switch\" statement but with the cases all referring to communication operations.\n\n这里面有个容易被忽略的地方，就是有多个case同时符合条件时，Go将随机选择一个case进行执行。\n\n\n下面的两个例子，case都有被执行的可能\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\t\"time\"\n)\n\nvar ch1 = make(chan int)\nvar ch2 = make(chan int)\nvar chs = []chan int{ch1, ch2}\nvar numbers = []int{1, 2, 3, 4, 5}\n\nfunc init() {\n\truntime.GOMAXPROCS(runtime.NumCPU())\n}\nfunc main() {\n\t/*\n\tx := make(chan int, 2)\n\ty := make(chan int, 1)\n\n\tx <- 7\n\tx <- 8\n\tx <- 9\n\ty <- 9\n\t随机进入\n\tselect {\n\tcase e := <-x:\n\t\tfmt.Println(\"x -- selected\", e)\n\tcase <-y:\n\t\tfmt.Println(\"y -- selected\")\n\t}*/\n\n\t//随机进入\n\tselect {\n\tcase getChan(0) <- getNumber(2):\n\t\tfmt.Println(\"1st case is selected.\")\n\tcase getChan(1) <- getNumber(3):\n\t\tfmt.Println(\"2st case is selected.\")\n\tdefault:\n\t\tfmt.Println(\"default!.\")\n\t}\n\n\tch := make(chan int, 1024)\n\tgo func(chan int) {\n\t\tfor {\n\t\t\tval := <-ch\n\t\t\tfmt.Printf(\"val is: %d\\n\", val)\n\t\t}\n\t}(ch)\n\ttick := time.NewTicker(1 * time.Second)\n\tfor i := 0; i < 20; i++ {\n\t\tselect {\n\t\tcase ch <- i:\n\t\tcase <-tick.C:\n\t\t\tch <- i\n\t\t\tfmt.Printf(\"%d:case<-tick\\n\", i)\n\t\t}\n\n\t\ttime.Sleep(200*time.Millisecond)\n\t}\n\tclose(ch)\n\ttick.Stop()\n}\n\nfunc getNumber(i int) int {\n\tfmt.Printf(\"numbers[%d]\\n\", i)\n\treturn numbers[i]\n}\n\nfunc getChan(i int) chan int {\n\tfmt.Printf(\"chs[%d]\\n\", i)\n\treturn chs[i]\n}\n```\n","slug":"go/2018-05-15-go-select-case","published":1,"updated":"2018-06-06T02:44:48.645Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8er00082wh56qt2h8cf","content":"<p>golang 的 select 就是监听 IO 操作，当 IO 操作发生时，触发相应的动作。</p>\n<p>在执行select语句的时候，运行时系统会<code>自上而下地判断每个case中的发送或接收操作是否可以被立即执行</code>(立即执行：意思是当前Goroutine不会因此操作而被阻塞)</p>\n<p>select的用法与switch非常类似，由select开始一个新的选择块，每个选择条件由case语句来描述。与switch语句可以选择任何可使用相等比较的条件相比，select有比较多的限制，其中最大的一条限制就是每个case语句里必须是一个IO操作，确切的说，应该是一个面向channel的IO操作。</p>\n<p>下面这段话来自官方文档：</p>\n<p>“select” statement chooses which of a set of possible send or receive operations will proceed. It looks similar to a “switch” statement but with the cases all referring to communication operations.</p>\n<p>这里面有个容易被忽略的地方，就是有多个case同时符合条件时，Go将随机选择一个case进行执行。</p>\n<p>下面的两个例子，case都有被执行的可能<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"runtime\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ch1 = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> ch2 = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> chs = []<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>&#123;ch1, ch2&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> numbers = []<span class=\"keyword\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\truntime.GOMAXPROCS(runtime.NumCPU())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tx := make(chan int, 2)</span></span><br><span class=\"line\"><span class=\"comment\">\ty := make(chan int, 1)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tx &lt;- 7</span></span><br><span class=\"line\"><span class=\"comment\">\tx &lt;- 8</span></span><br><span class=\"line\"><span class=\"comment\">\tx &lt;- 9</span></span><br><span class=\"line\"><span class=\"comment\">\ty &lt;- 9</span></span><br><span class=\"line\"><span class=\"comment\">\t随机进入</span></span><br><span class=\"line\"><span class=\"comment\">\tselect &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\tcase e := &lt;-x:</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfmt.Println(\"x -- selected\", e)</span></span><br><span class=\"line\"><span class=\"comment\">\tcase &lt;-y:</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfmt.Println(\"y -- selected\")</span></span><br><span class=\"line\"><span class=\"comment\">\t&#125;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//随机进入</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> getChan(<span class=\"number\">0</span>) &lt;- getNumber(<span class=\"number\">2</span>):</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"1st case is selected.\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> getChan(<span class=\"number\">1</span>) &lt;- getNumber(<span class=\"number\">3</span>):</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"2st case is selected.\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"default!.\"</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">1024</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t\tval := &lt;-ch</span><br><span class=\"line\">\t\t\tfmt.Printf(<span class=\"string\">\"val is: %d\\n\"</span>, val)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;(ch)</span><br><span class=\"line\">\ttick := time.NewTicker(<span class=\"number\">1</span> * time.Second)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> ch &lt;- i:</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> &lt;-tick.C:</span><br><span class=\"line\">\t\t\tch &lt;- i</span><br><span class=\"line\">\t\t\tfmt.Printf(<span class=\"string\">\"%d:case&lt;-tick\\n\"</span>, i)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttime.Sleep(<span class=\"number\">200</span>*time.Millisecond)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">close</span>(ch)</span><br><span class=\"line\">\ttick.Stop()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getNumber</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"numbers[%d]\\n\"</span>, i)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> numbers[i]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getChan</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span> <span class=\"title\">chan</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"chs[%d]\\n\"</span>, i)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> chs[i]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>golang 的 select 就是监听 IO 操作，当 IO 操作发生时，触发相应的动作。</p>\n<p>在执行select语句的时候，运行时系统会<code>自上而下地判断每个case中的发送或接收操作是否可以被立即执行</code>(立即执行：意思是当前Goroutine不会因此操作而被阻塞)</p>\n<p>select的用法与switch非常类似，由select开始一个新的选择块，每个选择条件由case语句来描述。与switch语句可以选择任何可使用相等比较的条件相比，select有比较多的限制，其中最大的一条限制就是每个case语句里必须是一个IO操作，确切的说，应该是一个面向channel的IO操作。</p>\n<p>下面这段话来自官方文档：</p>\n<p>“select” statement chooses which of a set of possible send or receive operations will proceed. It looks similar to a “switch” statement but with the cases all referring to communication operations.</p>\n<p>这里面有个容易被忽略的地方，就是有多个case同时符合条件时，Go将随机选择一个case进行执行。</p>\n<p>下面的两个例子，case都有被执行的可能<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"runtime\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ch1 = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> ch2 = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> chs = []<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>&#123;ch1, ch2&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> numbers = []<span class=\"keyword\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\truntime.GOMAXPROCS(runtime.NumCPU())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tx := make(chan int, 2)</span></span><br><span class=\"line\"><span class=\"comment\">\ty := make(chan int, 1)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\tx &lt;- 7</span></span><br><span class=\"line\"><span class=\"comment\">\tx &lt;- 8</span></span><br><span class=\"line\"><span class=\"comment\">\tx &lt;- 9</span></span><br><span class=\"line\"><span class=\"comment\">\ty &lt;- 9</span></span><br><span class=\"line\"><span class=\"comment\">\t随机进入</span></span><br><span class=\"line\"><span class=\"comment\">\tselect &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\tcase e := &lt;-x:</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfmt.Println(\"x -- selected\", e)</span></span><br><span class=\"line\"><span class=\"comment\">\tcase &lt;-y:</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfmt.Println(\"y -- selected\")</span></span><br><span class=\"line\"><span class=\"comment\">\t&#125;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//随机进入</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> getChan(<span class=\"number\">0</span>) &lt;- getNumber(<span class=\"number\">2</span>):</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"1st case is selected.\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> getChan(<span class=\"number\">1</span>) &lt;- getNumber(<span class=\"number\">3</span>):</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"2st case is selected.\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"default!.\"</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">1024</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t\tval := &lt;-ch</span><br><span class=\"line\">\t\t\tfmt.Printf(<span class=\"string\">\"val is: %d\\n\"</span>, val)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;(ch)</span><br><span class=\"line\">\ttick := time.NewTicker(<span class=\"number\">1</span> * time.Second)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> ch &lt;- i:</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> &lt;-tick.C:</span><br><span class=\"line\">\t\t\tch &lt;- i</span><br><span class=\"line\">\t\t\tfmt.Printf(<span class=\"string\">\"%d:case&lt;-tick\\n\"</span>, i)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttime.Sleep(<span class=\"number\">200</span>*time.Millisecond)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">close</span>(ch)</span><br><span class=\"line\">\ttick.Stop()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getNumber</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"numbers[%d]\\n\"</span>, i)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> numbers[i]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getChan</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span> <span class=\"title\">chan</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"chs[%d]\\n\"</span>, i)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> chs[i]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"Java8的新特性","date":"2016-08-08T07:05:25.000Z","_content":"之前对于Java的版本概念不是很强烈，从Java5中学习到的那些语法足以满足日常开发中的需要，最近迷恋上了`IDEA`，对于其提示出来的语法建议深感自身知识的落伍。\n\n在这篇文章中，将汇集再发现到新语法或者特性时将会补充。\n\n## 语法\n### lambda\nlambda也称为`闭包`或`匿名方法`，方法的参数为方法。\n它可以自动推导出参数类型，也就是说编译器根据参数类型可以推导出用哪个类，用哪个方法去执行表达式里要执行的方法\nlambda最先出现在其他语言中，从Java8才进入此语法，此语法确实带来了更好的阅读以及代码量的减少。\n以下已一些常用类加以说明[BEFORE：之前的语法   AFTER：使用lambda的语法]。\n\nList:\n\n```\nList<String> list = new ArrayList<>();\nlist.add(\"1\");\nlist.add(\"2\");\nlist.add(\"3\");\n-- 输出\n//BEFORE：\nfor(String i:list){\n\tSystem.out.println(i);\n}\n--- 或者\nlist.forEach(new Consumer<String>() {\n\t@Override\n\tpublic void accept(String s) {\n\t\tSystem.out.println(s);\n\t}\n});\n\n//AFTER：\n--- style1:expression lambda\nlist.forEach((val) -> System.out.println(val));\n--- style2:method reference\nlist.forEach(System.out::println);\n\n-- 排序\n//BEFORE：\nlist.sort(new Comparator<String>() {\n        @Override\n        public int compare(String v1, String v2) {\n           return v1.compareTo(v2);\n       }\n});\n\n//AFTER：\nlist.sort((v1, v2) -> v1.compareTo(v2));\n--- 或者\nlist.sort(String::compareTo);\n```\nMap：\n```\nMap<String,String> map = new HashMap<>();\nmap.put(\"k1\",\"v1\");``\nmap.put(\"k2\",\"v2\");\nmap.put(\"k3\",\"v3\");\n\n//BEFORE：\nmap.forEach(new BiConsumer<String, String>() {\n    @Override\n   \tpublic void accept(String key, String val) {\n          System.out.println(key+\"-\"+val);\n    }\n});\n\n//AFTER：\nmap.forEach((key, val) -> System.out.println(key + \"-\" + val));\n```\n\n参考资料:\n1.[IDEA官网对于语法提示的一些解释](https://blog.jetbrains.com/idea/2014/09/the-inspection-connection-issue-1/)\n\n","source":"_posts/java/2016-08-08-java-8-feature.md","raw":"title: Java8的新特性\ndate: 2016/08/08 15:05:25\ncategories:\n- Java\ntags: [lambda]\n---\n之前对于Java的版本概念不是很强烈，从Java5中学习到的那些语法足以满足日常开发中的需要，最近迷恋上了`IDEA`，对于其提示出来的语法建议深感自身知识的落伍。\n\n在这篇文章中，将汇集再发现到新语法或者特性时将会补充。\n\n## 语法\n### lambda\nlambda也称为`闭包`或`匿名方法`，方法的参数为方法。\n它可以自动推导出参数类型，也就是说编译器根据参数类型可以推导出用哪个类，用哪个方法去执行表达式里要执行的方法\nlambda最先出现在其他语言中，从Java8才进入此语法，此语法确实带来了更好的阅读以及代码量的减少。\n以下已一些常用类加以说明[BEFORE：之前的语法   AFTER：使用lambda的语法]。\n\nList:\n\n```\nList<String> list = new ArrayList<>();\nlist.add(\"1\");\nlist.add(\"2\");\nlist.add(\"3\");\n-- 输出\n//BEFORE：\nfor(String i:list){\n\tSystem.out.println(i);\n}\n--- 或者\nlist.forEach(new Consumer<String>() {\n\t@Override\n\tpublic void accept(String s) {\n\t\tSystem.out.println(s);\n\t}\n});\n\n//AFTER：\n--- style1:expression lambda\nlist.forEach((val) -> System.out.println(val));\n--- style2:method reference\nlist.forEach(System.out::println);\n\n-- 排序\n//BEFORE：\nlist.sort(new Comparator<String>() {\n        @Override\n        public int compare(String v1, String v2) {\n           return v1.compareTo(v2);\n       }\n});\n\n//AFTER：\nlist.sort((v1, v2) -> v1.compareTo(v2));\n--- 或者\nlist.sort(String::compareTo);\n```\nMap：\n```\nMap<String,String> map = new HashMap<>();\nmap.put(\"k1\",\"v1\");``\nmap.put(\"k2\",\"v2\");\nmap.put(\"k3\",\"v3\");\n\n//BEFORE：\nmap.forEach(new BiConsumer<String, String>() {\n    @Override\n   \tpublic void accept(String key, String val) {\n          System.out.println(key+\"-\"+val);\n    }\n});\n\n//AFTER：\nmap.forEach((key, val) -> System.out.println(key + \"-\" + val));\n```\n\n参考资料:\n1.[IDEA官网对于语法提示的一些解释](https://blog.jetbrains.com/idea/2014/09/the-inspection-connection-issue-1/)\n\n","slug":"java/2016-08-08-java-8-feature","published":1,"updated":"2018-05-15T07:42:34.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8et000b2wh5506n6r9e","content":"<p>之前对于Java的版本概念不是很强烈，从Java5中学习到的那些语法足以满足日常开发中的需要，最近迷恋上了<code>IDEA</code>，对于其提示出来的语法建议深感自身知识的落伍。</p>\n<p>在这篇文章中，将汇集再发现到新语法或者特性时将会补充。</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><h3 id=\"lambda\"><a href=\"#lambda\" class=\"headerlink\" title=\"lambda\"></a>lambda</h3><p>lambda也称为<code>闭包</code>或<code>匿名方法</code>，方法的参数为方法。<br>它可以自动推导出参数类型，也就是说编译器根据参数类型可以推导出用哪个类，用哪个方法去执行表达式里要执行的方法<br>lambda最先出现在其他语言中，从Java8才进入此语法，此语法确实带来了更好的阅读以及代码量的减少。<br>以下已一些常用类加以说明[BEFORE：之前的语法   AFTER：使用lambda的语法]。</p>\n<p>List:</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt; <span class=\"built_in\">list</span> = <span class=\"literal\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"><span class=\"built_in\">list</span>.add(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">list</span>.add(<span class=\"string\">\"2\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">list</span>.add(<span class=\"string\">\"3\"</span>);</span><br><span class=\"line\">-- 输出</span><br><span class=\"line\"><span class=\"comment\">//BEFORE：</span></span><br><span class=\"line\">for(<span class=\"built_in\">String</span> i:<span class=\"built_in\">list</span>)&#123;</span><br><span class=\"line\">\tSystem.out.println(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--- 或者</span><br><span class=\"line\"><span class=\"built_in\">list</span>.forEach(<span class=\"literal\">new</span> Consumer&lt;<span class=\"built_in\">String</span>&gt;() &#123;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"literal\">void</span> accept(<span class=\"built_in\">String</span> s) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(s);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//AFTER：</span></span><br><span class=\"line\">--- style1:expression lambda</span><br><span class=\"line\"><span class=\"built_in\">list</span>.forEach((val) -&gt; System.out.println(val));</span><br><span class=\"line\">--- style2:method reference</span><br><span class=\"line\"><span class=\"built_in\">list</span>.forEach(System.out<span class=\"type\">::println</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 排序</span><br><span class=\"line\"><span class=\"comment\">//BEFORE：</span></span><br><span class=\"line\"><span class=\"built_in\">list</span>.sort(<span class=\"literal\">new</span> Comparator&lt;<span class=\"built_in\">String</span>&gt;() &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        <span class=\"keyword\">public</span> int compare(<span class=\"built_in\">String</span> v1, <span class=\"built_in\">String</span> v2) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> v1.compareTo(v2);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//AFTER：</span></span><br><span class=\"line\"><span class=\"built_in\">list</span>.sort((v1, v2) -&gt; v1.compareTo(v2));</span><br><span class=\"line\">--- 或者</span><br><span class=\"line\"><span class=\"built_in\">list</span>.sort(<span class=\"built_in\">String</span><span class=\"type\">::compareTo</span>);</span><br></pre></td></tr></table></figure>\n<p>Map：<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;<span class=\"keyword\">String</span>,<span class=\"keyword\">String</span>&gt; <span class=\"built_in\">map</span> = <span class=\"keyword\">new</span> <span class=\"keyword\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"><span class=\"built_in\">map</span>.put(<span class=\"string\">\"k1\"</span>,<span class=\"string\">\"v1\"</span>);``</span><br><span class=\"line\"><span class=\"built_in\">map</span>.put(<span class=\"string\">\"k2\"</span>,<span class=\"string\">\"v2\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">map</span>.put(<span class=\"string\">\"k3\"</span>,<span class=\"string\">\"v3\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//BEFORE：</span></span><br><span class=\"line\"><span class=\"built_in\">map</span>.forEach(<span class=\"keyword\">new</span> BiConsumer&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">String</span>&gt;() &#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">   \t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> accept(<span class=\"keyword\">String</span> <span class=\"built_in\">key</span>, <span class=\"keyword\">String</span> val) &#123;</span><br><span class=\"line\">          System.out.<span class=\"built_in\">println</span>(<span class=\"built_in\">key</span>+<span class=\"string\">\"-\"</span>+val);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//AFTER：</span></span><br><span class=\"line\"><span class=\"built_in\">map</span>.forEach((<span class=\"built_in\">key</span>, val) -&gt; System.out.<span class=\"built_in\">println</span>(<span class=\"built_in\">key</span> + <span class=\"string\">\"-\"</span> + val));</span><br></pre></td></tr></table></figure></p>\n<p>参考资料:<br>1.<a href=\"https://blog.jetbrains.com/idea/2014/09/the-inspection-connection-issue-1/\" target=\"_blank\" rel=\"noopener\">IDEA官网对于语法提示的一些解释</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前对于Java的版本概念不是很强烈，从Java5中学习到的那些语法足以满足日常开发中的需要，最近迷恋上了<code>IDEA</code>，对于其提示出来的语法建议深感自身知识的落伍。</p>\n<p>在这篇文章中，将汇集再发现到新语法或者特性时将会补充。</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><h3 id=\"lambda\"><a href=\"#lambda\" class=\"headerlink\" title=\"lambda\"></a>lambda</h3><p>lambda也称为<code>闭包</code>或<code>匿名方法</code>，方法的参数为方法。<br>它可以自动推导出参数类型，也就是说编译器根据参数类型可以推导出用哪个类，用哪个方法去执行表达式里要执行的方法<br>lambda最先出现在其他语言中，从Java8才进入此语法，此语法确实带来了更好的阅读以及代码量的减少。<br>以下已一些常用类加以说明[BEFORE：之前的语法   AFTER：使用lambda的语法]。</p>\n<p>List:</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt; <span class=\"built_in\">list</span> = <span class=\"literal\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"><span class=\"built_in\">list</span>.add(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">list</span>.add(<span class=\"string\">\"2\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">list</span>.add(<span class=\"string\">\"3\"</span>);</span><br><span class=\"line\">-- 输出</span><br><span class=\"line\"><span class=\"comment\">//BEFORE：</span></span><br><span class=\"line\">for(<span class=\"built_in\">String</span> i:<span class=\"built_in\">list</span>)&#123;</span><br><span class=\"line\">\tSystem.out.println(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--- 或者</span><br><span class=\"line\"><span class=\"built_in\">list</span>.forEach(<span class=\"literal\">new</span> Consumer&lt;<span class=\"built_in\">String</span>&gt;() &#123;</span><br><span class=\"line\">\t@Override</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"literal\">void</span> accept(<span class=\"built_in\">String</span> s) &#123;</span><br><span class=\"line\">\t\tSystem.out.println(s);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//AFTER：</span></span><br><span class=\"line\">--- style1:expression lambda</span><br><span class=\"line\"><span class=\"built_in\">list</span>.forEach((val) -&gt; System.out.println(val));</span><br><span class=\"line\">--- style2:method reference</span><br><span class=\"line\"><span class=\"built_in\">list</span>.forEach(System.out<span class=\"type\">::println</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">-- 排序</span><br><span class=\"line\"><span class=\"comment\">//BEFORE：</span></span><br><span class=\"line\"><span class=\"built_in\">list</span>.sort(<span class=\"literal\">new</span> Comparator&lt;<span class=\"built_in\">String</span>&gt;() &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        <span class=\"keyword\">public</span> int compare(<span class=\"built_in\">String</span> v1, <span class=\"built_in\">String</span> v2) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> v1.compareTo(v2);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//AFTER：</span></span><br><span class=\"line\"><span class=\"built_in\">list</span>.sort((v1, v2) -&gt; v1.compareTo(v2));</span><br><span class=\"line\">--- 或者</span><br><span class=\"line\"><span class=\"built_in\">list</span>.sort(<span class=\"built_in\">String</span><span class=\"type\">::compareTo</span>);</span><br></pre></td></tr></table></figure>\n<p>Map：<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;<span class=\"keyword\">String</span>,<span class=\"keyword\">String</span>&gt; <span class=\"built_in\">map</span> = <span class=\"keyword\">new</span> <span class=\"keyword\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"><span class=\"built_in\">map</span>.put(<span class=\"string\">\"k1\"</span>,<span class=\"string\">\"v1\"</span>);``</span><br><span class=\"line\"><span class=\"built_in\">map</span>.put(<span class=\"string\">\"k2\"</span>,<span class=\"string\">\"v2\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">map</span>.put(<span class=\"string\">\"k3\"</span>,<span class=\"string\">\"v3\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//BEFORE：</span></span><br><span class=\"line\"><span class=\"built_in\">map</span>.forEach(<span class=\"keyword\">new</span> BiConsumer&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">String</span>&gt;() &#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">   \t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> accept(<span class=\"keyword\">String</span> <span class=\"built_in\">key</span>, <span class=\"keyword\">String</span> val) &#123;</span><br><span class=\"line\">          System.out.<span class=\"built_in\">println</span>(<span class=\"built_in\">key</span>+<span class=\"string\">\"-\"</span>+val);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//AFTER：</span></span><br><span class=\"line\"><span class=\"built_in\">map</span>.forEach((<span class=\"built_in\">key</span>, val) -&gt; System.out.<span class=\"built_in\">println</span>(<span class=\"built_in\">key</span> + <span class=\"string\">\"-\"</span> + val));</span><br></pre></td></tr></table></figure></p>\n<p>参考资料:<br>1.<a href=\"https://blog.jetbrains.com/idea/2014/09/the-inspection-connection-issue-1/\" target=\"_blank\" rel=\"noopener\">IDEA官网对于语法提示的一些解释</a></p>\n","sticky":0},{"title":"程序员给自己的三行情书","date":"2016-03-08T05:42:25.000Z","_content":"在「简书」上看到的，也是一种生活态度吧，短短三行，也许简单，也许深刻\n\n### [独独君](http://www.jianshu.com/users/13108176a3e4/timeline)\n\n```\nif(myAge>20&&myAge<=28) money++;\nif(myAge>28&&myAge<=50) (family_love)money;\nif(myAge>50) enjoyLife++;\n```\n\n### [Adrift](http://www.jianshu.com/users/f0c0c7b0bee7/timeline)  \n\n``` \nNSString *myFutureLife = @\"没有暑假,寒假只放9天,每天加班,加班,加班,加班…\";\nif (myFutureLife)\n{[i.justSetMySelfMood BAD];}\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### [霖溦](http://www.jianshu.com/users/c8f8558a4b1d/latest_articles)\n\n```\nwhile(\"coding\") {\nif(\"you\")\n break;}\n```","source":"_posts/life/2016-03-08-programmer-three-line-code.md","raw":"title: 程序员给自己的三行情书\ndate: 2016/03/08 13:42:25\ncategories:\n- 程序员\ntags: [程序员,乱七八糟,心情]\n---\n在「简书」上看到的，也是一种生活态度吧，短短三行，也许简单，也许深刻\n\n### [独独君](http://www.jianshu.com/users/13108176a3e4/timeline)\n\n```\nif(myAge>20&&myAge<=28) money++;\nif(myAge>28&&myAge<=50) (family_love)money;\nif(myAge>50) enjoyLife++;\n```\n\n### [Adrift](http://www.jianshu.com/users/f0c0c7b0bee7/timeline)  \n\n``` \nNSString *myFutureLife = @\"没有暑假,寒假只放9天,每天加班,加班,加班,加班…\";\nif (myFutureLife)\n{[i.justSetMySelfMood BAD];}\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### [霖溦](http://www.jianshu.com/users/c8f8558a4b1d/latest_articles)\n\n```\nwhile(\"coding\") {\nif(\"you\")\n break;}\n```","slug":"life/2016-03-08-programmer-three-line-code","published":1,"updated":"2018-05-15T07:42:34.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8ev000c2wh57j16bdit","content":"<p>在「简书」上看到的，也是一种生活态度吧，短短三行，也许简单，也许深刻</p>\n<h3 id=\"独独君\"><a href=\"#独独君\" class=\"headerlink\" title=\"独独君\"></a><a href=\"http://www.jianshu.com/users/13108176a3e4/timeline\" target=\"_blank\" rel=\"noopener\">独独君</a></h3><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(<span class=\"name\">myAge&gt;20&amp;&amp;myAge&lt;=28</span>) money++<span class=\"comment\">;</span></span><br><span class=\"line\">if(<span class=\"name\">myAge&gt;28&amp;&amp;myAge&lt;=50</span>) (<span class=\"name\">family_love</span>)money<span class=\"comment\">;</span></span><br><span class=\"line\">if(<span class=\"name\">myAge&gt;50</span>) enjoyLife++<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Adrift\"><a href=\"#Adrift\" class=\"headerlink\" title=\"Adrift\"></a><a href=\"http://www.jianshu.com/users/f0c0c7b0bee7/timeline\" target=\"_blank\" rel=\"noopener\">Adrift</a></h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSString *myFutureLife = @<span class=\"string\">\"没有暑假,寒假只放9天,每天加班,加班,加班,加班…\"</span><span class=\"comment\">;</span></span><br><span class=\"line\">if (myFutureLife)</span><br><span class=\"line\">&#123;[i.<span class=\"keyword\">justSetMySelfMood </span><span class=\"keyword\">BAD];&#125;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"霖溦\"><a href=\"#霖溦\" class=\"headerlink\" title=\"霖溦\"></a><a href=\"http://www.jianshu.com/users/c8f8558a4b1d/latest_articles\" target=\"_blank\" rel=\"noopener\">霖溦</a></h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"string\">\"coding\"</span>) &#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"string\">\"you\"</span>)</span><br><span class=\"line\"> <span class=\"keyword\">break</span>;&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>在「简书」上看到的，也是一种生活态度吧，短短三行，也许简单，也许深刻</p>\n<h3 id=\"独独君\"><a href=\"#独独君\" class=\"headerlink\" title=\"独独君\"></a><a href=\"http://www.jianshu.com/users/13108176a3e4/timeline\" target=\"_blank\" rel=\"noopener\">独独君</a></h3><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(<span class=\"name\">myAge&gt;20&amp;&amp;myAge&lt;=28</span>) money++<span class=\"comment\">;</span></span><br><span class=\"line\">if(<span class=\"name\">myAge&gt;28&amp;&amp;myAge&lt;=50</span>) (<span class=\"name\">family_love</span>)money<span class=\"comment\">;</span></span><br><span class=\"line\">if(<span class=\"name\">myAge&gt;50</span>) enjoyLife++<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Adrift\"><a href=\"#Adrift\" class=\"headerlink\" title=\"Adrift\"></a><a href=\"http://www.jianshu.com/users/f0c0c7b0bee7/timeline\" target=\"_blank\" rel=\"noopener\">Adrift</a></h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSString *myFutureLife = @<span class=\"string\">\"没有暑假,寒假只放9天,每天加班,加班,加班,加班…\"</span><span class=\"comment\">;</span></span><br><span class=\"line\">if (myFutureLife)</span><br><span class=\"line\">&#123;[i.<span class=\"keyword\">justSetMySelfMood </span><span class=\"keyword\">BAD];&#125;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"霖溦\"><a href=\"#霖溦\" class=\"headerlink\" title=\"霖溦\"></a><a href=\"http://www.jianshu.com/users/c8f8558a4b1d/latest_articles\" target=\"_blank\" rel=\"noopener\">霖溦</a></h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"string\">\"coding\"</span>) &#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"string\">\"you\"</span>)</span><br><span class=\"line\"> <span class=\"keyword\">break</span>;&#125;</span><br></pre></td></tr></table></figure>","sticky":0},{"title":"魔方自己顺手的一种玩法","date":"2016-07-28T06:49:25.000Z","_content":"cross的一种，琢磨出来的一种不用记住太多公式的玩法，贴出来备忘\n\n## 还原二层:\n1.正面二层右转上去:URU'R'U'F'UF\n2.正面二三层中间竖上块还原二层右:URU'R'U'F'UF\n3.右侧二三层中间竖上块还原二层右:U'F'UFURU'R'\n4.正面二层右色块颠倒:先按1的方法转至三层,再按2的方法还原\n\n## 还原顶层十字:\n5.顶层十字:FRUR'U'F'(出现中间三个并排后U后再来一次该公式)\n\n顶层颜色统一参照图片\n\n## 还原角块:\n6.如果没有一面的角块是同色:FR'FL2F'RFL2F2就会出现一致的一面,下来按7做\n7.将正确的一面作为左面:FR'FL2F'RFL2F2\n\n## 还原全部:\n8.有一面已经完好,该面作为背面用一次R'2URUR'U'R'U'R'UR'\n9.四个棱都不对:用一次R'2URUR'U'R'U'R'UR'出现1的情形,在来一次1的公式","source":"_posts/life/2016-07-28-magic-rubik-for-me.md","raw":"title: 魔方自己顺手的一种玩法\ndate: 2016/07/28 14:49:25\ncategories:\n- 魔方\ntags: [魔方]\n---\ncross的一种，琢磨出来的一种不用记住太多公式的玩法，贴出来备忘\n\n## 还原二层:\n1.正面二层右转上去:URU'R'U'F'UF\n2.正面二三层中间竖上块还原二层右:URU'R'U'F'UF\n3.右侧二三层中间竖上块还原二层右:U'F'UFURU'R'\n4.正面二层右色块颠倒:先按1的方法转至三层,再按2的方法还原\n\n## 还原顶层十字:\n5.顶层十字:FRUR'U'F'(出现中间三个并排后U后再来一次该公式)\n\n顶层颜色统一参照图片\n\n## 还原角块:\n6.如果没有一面的角块是同色:FR'FL2F'RFL2F2就会出现一致的一面,下来按7做\n7.将正确的一面作为左面:FR'FL2F'RFL2F2\n\n## 还原全部:\n8.有一面已经完好,该面作为背面用一次R'2URUR'U'R'U'R'UR'\n9.四个棱都不对:用一次R'2URUR'U'R'U'R'UR'出现1的情形,在来一次1的公式","slug":"life/2016-07-28-magic-rubik-for-me","published":1,"updated":"2018-05-15T07:42:34.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8ey000g2wh5n21ouxlr","content":"<p>cross的一种，琢磨出来的一种不用记住太多公式的玩法，贴出来备忘</p>\n<h2 id=\"还原二层\"><a href=\"#还原二层\" class=\"headerlink\" title=\"还原二层:\"></a>还原二层:</h2><p>1.正面二层右转上去:URU’R’U’F’UF<br>2.正面二三层中间竖上块还原二层右:URU’R’U’F’UF<br>3.右侧二三层中间竖上块还原二层右:U’F’UFURU’R’<br>4.正面二层右色块颠倒:先按1的方法转至三层,再按2的方法还原</p>\n<h2 id=\"还原顶层十字\"><a href=\"#还原顶层十字\" class=\"headerlink\" title=\"还原顶层十字:\"></a>还原顶层十字:</h2><p>5.顶层十字:FRUR’U’F’(出现中间三个并排后U后再来一次该公式)</p>\n<p>顶层颜色统一参照图片</p>\n<h2 id=\"还原角块\"><a href=\"#还原角块\" class=\"headerlink\" title=\"还原角块:\"></a>还原角块:</h2><p>6.如果没有一面的角块是同色:FR’FL2F’RFL2F2就会出现一致的一面,下来按7做<br>7.将正确的一面作为左面:FR’FL2F’RFL2F2</p>\n<h2 id=\"还原全部\"><a href=\"#还原全部\" class=\"headerlink\" title=\"还原全部:\"></a>还原全部:</h2><p>8.有一面已经完好,该面作为背面用一次R’2URUR’U’R’U’R’UR’<br>9.四个棱都不对:用一次R’2URUR’U’R’U’R’UR’出现1的情形,在来一次1的公式</p>\n","site":{"data":{}},"excerpt":"","more":"<p>cross的一种，琢磨出来的一种不用记住太多公式的玩法，贴出来备忘</p>\n<h2 id=\"还原二层\"><a href=\"#还原二层\" class=\"headerlink\" title=\"还原二层:\"></a>还原二层:</h2><p>1.正面二层右转上去:URU’R’U’F’UF<br>2.正面二三层中间竖上块还原二层右:URU’R’U’F’UF<br>3.右侧二三层中间竖上块还原二层右:U’F’UFURU’R’<br>4.正面二层右色块颠倒:先按1的方法转至三层,再按2的方法还原</p>\n<h2 id=\"还原顶层十字\"><a href=\"#还原顶层十字\" class=\"headerlink\" title=\"还原顶层十字:\"></a>还原顶层十字:</h2><p>5.顶层十字:FRUR’U’F’(出现中间三个并排后U后再来一次该公式)</p>\n<p>顶层颜色统一参照图片</p>\n<h2 id=\"还原角块\"><a href=\"#还原角块\" class=\"headerlink\" title=\"还原角块:\"></a>还原角块:</h2><p>6.如果没有一面的角块是同色:FR’FL2F’RFL2F2就会出现一致的一面,下来按7做<br>7.将正确的一面作为左面:FR’FL2F’RFL2F2</p>\n<h2 id=\"还原全部\"><a href=\"#还原全部\" class=\"headerlink\" title=\"还原全部:\"></a>还原全部:</h2><p>8.有一面已经完好,该面作为背面用一次R’2URUR’U’R’U’R’UR’<br>9.四个棱都不对:用一次R’2URUR’U’R’U’R’UR’出现1的情形,在来一次1的公式</p>\n","sticky":0},{"title":"心理学理论","date":"2016-07-28T07:49:25.000Z","_content":"\n蝴蝶效应、青蛙现象、鳄鱼法则、鲇鱼效应、羊群效应、刺猬法则、手表定律、破窗理论、二八定律、木桶理论、马太效应，这些你都明白吗？\n\n### 蝴蝶效应\n上个世纪70年代，美国一个名叫洛伦兹的气象学家在解释空气系统理论时说，亚马逊雨林一只蝴蝶翅膀偶尔振动，也许两周后就会引起美国得克萨斯州的一场龙卷风。\n蝴蝶效应是说，初始条件十分微小的变化经过不断放大，对其未来状态会造成极其巨大的差别。有些小事可以糊涂，有些小事如经系统放大，则对一个组织、一个国家来说是很重要的，就不能糊涂。\n\n### 青蛙现象\n把一只青蛙直接放进热水锅里，由于它对不良环境的反应十分敏感，就会迅速跳出锅外。如果把一个青蛙放进冷水锅里，慢慢地加温，青蛙并不会立即跳出锅外，水温逐渐提高的最终结局是青蛙被煮死了，因为等水温高到青蛙无法忍受时，它已经来不及、或者说是没有能力跳出锅外了。　　\n青蛙现象告诉我们，一些突变事件，往往容易引起人们的警觉，而易致人于死地的却是在自我感觉良好的情况下，对实际情况的逐渐恶化，没有清醒的察觉。\n\n### 鳄鱼法则\n其原意是假定一只鳄鱼咬住你的脚，如果你用手去试图挣脱你的脚，鳄鱼便会同时咬住你的脚与手。你愈挣扎，就被咬住得越多。所以，万一鳄鱼咬住你的脚，你唯一的办法就是牺牲一只脚。\n譬如在股市中，鳄鱼法则就是：当你发现自己的交易背离了市场的方向，必须立即止损，不得有任何延误，不得存有任何侥幸。\n\t\n### 鲇鱼效应\n以前，沙丁鱼在运输过程中成活率很低。后有人发现，若在沙丁鱼中放一条鲇鱼，情况却有所改观，成活率会大大提高。这是何故呢?\n原来鲇鱼在到了一个陌生的环境后，就会“性情急躁”，四处乱游，这对于大量好静的沙丁鱼来说，无疑起到了搅拌作用;而沙丁鱼发现多了这样一个“异已分子”，自然也很紧张，加速游动。这样沙丁鱼缺氧的问题就迎刃而解了，沙丁鱼也就不会死了。\n\t\n### 羊群效应\n头羊往哪里走，后面的羊就跟着往哪里走。\n羊群效应最早是股票投资中的一个术语，主要是指投资者在交易过程中存在学习与模仿现象，“有样学样”，盲目效仿别人，从而导致他们在某段时期内买卖相同的股票。\n\t\n### 刺猬法则\n两只困倦的刺猬，由于寒冷而拥在一起。可因为各自身上都长着刺，于是它们离开了一段距离，但又冷得受不了，于是凑到一起。几经折腾，两只刺猬终于找到一个合适的距离：既能互相获得对方的温暖而又不至于被扎。　\n刺猬法则主要是指人际交往中的“心理距离效应”。\n\t\n### 手表定律\n手表定律是指一个人有一只表时，可以知道现在是几点钟，而当他同时拥有两只时却无法确定。两只表并不能告诉一个人更准确的时间，反而会使看表的人失去对准确时间的信心。\n手表定律在企业管理方面给我们一种非常直观的启发，就是对同一个人或同一个组织不能同时采用两种不同的方法，不能同时设置两个不同的目标，甚至每一个人不能由两个人来同时指挥，否则将使这个企业或者个人无所适从。\n\t\n### 破窗理论\n一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙地被人打破;一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西;一个很干净的地方，人们不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑地抛，丝毫不觉羞愧。\n\n### 二八定律(巴莱多定律)\n19世纪末20世纪初意大利的经济学家巴莱多认为，在任何一组东西中，最重要的只占其中一小部分，约20%，其余80%尽管是多数，却是次要的。社会约80%的财富集中在20%的人手里，而80%的人只拥有20%的社会财富。这种统计的不平衡性在社会、经济及生活中无处不在，这就是二八法则。\n二八法则告诉我们，不要平均地分析、处理和看待问题，企业经营和管理中要抓住关键的少数;要找出那些能给企业带来80%利润、总量却仅占20%的关键客户，加强服务，达到事半功倍的效果;企业领导人要对工作认真分类分析，要把主要精力花在解决主要问题、抓主要项目上。\n\n### 木桶理论\n组成木桶的木板如果长短不齐，那么木桶的盛水量不是取决于最长的那一块木板，而是取决于最短的那一块木板。\n\n### 马太效应\n《圣经·马太福音》中有一句名言：“凡有的，还要加给他，叫他有余;没有的，连他所有的，也要夺过来。”\n社会学家从中引申出了“马太效应”这一概念，用以描述社会生活领域中普遍存在的两极分化现象。\n\n### 鸟笼逻辑\n挂一个漂亮的鸟笼在房间里最显眼的地方，过不了几天，主人一定会做出下面两个选择之一：把鸟笼扔掉，或者买一只鸟回来放在鸟笼里。这就是鸟笼逻辑。过程很简单，设想你是这房间的主人，只要有人走进房间，看到鸟笼，就会忍不住问你：“鸟呢？是不是死了？”当你回答：“我从来都没有养过鸟。”人们会问：“那么，你要一个鸟笼干什么？”最后你不得不在两个选择中二选一，因为这比无休止的解释要容易得多。鸟笼逻辑的原因很简单：人们绝大部分的时候是采取惯性思维。所以可见在生活和工作中培养逻辑思维是多么重要。\n\t\n### 破窗效应\n心理学的研究上有个现象叫做“破窗效应”，就是说，一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙的被人打破；一面墙，如果出现一些涂鸦没有清洗掉，很快的，墙上就布满了乱七八糟，不堪入目的东西。一个很干净的地方，人会不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑的拋，丝毫不觉羞愧。这真是很奇怪的现象。\n心理学家研究的就是这个“引爆点”，地上究竟要有多脏，人们才会觉得反正这么脏，再脏一点无所谓，情况究竟要坏到什么程度，人们才会自暴自弃，让它烂到底。\n任何坏事，如果在开始时没有阻拦掉，形成风气，改也改不掉，就好象河堤，一个小缺口没有及时修补，可以崩坝，造成千百万倍的损失。\n犯罪其实就是失序的结果，纽约市在80年代的时候，真是无处不抢，无日不杀，大白天走在马路上也会害怕。地铁更不用说了，车厢脏乱，到处涂满了秽句，坐在地铁里，人人自危。我虽然没有被抢过，但是有位教授被人在光天化日之下，敲了一记闷棍，眼睛失明，从此结束他的研究生涯，使我多少年来谈虎变色，不敢只身去纽约开会。最近纽约的市容和市誉提升了不少，令我颇为吃惊，一个已经向下沉沦的城市，竟能死而复生，向上提升。\n因此，当我出去开会，碰到一位犯罪学家时，立刻向他讨教，原来纽约市用的就是过去书本上讲的破窗效应的理论，先改善犯罪的环境，使人们不易犯罪，再慢慢缉凶捕盗，回归秩序。\n当时这个做法虽然被人骂为缓不济急，“船都要沉了还在洗甲板”，但是纽约市还是从维护地铁车厢干净着手，并将不买车票白搭车的人用手铐铐住排成一列站在月台上，公开向民众宣示政府整顿的决心，结果发现非常有效。\n警察发现人们果然比较不会在干净的场合犯罪，又发现抓逃票很有收获，因为每七名逃票的人中就有一名是通缉犯，二十名中就有一名携带武器，因此警察愿意很认真地去抓逃票，这使得歹徒不敢逃票，出门不敢带武器，以免得不偿失、因小失大。这样纽约市就从最小、最容易的地方着手，打破了犯罪环结(chain)，使这个恶性循环无法继续下去\n\t\n### 责任分散效应\n1964年3月13日夜3时20分，在美国纽约郊外某公寓前，一位叫朱诺比白的年轻女子在结束酒巴间工作回家的路上遇刺。当她绝望地喊叫：“有人要杀人啦!救命!救命!”听到喊叫声，附近住户亮起了灯，打开了窗户，凶手吓跑了。当一切恢复平静后，凶手又返回作案。当她又叫喊时，附近的住户又打开了电灯，凶手又逃跑了。当她认为已经无事，回到自己家上楼时，凶手又一次出现在她面前，将她杀死在楼梯上。在这个过程中，尽管她大声呼救，她的邻居中至少有38位到窗前观看，但无一人来救她，甚至无一人打电话报警。这件事引起纽约社会的轰动，也引起了社会心理学工作者的重视和思考。人们把这种众多的旁观者见死不救的现象称为责任分散效应。\n对于责任分散效应形成的原因，心理学家进行了大量的实验和调查，结果发现：这种现象不能仅仅说是众人的冷酷无情，或道德日益沦丧的表现。因为在不同的场合，人们的援助行为确实是不同的。当一个人遇到紧急情境时，如果只有他一个人能提供帮助，他会清醒地意识到自己的责任，对受难者给予帮助。如果他见死不救会产生罪恶感、内疚感，这需要付出很高的心理代价。而如果有许多人在场的话，帮助求助者的责任就由大家来分担，造成责任分散，每个人分担的责任很少，旁观者甚至可能连他自己的那一份责任也意识不到，从而产生一种“我不去救，由别人去救”的心理，造成“集体冷漠”的局面。如何打破这种局面，这是心理学家正在研究的一个重要课题。\n\n### 帕金森定律\n英国著名历史学家诺斯古德·帕金森通过长期调查研究，写出一本名叫《帕金森定律》的书。他在书中阐述了机构人员膨胀的原因及后果：一个不称职的官员，可能有三条出路，第一是申请退职，把位子让给能干的人；第二是让一位能干的人来协助自己工作；第三是任用两个水平比自己更低的人当助手。这第一条路是万万走不得的，因为那样会丧失许多权利；第二条路也不能走，因为那个能干的人会成为自己的对手；看来只有第三条路最适宜。于是，两个平庸的助手分担了他的工作，他自己则高高在上发号施令，他们不会对自己的权利构成威胁。两个助手既然无能，他们就上行下效，再为自己找两个更加无能的助手。如此类推，就形成了一个机构臃肿，人浮于事，相互扯皮，效率低下的领导体系。\n\n### 晕轮效应\n俄国著名的大文豪普希金曾因晕轮效应的作用吃了大苦头。他狂热地爱上了被称为“莫斯科第一美人”的娜坦丽，并且和她结了婚。娜坦丽容貌惊人，但与普希金志不同道不合。当普希金每次把写好的诗读给她听时。她总是捂着耳朵说：“不要听！不要听！”相反，她总是要普希金陪她游乐，出席一些豪华的晚会、舞会，普希金为此丢下创作，弄得债台高筑，最后还为她决斗而死，使一颗文学巨星过早地陨落。在普希金看来，一个漂亮的女人也必然有非凡的智慧和高贵的品格，然而事实并非如此，这种现象被称为晕轮效应。\n所谓晕轮效应，就是在人际交往中，人身上表现出的某一方面的特征，掩盖了其他特征，从而造成人际认知的障碍。在日常生活中，“晕轮效应”往往在悄悄地影响着我们对别人的认知和评价。比如有的老年人对青年人的个别缺点，或衣着打扮、生活习惯看不顺眼，就认为他们一定没出息；有的青年人由于倾慕朋友的某一可爱之处，就会把他看得处处可爱，真所谓“一俊遮百丑”。晕轮效应是一种以偏概全的主观心理臆测，其错误在于：第一，它容易抓住事物的个别特征，习惯以个别推及一般，就像盲人摸象一样，以点代面；第二，它把并无内在联系的一些个性或外貌特征联系在一起，断言有这种特征必然会有另一种特征；第三，它说好就全都肯定，说坏就全部否定，这是一种受主观偏见支配的绝对化倾向。总之，晕轮效应是人际交往中对人的心理影响很大的认知障碍，我们在交往中要尽量地避免和克服晕轮效应的副作用。\n\t\n### 霍桑效应（Hawthorne effect）\n心理学上的一种实验者效应。20世纪20-30年代，美国研究人员在芝加哥西方电力公司霍桑工厂进行的工作条件、社会因素和生产效益关系实验中发现了实验者效应，称霍桑效应。\n实验的第一阶段是从1924年11月开始的工作条件和生产效益的关系，设为实验组和控制组。结果不管增加或控制照明度，实验组产量都上升，而且照明度不变的控制组产量也增加。另外，有试验了工资报酬、工间休息时间、每日工作长度和每周工作天数等因素，也看不出这些工作条件对生产效益有何直接影响。第二阶段的试验是由美国哈佛大学教授梅奥领导的，着重研究社会因素与生产效率的关系，结果发现生产效率的提高主要是由于被实验者在精神方面发生了巨大的变化。参加试验的工人被置于专门的实验室并由研究人员领导，其社会状况发生了变化，受到各方面的关注，从而形成了参与试验的感觉，觉得自己是公司中重要的一部分，从而使工人从社会角度方面被激励，促进产量上升。\n这个效应告诉我们，当同学或自己受到公众的关注或注视时，学习和交往的效率就会大大增加。因此，我们在日常生活中要学会与他人友好相处，明白什么样的行为才是同学和老师所接受和赞赏的，我们只有在生活和学习中不断地增加自己的良好行为，才可能受到更多人的关注和赞赏，也才可能让我们的学习不断进步，充满自信！\n\n### 习得性无助实验\n习得性无助效应最早有奥弗米尔和西里格曼发现，后来在动物和人类研究中被广泛探讨。简单地说，很多实验表明，经过训练，狗可以越过屏障或从事其他的行为来逃避实验者加于它的电击。但是，如果狗以前受到不可预期（不知道什么时候到来）且不可控制的电击（如电击的中断与否不依赖于狗的行为），当狗后来有机会逃离电击时，他们也变得无力逃离。而且，狗还表现出其他方面的缺陷，如感到沮丧和压抑，主动性降低等等。\n狗之所以表现出这种状况，是由于在实验的早期学到了一种无助感。也就是说，它们认识到自己无论做什么都不能控制电击的终止。在每次实验中，电击终止都是在实验者掌控之下的，而狗会认识到自己没有能力改变这种外界的控制，从而学到了一种无助感。\n人如果产生了习得性无助，就成为了一种深深的绝望和悲哀。因此，我们在学习和生活中应把自己的眼光在开阔一点，看到事件背后的真正的决定因素，不要使我们自己陷入绝望。\n\n### 证人的记忆\n证人，在我们的认识里，通常都是提供一些客观的证据的人，就是把自己亲眼看到、亲耳听到的东西如实地讲出来的人。然而，心理学研究证明，很多证人提供的证词都不太准确，或者说是具有个人倾向性，带着个人的观点和意识。\n证人对他们的证词的信心并不能决定他们证词的准确性，这一研究结果令人感到惊讶。心理学家珀费可特和豪林斯决定对这一结论进行更深入的研究。为了考察证人的证词是否有特别的东西，他们将证人的记忆与对一般知识的记忆进行了比较。\n他们让被试看一个简短的录象，是关于一个女孩被绑架的案件。第二天，让被试回答一些有关录象里内容的问题，并要求他们说出对自己回答的信心程度，然后做再认记忆测验。接下来，使用同样的方法，内容是从百科全书和通俗读物中选出的一般知识问题。\n和以前发生的一样，珀费可特和豪林斯也发现，在证人回忆的精确性上，那些对自己的回答信心十足的人实际上并不比那些没信心的人更高明，但对于一般知识来说，情况就不是这样，信心高的人回忆成绩比信心不足的人好得多。\n人们对于自己在一般知识上的优势与弱势有自知之明。因此，倾向于修改他们对于信心量表的测验结果。一般知识是一个数据库，在个体之间是共享的，它有公认的正确答案，被试可以自己去衡量。例如，人们会知道自己在体育问题上是否比别人更好或更差一点。但是，目击的事件不受这种自知之明的影响。例如，从总体上讲，他们不大可能知道自己比别人在记忆事件中的参与者头发颜色方面更好或更差。\n　　\n### 罗森塔尔效应\n美国心理学家罗森塔尔等人于1968年做过一个著名实验。他们到一所小学，在一至六年级各选三个班的儿童进行煞有介事的“预测未来发展的测验”，然后实验者将认为有“优异发展可能”的学生名单通知教师。其实，这个名单并不是根据测验结果确定的，而是随机抽取的。它是以“权威性的谎言”暗示教师，从而调动了教师对名单上的学生的某种期待心理。8个月后，再次智能测验的结果发现，名单上的学生的成绩普遍提高，教师也给了他们良好的品行评语。这个实验取得了奇迹般的效果，人们把这种通过教师对学生心理的潜移默化的影响，从而使学生取得教师所期望的进步的现象，称为“罗森塔尔效应”，习惯上也称为皮格马利翁效应（皮格马利翁是古希腊神话中塞浦路斯国王，他对一尊少女塑像产生爱慕之情，他的热望最终使这尊雕像变为一个真人，两人相爱结合）。\n教育实践也表明：如果教师喜爱某些学生，对他们会抱有较高期望，经过一段时间，学生感受到教师的关怀、爱护和鼓励；常常以积极态度对待老师、对待学习以及对待自己的行为，学生更加自尊、自信、自爱、自强，诱发出一种积极向上的激情，这些学生常常会取得老师所期望的进步。相反，那些受到老师忽视、歧视的学生，久而久之会从教师的言谈、举止、表情中感受到教师的“偏心”，也会以消极的态度对待老师、对待自己的学习，不理会或拒绝听从老师的要求；这些学生常常会一天天变坏，最后沦为社会的不良分子。尽管有些例外，但大趋势却是如此，同时这也给教师敲响了警钟。\n\n### 虚假同感偏差（false consensus bias）\n我们通常都会相信，我们的爱好与大多数人是一样的。如果你喜欢玩电脑游戏，那么就有可能高估喜欢电脑游戏的人数。你也通常会高估给自己喜欢的同学投票的人数，高估自己在群体中的威信与领导能力等等。你的这种高估与你的行为及态度有相同特点的人数的倾向性就叫做“虚假同感偏差”。有些因素会影响你的这种虚假同感偏差强度：\n（1）当外部的归因强于内部归因时；\n（2）当前的行为或事件对某人非常重要时；\n（3）当你对自己的观点非常确定或坚信时；\n（4）当你的地位或正常生活和学习受到某种威胁时；\n（5）当涉及到某种积极的品质或个性时；\n（6）当你将其他人看成与自己是相似时。","source":"_posts/life/2016-07-28-theories-of-psychology.md","raw":"title: 心理学理论\ndate: 2016/07/28 15:49:25\ncategories:\n- 心理学\ntags: [心理学]\n---\n\n蝴蝶效应、青蛙现象、鳄鱼法则、鲇鱼效应、羊群效应、刺猬法则、手表定律、破窗理论、二八定律、木桶理论、马太效应，这些你都明白吗？\n\n### 蝴蝶效应\n上个世纪70年代，美国一个名叫洛伦兹的气象学家在解释空气系统理论时说，亚马逊雨林一只蝴蝶翅膀偶尔振动，也许两周后就会引起美国得克萨斯州的一场龙卷风。\n蝴蝶效应是说，初始条件十分微小的变化经过不断放大，对其未来状态会造成极其巨大的差别。有些小事可以糊涂，有些小事如经系统放大，则对一个组织、一个国家来说是很重要的，就不能糊涂。\n\n### 青蛙现象\n把一只青蛙直接放进热水锅里，由于它对不良环境的反应十分敏感，就会迅速跳出锅外。如果把一个青蛙放进冷水锅里，慢慢地加温，青蛙并不会立即跳出锅外，水温逐渐提高的最终结局是青蛙被煮死了，因为等水温高到青蛙无法忍受时，它已经来不及、或者说是没有能力跳出锅外了。　　\n青蛙现象告诉我们，一些突变事件，往往容易引起人们的警觉，而易致人于死地的却是在自我感觉良好的情况下，对实际情况的逐渐恶化，没有清醒的察觉。\n\n### 鳄鱼法则\n其原意是假定一只鳄鱼咬住你的脚，如果你用手去试图挣脱你的脚，鳄鱼便会同时咬住你的脚与手。你愈挣扎，就被咬住得越多。所以，万一鳄鱼咬住你的脚，你唯一的办法就是牺牲一只脚。\n譬如在股市中，鳄鱼法则就是：当你发现自己的交易背离了市场的方向，必须立即止损，不得有任何延误，不得存有任何侥幸。\n\t\n### 鲇鱼效应\n以前，沙丁鱼在运输过程中成活率很低。后有人发现，若在沙丁鱼中放一条鲇鱼，情况却有所改观，成活率会大大提高。这是何故呢?\n原来鲇鱼在到了一个陌生的环境后，就会“性情急躁”，四处乱游，这对于大量好静的沙丁鱼来说，无疑起到了搅拌作用;而沙丁鱼发现多了这样一个“异已分子”，自然也很紧张，加速游动。这样沙丁鱼缺氧的问题就迎刃而解了，沙丁鱼也就不会死了。\n\t\n### 羊群效应\n头羊往哪里走，后面的羊就跟着往哪里走。\n羊群效应最早是股票投资中的一个术语，主要是指投资者在交易过程中存在学习与模仿现象，“有样学样”，盲目效仿别人，从而导致他们在某段时期内买卖相同的股票。\n\t\n### 刺猬法则\n两只困倦的刺猬，由于寒冷而拥在一起。可因为各自身上都长着刺，于是它们离开了一段距离，但又冷得受不了，于是凑到一起。几经折腾，两只刺猬终于找到一个合适的距离：既能互相获得对方的温暖而又不至于被扎。　\n刺猬法则主要是指人际交往中的“心理距离效应”。\n\t\n### 手表定律\n手表定律是指一个人有一只表时，可以知道现在是几点钟，而当他同时拥有两只时却无法确定。两只表并不能告诉一个人更准确的时间，反而会使看表的人失去对准确时间的信心。\n手表定律在企业管理方面给我们一种非常直观的启发，就是对同一个人或同一个组织不能同时采用两种不同的方法，不能同时设置两个不同的目标，甚至每一个人不能由两个人来同时指挥，否则将使这个企业或者个人无所适从。\n\t\n### 破窗理论\n一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙地被人打破;一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西;一个很干净的地方，人们不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑地抛，丝毫不觉羞愧。\n\n### 二八定律(巴莱多定律)\n19世纪末20世纪初意大利的经济学家巴莱多认为，在任何一组东西中，最重要的只占其中一小部分，约20%，其余80%尽管是多数，却是次要的。社会约80%的财富集中在20%的人手里，而80%的人只拥有20%的社会财富。这种统计的不平衡性在社会、经济及生活中无处不在，这就是二八法则。\n二八法则告诉我们，不要平均地分析、处理和看待问题，企业经营和管理中要抓住关键的少数;要找出那些能给企业带来80%利润、总量却仅占20%的关键客户，加强服务，达到事半功倍的效果;企业领导人要对工作认真分类分析，要把主要精力花在解决主要问题、抓主要项目上。\n\n### 木桶理论\n组成木桶的木板如果长短不齐，那么木桶的盛水量不是取决于最长的那一块木板，而是取决于最短的那一块木板。\n\n### 马太效应\n《圣经·马太福音》中有一句名言：“凡有的，还要加给他，叫他有余;没有的，连他所有的，也要夺过来。”\n社会学家从中引申出了“马太效应”这一概念，用以描述社会生活领域中普遍存在的两极分化现象。\n\n### 鸟笼逻辑\n挂一个漂亮的鸟笼在房间里最显眼的地方，过不了几天，主人一定会做出下面两个选择之一：把鸟笼扔掉，或者买一只鸟回来放在鸟笼里。这就是鸟笼逻辑。过程很简单，设想你是这房间的主人，只要有人走进房间，看到鸟笼，就会忍不住问你：“鸟呢？是不是死了？”当你回答：“我从来都没有养过鸟。”人们会问：“那么，你要一个鸟笼干什么？”最后你不得不在两个选择中二选一，因为这比无休止的解释要容易得多。鸟笼逻辑的原因很简单：人们绝大部分的时候是采取惯性思维。所以可见在生活和工作中培养逻辑思维是多么重要。\n\t\n### 破窗效应\n心理学的研究上有个现象叫做“破窗效应”，就是说，一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙的被人打破；一面墙，如果出现一些涂鸦没有清洗掉，很快的，墙上就布满了乱七八糟，不堪入目的东西。一个很干净的地方，人会不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑的拋，丝毫不觉羞愧。这真是很奇怪的现象。\n心理学家研究的就是这个“引爆点”，地上究竟要有多脏，人们才会觉得反正这么脏，再脏一点无所谓，情况究竟要坏到什么程度，人们才会自暴自弃，让它烂到底。\n任何坏事，如果在开始时没有阻拦掉，形成风气，改也改不掉，就好象河堤，一个小缺口没有及时修补，可以崩坝，造成千百万倍的损失。\n犯罪其实就是失序的结果，纽约市在80年代的时候，真是无处不抢，无日不杀，大白天走在马路上也会害怕。地铁更不用说了，车厢脏乱，到处涂满了秽句，坐在地铁里，人人自危。我虽然没有被抢过，但是有位教授被人在光天化日之下，敲了一记闷棍，眼睛失明，从此结束他的研究生涯，使我多少年来谈虎变色，不敢只身去纽约开会。最近纽约的市容和市誉提升了不少，令我颇为吃惊，一个已经向下沉沦的城市，竟能死而复生，向上提升。\n因此，当我出去开会，碰到一位犯罪学家时，立刻向他讨教，原来纽约市用的就是过去书本上讲的破窗效应的理论，先改善犯罪的环境，使人们不易犯罪，再慢慢缉凶捕盗，回归秩序。\n当时这个做法虽然被人骂为缓不济急，“船都要沉了还在洗甲板”，但是纽约市还是从维护地铁车厢干净着手，并将不买车票白搭车的人用手铐铐住排成一列站在月台上，公开向民众宣示政府整顿的决心，结果发现非常有效。\n警察发现人们果然比较不会在干净的场合犯罪，又发现抓逃票很有收获，因为每七名逃票的人中就有一名是通缉犯，二十名中就有一名携带武器，因此警察愿意很认真地去抓逃票，这使得歹徒不敢逃票，出门不敢带武器，以免得不偿失、因小失大。这样纽约市就从最小、最容易的地方着手，打破了犯罪环结(chain)，使这个恶性循环无法继续下去\n\t\n### 责任分散效应\n1964年3月13日夜3时20分，在美国纽约郊外某公寓前，一位叫朱诺比白的年轻女子在结束酒巴间工作回家的路上遇刺。当她绝望地喊叫：“有人要杀人啦!救命!救命!”听到喊叫声，附近住户亮起了灯，打开了窗户，凶手吓跑了。当一切恢复平静后，凶手又返回作案。当她又叫喊时，附近的住户又打开了电灯，凶手又逃跑了。当她认为已经无事，回到自己家上楼时，凶手又一次出现在她面前，将她杀死在楼梯上。在这个过程中，尽管她大声呼救，她的邻居中至少有38位到窗前观看，但无一人来救她，甚至无一人打电话报警。这件事引起纽约社会的轰动，也引起了社会心理学工作者的重视和思考。人们把这种众多的旁观者见死不救的现象称为责任分散效应。\n对于责任分散效应形成的原因，心理学家进行了大量的实验和调查，结果发现：这种现象不能仅仅说是众人的冷酷无情，或道德日益沦丧的表现。因为在不同的场合，人们的援助行为确实是不同的。当一个人遇到紧急情境时，如果只有他一个人能提供帮助，他会清醒地意识到自己的责任，对受难者给予帮助。如果他见死不救会产生罪恶感、内疚感，这需要付出很高的心理代价。而如果有许多人在场的话，帮助求助者的责任就由大家来分担，造成责任分散，每个人分担的责任很少，旁观者甚至可能连他自己的那一份责任也意识不到，从而产生一种“我不去救，由别人去救”的心理，造成“集体冷漠”的局面。如何打破这种局面，这是心理学家正在研究的一个重要课题。\n\n### 帕金森定律\n英国著名历史学家诺斯古德·帕金森通过长期调查研究，写出一本名叫《帕金森定律》的书。他在书中阐述了机构人员膨胀的原因及后果：一个不称职的官员，可能有三条出路，第一是申请退职，把位子让给能干的人；第二是让一位能干的人来协助自己工作；第三是任用两个水平比自己更低的人当助手。这第一条路是万万走不得的，因为那样会丧失许多权利；第二条路也不能走，因为那个能干的人会成为自己的对手；看来只有第三条路最适宜。于是，两个平庸的助手分担了他的工作，他自己则高高在上发号施令，他们不会对自己的权利构成威胁。两个助手既然无能，他们就上行下效，再为自己找两个更加无能的助手。如此类推，就形成了一个机构臃肿，人浮于事，相互扯皮，效率低下的领导体系。\n\n### 晕轮效应\n俄国著名的大文豪普希金曾因晕轮效应的作用吃了大苦头。他狂热地爱上了被称为“莫斯科第一美人”的娜坦丽，并且和她结了婚。娜坦丽容貌惊人，但与普希金志不同道不合。当普希金每次把写好的诗读给她听时。她总是捂着耳朵说：“不要听！不要听！”相反，她总是要普希金陪她游乐，出席一些豪华的晚会、舞会，普希金为此丢下创作，弄得债台高筑，最后还为她决斗而死，使一颗文学巨星过早地陨落。在普希金看来，一个漂亮的女人也必然有非凡的智慧和高贵的品格，然而事实并非如此，这种现象被称为晕轮效应。\n所谓晕轮效应，就是在人际交往中，人身上表现出的某一方面的特征，掩盖了其他特征，从而造成人际认知的障碍。在日常生活中，“晕轮效应”往往在悄悄地影响着我们对别人的认知和评价。比如有的老年人对青年人的个别缺点，或衣着打扮、生活习惯看不顺眼，就认为他们一定没出息；有的青年人由于倾慕朋友的某一可爱之处，就会把他看得处处可爱，真所谓“一俊遮百丑”。晕轮效应是一种以偏概全的主观心理臆测，其错误在于：第一，它容易抓住事物的个别特征，习惯以个别推及一般，就像盲人摸象一样，以点代面；第二，它把并无内在联系的一些个性或外貌特征联系在一起，断言有这种特征必然会有另一种特征；第三，它说好就全都肯定，说坏就全部否定，这是一种受主观偏见支配的绝对化倾向。总之，晕轮效应是人际交往中对人的心理影响很大的认知障碍，我们在交往中要尽量地避免和克服晕轮效应的副作用。\n\t\n### 霍桑效应（Hawthorne effect）\n心理学上的一种实验者效应。20世纪20-30年代，美国研究人员在芝加哥西方电力公司霍桑工厂进行的工作条件、社会因素和生产效益关系实验中发现了实验者效应，称霍桑效应。\n实验的第一阶段是从1924年11月开始的工作条件和生产效益的关系，设为实验组和控制组。结果不管增加或控制照明度，实验组产量都上升，而且照明度不变的控制组产量也增加。另外，有试验了工资报酬、工间休息时间、每日工作长度和每周工作天数等因素，也看不出这些工作条件对生产效益有何直接影响。第二阶段的试验是由美国哈佛大学教授梅奥领导的，着重研究社会因素与生产效率的关系，结果发现生产效率的提高主要是由于被实验者在精神方面发生了巨大的变化。参加试验的工人被置于专门的实验室并由研究人员领导，其社会状况发生了变化，受到各方面的关注，从而形成了参与试验的感觉，觉得自己是公司中重要的一部分，从而使工人从社会角度方面被激励，促进产量上升。\n这个效应告诉我们，当同学或自己受到公众的关注或注视时，学习和交往的效率就会大大增加。因此，我们在日常生活中要学会与他人友好相处，明白什么样的行为才是同学和老师所接受和赞赏的，我们只有在生活和学习中不断地增加自己的良好行为，才可能受到更多人的关注和赞赏，也才可能让我们的学习不断进步，充满自信！\n\n### 习得性无助实验\n习得性无助效应最早有奥弗米尔和西里格曼发现，后来在动物和人类研究中被广泛探讨。简单地说，很多实验表明，经过训练，狗可以越过屏障或从事其他的行为来逃避实验者加于它的电击。但是，如果狗以前受到不可预期（不知道什么时候到来）且不可控制的电击（如电击的中断与否不依赖于狗的行为），当狗后来有机会逃离电击时，他们也变得无力逃离。而且，狗还表现出其他方面的缺陷，如感到沮丧和压抑，主动性降低等等。\n狗之所以表现出这种状况，是由于在实验的早期学到了一种无助感。也就是说，它们认识到自己无论做什么都不能控制电击的终止。在每次实验中，电击终止都是在实验者掌控之下的，而狗会认识到自己没有能力改变这种外界的控制，从而学到了一种无助感。\n人如果产生了习得性无助，就成为了一种深深的绝望和悲哀。因此，我们在学习和生活中应把自己的眼光在开阔一点，看到事件背后的真正的决定因素，不要使我们自己陷入绝望。\n\n### 证人的记忆\n证人，在我们的认识里，通常都是提供一些客观的证据的人，就是把自己亲眼看到、亲耳听到的东西如实地讲出来的人。然而，心理学研究证明，很多证人提供的证词都不太准确，或者说是具有个人倾向性，带着个人的观点和意识。\n证人对他们的证词的信心并不能决定他们证词的准确性，这一研究结果令人感到惊讶。心理学家珀费可特和豪林斯决定对这一结论进行更深入的研究。为了考察证人的证词是否有特别的东西，他们将证人的记忆与对一般知识的记忆进行了比较。\n他们让被试看一个简短的录象，是关于一个女孩被绑架的案件。第二天，让被试回答一些有关录象里内容的问题，并要求他们说出对自己回答的信心程度，然后做再认记忆测验。接下来，使用同样的方法，内容是从百科全书和通俗读物中选出的一般知识问题。\n和以前发生的一样，珀费可特和豪林斯也发现，在证人回忆的精确性上，那些对自己的回答信心十足的人实际上并不比那些没信心的人更高明，但对于一般知识来说，情况就不是这样，信心高的人回忆成绩比信心不足的人好得多。\n人们对于自己在一般知识上的优势与弱势有自知之明。因此，倾向于修改他们对于信心量表的测验结果。一般知识是一个数据库，在个体之间是共享的，它有公认的正确答案，被试可以自己去衡量。例如，人们会知道自己在体育问题上是否比别人更好或更差一点。但是，目击的事件不受这种自知之明的影响。例如，从总体上讲，他们不大可能知道自己比别人在记忆事件中的参与者头发颜色方面更好或更差。\n　　\n### 罗森塔尔效应\n美国心理学家罗森塔尔等人于1968年做过一个著名实验。他们到一所小学，在一至六年级各选三个班的儿童进行煞有介事的“预测未来发展的测验”，然后实验者将认为有“优异发展可能”的学生名单通知教师。其实，这个名单并不是根据测验结果确定的，而是随机抽取的。它是以“权威性的谎言”暗示教师，从而调动了教师对名单上的学生的某种期待心理。8个月后，再次智能测验的结果发现，名单上的学生的成绩普遍提高，教师也给了他们良好的品行评语。这个实验取得了奇迹般的效果，人们把这种通过教师对学生心理的潜移默化的影响，从而使学生取得教师所期望的进步的现象，称为“罗森塔尔效应”，习惯上也称为皮格马利翁效应（皮格马利翁是古希腊神话中塞浦路斯国王，他对一尊少女塑像产生爱慕之情，他的热望最终使这尊雕像变为一个真人，两人相爱结合）。\n教育实践也表明：如果教师喜爱某些学生，对他们会抱有较高期望，经过一段时间，学生感受到教师的关怀、爱护和鼓励；常常以积极态度对待老师、对待学习以及对待自己的行为，学生更加自尊、自信、自爱、自强，诱发出一种积极向上的激情，这些学生常常会取得老师所期望的进步。相反，那些受到老师忽视、歧视的学生，久而久之会从教师的言谈、举止、表情中感受到教师的“偏心”，也会以消极的态度对待老师、对待自己的学习，不理会或拒绝听从老师的要求；这些学生常常会一天天变坏，最后沦为社会的不良分子。尽管有些例外，但大趋势却是如此，同时这也给教师敲响了警钟。\n\n### 虚假同感偏差（false consensus bias）\n我们通常都会相信，我们的爱好与大多数人是一样的。如果你喜欢玩电脑游戏，那么就有可能高估喜欢电脑游戏的人数。你也通常会高估给自己喜欢的同学投票的人数，高估自己在群体中的威信与领导能力等等。你的这种高估与你的行为及态度有相同特点的人数的倾向性就叫做“虚假同感偏差”。有些因素会影响你的这种虚假同感偏差强度：\n（1）当外部的归因强于内部归因时；\n（2）当前的行为或事件对某人非常重要时；\n（3）当你对自己的观点非常确定或坚信时；\n（4）当你的地位或正常生活和学习受到某种威胁时；\n（5）当涉及到某种积极的品质或个性时；\n（6）当你将其他人看成与自己是相似时。","slug":"life/2016-07-28-theories-of-psychology","published":1,"updated":"2018-05-15T07:42:34.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8f2000i2wh5n5ah8av5","content":"<p>蝴蝶效应、青蛙现象、鳄鱼法则、鲇鱼效应、羊群效应、刺猬法则、手表定律、破窗理论、二八定律、木桶理论、马太效应，这些你都明白吗？</p>\n<h3 id=\"蝴蝶效应\"><a href=\"#蝴蝶效应\" class=\"headerlink\" title=\"蝴蝶效应\"></a>蝴蝶效应</h3><p>上个世纪70年代，美国一个名叫洛伦兹的气象学家在解释空气系统理论时说，亚马逊雨林一只蝴蝶翅膀偶尔振动，也许两周后就会引起美国得克萨斯州的一场龙卷风。<br>蝴蝶效应是说，初始条件十分微小的变化经过不断放大，对其未来状态会造成极其巨大的差别。有些小事可以糊涂，有些小事如经系统放大，则对一个组织、一个国家来说是很重要的，就不能糊涂。</p>\n<h3 id=\"青蛙现象\"><a href=\"#青蛙现象\" class=\"headerlink\" title=\"青蛙现象\"></a>青蛙现象</h3><p>把一只青蛙直接放进热水锅里，由于它对不良环境的反应十分敏感，就会迅速跳出锅外。如果把一个青蛙放进冷水锅里，慢慢地加温，青蛙并不会立即跳出锅外，水温逐渐提高的最终结局是青蛙被煮死了，因为等水温高到青蛙无法忍受时，它已经来不及、或者说是没有能力跳出锅外了。　　<br>青蛙现象告诉我们，一些突变事件，往往容易引起人们的警觉，而易致人于死地的却是在自我感觉良好的情况下，对实际情况的逐渐恶化，没有清醒的察觉。</p>\n<h3 id=\"鳄鱼法则\"><a href=\"#鳄鱼法则\" class=\"headerlink\" title=\"鳄鱼法则\"></a>鳄鱼法则</h3><p>其原意是假定一只鳄鱼咬住你的脚，如果你用手去试图挣脱你的脚，鳄鱼便会同时咬住你的脚与手。你愈挣扎，就被咬住得越多。所以，万一鳄鱼咬住你的脚，你唯一的办法就是牺牲一只脚。<br>譬如在股市中，鳄鱼法则就是：当你发现自己的交易背离了市场的方向，必须立即止损，不得有任何延误，不得存有任何侥幸。</p>\n<h3 id=\"鲇鱼效应\"><a href=\"#鲇鱼效应\" class=\"headerlink\" title=\"鲇鱼效应\"></a>鲇鱼效应</h3><p>以前，沙丁鱼在运输过程中成活率很低。后有人发现，若在沙丁鱼中放一条鲇鱼，情况却有所改观，成活率会大大提高。这是何故呢?<br>原来鲇鱼在到了一个陌生的环境后，就会“性情急躁”，四处乱游，这对于大量好静的沙丁鱼来说，无疑起到了搅拌作用;而沙丁鱼发现多了这样一个“异已分子”，自然也很紧张，加速游动。这样沙丁鱼缺氧的问题就迎刃而解了，沙丁鱼也就不会死了。</p>\n<h3 id=\"羊群效应\"><a href=\"#羊群效应\" class=\"headerlink\" title=\"羊群效应\"></a>羊群效应</h3><p>头羊往哪里走，后面的羊就跟着往哪里走。<br>羊群效应最早是股票投资中的一个术语，主要是指投资者在交易过程中存在学习与模仿现象，“有样学样”，盲目效仿别人，从而导致他们在某段时期内买卖相同的股票。</p>\n<h3 id=\"刺猬法则\"><a href=\"#刺猬法则\" class=\"headerlink\" title=\"刺猬法则\"></a>刺猬法则</h3><p>两只困倦的刺猬，由于寒冷而拥在一起。可因为各自身上都长着刺，于是它们离开了一段距离，但又冷得受不了，于是凑到一起。几经折腾，两只刺猬终于找到一个合适的距离：既能互相获得对方的温暖而又不至于被扎。　<br>刺猬法则主要是指人际交往中的“心理距离效应”。</p>\n<h3 id=\"手表定律\"><a href=\"#手表定律\" class=\"headerlink\" title=\"手表定律\"></a>手表定律</h3><p>手表定律是指一个人有一只表时，可以知道现在是几点钟，而当他同时拥有两只时却无法确定。两只表并不能告诉一个人更准确的时间，反而会使看表的人失去对准确时间的信心。<br>手表定律在企业管理方面给我们一种非常直观的启发，就是对同一个人或同一个组织不能同时采用两种不同的方法，不能同时设置两个不同的目标，甚至每一个人不能由两个人来同时指挥，否则将使这个企业或者个人无所适从。</p>\n<h3 id=\"破窗理论\"><a href=\"#破窗理论\" class=\"headerlink\" title=\"破窗理论\"></a>破窗理论</h3><p>一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙地被人打破;一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西;一个很干净的地方，人们不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑地抛，丝毫不觉羞愧。</p>\n<h3 id=\"二八定律-巴莱多定律\"><a href=\"#二八定律-巴莱多定律\" class=\"headerlink\" title=\"二八定律(巴莱多定律)\"></a>二八定律(巴莱多定律)</h3><p>19世纪末20世纪初意大利的经济学家巴莱多认为，在任何一组东西中，最重要的只占其中一小部分，约20%，其余80%尽管是多数，却是次要的。社会约80%的财富集中在20%的人手里，而80%的人只拥有20%的社会财富。这种统计的不平衡性在社会、经济及生活中无处不在，这就是二八法则。<br>二八法则告诉我们，不要平均地分析、处理和看待问题，企业经营和管理中要抓住关键的少数;要找出那些能给企业带来80%利润、总量却仅占20%的关键客户，加强服务，达到事半功倍的效果;企业领导人要对工作认真分类分析，要把主要精力花在解决主要问题、抓主要项目上。</p>\n<h3 id=\"木桶理论\"><a href=\"#木桶理论\" class=\"headerlink\" title=\"木桶理论\"></a>木桶理论</h3><p>组成木桶的木板如果长短不齐，那么木桶的盛水量不是取决于最长的那一块木板，而是取决于最短的那一块木板。</p>\n<h3 id=\"马太效应\"><a href=\"#马太效应\" class=\"headerlink\" title=\"马太效应\"></a>马太效应</h3><p>《圣经·马太福音》中有一句名言：“凡有的，还要加给他，叫他有余;没有的，连他所有的，也要夺过来。”<br>社会学家从中引申出了“马太效应”这一概念，用以描述社会生活领域中普遍存在的两极分化现象。</p>\n<h3 id=\"鸟笼逻辑\"><a href=\"#鸟笼逻辑\" class=\"headerlink\" title=\"鸟笼逻辑\"></a>鸟笼逻辑</h3><p>挂一个漂亮的鸟笼在房间里最显眼的地方，过不了几天，主人一定会做出下面两个选择之一：把鸟笼扔掉，或者买一只鸟回来放在鸟笼里。这就是鸟笼逻辑。过程很简单，设想你是这房间的主人，只要有人走进房间，看到鸟笼，就会忍不住问你：“鸟呢？是不是死了？”当你回答：“我从来都没有养过鸟。”人们会问：“那么，你要一个鸟笼干什么？”最后你不得不在两个选择中二选一，因为这比无休止的解释要容易得多。鸟笼逻辑的原因很简单：人们绝大部分的时候是采取惯性思维。所以可见在生活和工作中培养逻辑思维是多么重要。</p>\n<h3 id=\"破窗效应\"><a href=\"#破窗效应\" class=\"headerlink\" title=\"破窗效应\"></a>破窗效应</h3><p>心理学的研究上有个现象叫做“破窗效应”，就是说，一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙的被人打破；一面墙，如果出现一些涂鸦没有清洗掉，很快的，墙上就布满了乱七八糟，不堪入目的东西。一个很干净的地方，人会不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑的拋，丝毫不觉羞愧。这真是很奇怪的现象。<br>心理学家研究的就是这个“引爆点”，地上究竟要有多脏，人们才会觉得反正这么脏，再脏一点无所谓，情况究竟要坏到什么程度，人们才会自暴自弃，让它烂到底。<br>任何坏事，如果在开始时没有阻拦掉，形成风气，改也改不掉，就好象河堤，一个小缺口没有及时修补，可以崩坝，造成千百万倍的损失。<br>犯罪其实就是失序的结果，纽约市在80年代的时候，真是无处不抢，无日不杀，大白天走在马路上也会害怕。地铁更不用说了，车厢脏乱，到处涂满了秽句，坐在地铁里，人人自危。我虽然没有被抢过，但是有位教授被人在光天化日之下，敲了一记闷棍，眼睛失明，从此结束他的研究生涯，使我多少年来谈虎变色，不敢只身去纽约开会。最近纽约的市容和市誉提升了不少，令我颇为吃惊，一个已经向下沉沦的城市，竟能死而复生，向上提升。<br>因此，当我出去开会，碰到一位犯罪学家时，立刻向他讨教，原来纽约市用的就是过去书本上讲的破窗效应的理论，先改善犯罪的环境，使人们不易犯罪，再慢慢缉凶捕盗，回归秩序。<br>当时这个做法虽然被人骂为缓不济急，“船都要沉了还在洗甲板”，但是纽约市还是从维护地铁车厢干净着手，并将不买车票白搭车的人用手铐铐住排成一列站在月台上，公开向民众宣示政府整顿的决心，结果发现非常有效。<br>警察发现人们果然比较不会在干净的场合犯罪，又发现抓逃票很有收获，因为每七名逃票的人中就有一名是通缉犯，二十名中就有一名携带武器，因此警察愿意很认真地去抓逃票，这使得歹徒不敢逃票，出门不敢带武器，以免得不偿失、因小失大。这样纽约市就从最小、最容易的地方着手，打破了犯罪环结(chain)，使这个恶性循环无法继续下去</p>\n<h3 id=\"责任分散效应\"><a href=\"#责任分散效应\" class=\"headerlink\" title=\"责任分散效应\"></a>责任分散效应</h3><p>1964年3月13日夜3时20分，在美国纽约郊外某公寓前，一位叫朱诺比白的年轻女子在结束酒巴间工作回家的路上遇刺。当她绝望地喊叫：“有人要杀人啦!救命!救命!”听到喊叫声，附近住户亮起了灯，打开了窗户，凶手吓跑了。当一切恢复平静后，凶手又返回作案。当她又叫喊时，附近的住户又打开了电灯，凶手又逃跑了。当她认为已经无事，回到自己家上楼时，凶手又一次出现在她面前，将她杀死在楼梯上。在这个过程中，尽管她大声呼救，她的邻居中至少有38位到窗前观看，但无一人来救她，甚至无一人打电话报警。这件事引起纽约社会的轰动，也引起了社会心理学工作者的重视和思考。人们把这种众多的旁观者见死不救的现象称为责任分散效应。<br>对于责任分散效应形成的原因，心理学家进行了大量的实验和调查，结果发现：这种现象不能仅仅说是众人的冷酷无情，或道德日益沦丧的表现。因为在不同的场合，人们的援助行为确实是不同的。当一个人遇到紧急情境时，如果只有他一个人能提供帮助，他会清醒地意识到自己的责任，对受难者给予帮助。如果他见死不救会产生罪恶感、内疚感，这需要付出很高的心理代价。而如果有许多人在场的话，帮助求助者的责任就由大家来分担，造成责任分散，每个人分担的责任很少，旁观者甚至可能连他自己的那一份责任也意识不到，从而产生一种“我不去救，由别人去救”的心理，造成“集体冷漠”的局面。如何打破这种局面，这是心理学家正在研究的一个重要课题。</p>\n<h3 id=\"帕金森定律\"><a href=\"#帕金森定律\" class=\"headerlink\" title=\"帕金森定律\"></a>帕金森定律</h3><p>英国著名历史学家诺斯古德·帕金森通过长期调查研究，写出一本名叫《帕金森定律》的书。他在书中阐述了机构人员膨胀的原因及后果：一个不称职的官员，可能有三条出路，第一是申请退职，把位子让给能干的人；第二是让一位能干的人来协助自己工作；第三是任用两个水平比自己更低的人当助手。这第一条路是万万走不得的，因为那样会丧失许多权利；第二条路也不能走，因为那个能干的人会成为自己的对手；看来只有第三条路最适宜。于是，两个平庸的助手分担了他的工作，他自己则高高在上发号施令，他们不会对自己的权利构成威胁。两个助手既然无能，他们就上行下效，再为自己找两个更加无能的助手。如此类推，就形成了一个机构臃肿，人浮于事，相互扯皮，效率低下的领导体系。</p>\n<h3 id=\"晕轮效应\"><a href=\"#晕轮效应\" class=\"headerlink\" title=\"晕轮效应\"></a>晕轮效应</h3><p>俄国著名的大文豪普希金曾因晕轮效应的作用吃了大苦头。他狂热地爱上了被称为“莫斯科第一美人”的娜坦丽，并且和她结了婚。娜坦丽容貌惊人，但与普希金志不同道不合。当普希金每次把写好的诗读给她听时。她总是捂着耳朵说：“不要听！不要听！”相反，她总是要普希金陪她游乐，出席一些豪华的晚会、舞会，普希金为此丢下创作，弄得债台高筑，最后还为她决斗而死，使一颗文学巨星过早地陨落。在普希金看来，一个漂亮的女人也必然有非凡的智慧和高贵的品格，然而事实并非如此，这种现象被称为晕轮效应。<br>所谓晕轮效应，就是在人际交往中，人身上表现出的某一方面的特征，掩盖了其他特征，从而造成人际认知的障碍。在日常生活中，“晕轮效应”往往在悄悄地影响着我们对别人的认知和评价。比如有的老年人对青年人的个别缺点，或衣着打扮、生活习惯看不顺眼，就认为他们一定没出息；有的青年人由于倾慕朋友的某一可爱之处，就会把他看得处处可爱，真所谓“一俊遮百丑”。晕轮效应是一种以偏概全的主观心理臆测，其错误在于：第一，它容易抓住事物的个别特征，习惯以个别推及一般，就像盲人摸象一样，以点代面；第二，它把并无内在联系的一些个性或外貌特征联系在一起，断言有这种特征必然会有另一种特征；第三，它说好就全都肯定，说坏就全部否定，这是一种受主观偏见支配的绝对化倾向。总之，晕轮效应是人际交往中对人的心理影响很大的认知障碍，我们在交往中要尽量地避免和克服晕轮效应的副作用。</p>\n<h3 id=\"霍桑效应（Hawthorne-effect）\"><a href=\"#霍桑效应（Hawthorne-effect）\" class=\"headerlink\" title=\"霍桑效应（Hawthorne effect）\"></a>霍桑效应（Hawthorne effect）</h3><p>心理学上的一种实验者效应。20世纪20-30年代，美国研究人员在芝加哥西方电力公司霍桑工厂进行的工作条件、社会因素和生产效益关系实验中发现了实验者效应，称霍桑效应。<br>实验的第一阶段是从1924年11月开始的工作条件和生产效益的关系，设为实验组和控制组。结果不管增加或控制照明度，实验组产量都上升，而且照明度不变的控制组产量也增加。另外，有试验了工资报酬、工间休息时间、每日工作长度和每周工作天数等因素，也看不出这些工作条件对生产效益有何直接影响。第二阶段的试验是由美国哈佛大学教授梅奥领导的，着重研究社会因素与生产效率的关系，结果发现生产效率的提高主要是由于被实验者在精神方面发生了巨大的变化。参加试验的工人被置于专门的实验室并由研究人员领导，其社会状况发生了变化，受到各方面的关注，从而形成了参与试验的感觉，觉得自己是公司中重要的一部分，从而使工人从社会角度方面被激励，促进产量上升。<br>这个效应告诉我们，当同学或自己受到公众的关注或注视时，学习和交往的效率就会大大增加。因此，我们在日常生活中要学会与他人友好相处，明白什么样的行为才是同学和老师所接受和赞赏的，我们只有在生活和学习中不断地增加自己的良好行为，才可能受到更多人的关注和赞赏，也才可能让我们的学习不断进步，充满自信！</p>\n<h3 id=\"习得性无助实验\"><a href=\"#习得性无助实验\" class=\"headerlink\" title=\"习得性无助实验\"></a>习得性无助实验</h3><p>习得性无助效应最早有奥弗米尔和西里格曼发现，后来在动物和人类研究中被广泛探讨。简单地说，很多实验表明，经过训练，狗可以越过屏障或从事其他的行为来逃避实验者加于它的电击。但是，如果狗以前受到不可预期（不知道什么时候到来）且不可控制的电击（如电击的中断与否不依赖于狗的行为），当狗后来有机会逃离电击时，他们也变得无力逃离。而且，狗还表现出其他方面的缺陷，如感到沮丧和压抑，主动性降低等等。<br>狗之所以表现出这种状况，是由于在实验的早期学到了一种无助感。也就是说，它们认识到自己无论做什么都不能控制电击的终止。在每次实验中，电击终止都是在实验者掌控之下的，而狗会认识到自己没有能力改变这种外界的控制，从而学到了一种无助感。<br>人如果产生了习得性无助，就成为了一种深深的绝望和悲哀。因此，我们在学习和生活中应把自己的眼光在开阔一点，看到事件背后的真正的决定因素，不要使我们自己陷入绝望。</p>\n<h3 id=\"证人的记忆\"><a href=\"#证人的记忆\" class=\"headerlink\" title=\"证人的记忆\"></a>证人的记忆</h3><p>证人，在我们的认识里，通常都是提供一些客观的证据的人，就是把自己亲眼看到、亲耳听到的东西如实地讲出来的人。然而，心理学研究证明，很多证人提供的证词都不太准确，或者说是具有个人倾向性，带着个人的观点和意识。<br>证人对他们的证词的信心并不能决定他们证词的准确性，这一研究结果令人感到惊讶。心理学家珀费可特和豪林斯决定对这一结论进行更深入的研究。为了考察证人的证词是否有特别的东西，他们将证人的记忆与对一般知识的记忆进行了比较。<br>他们让被试看一个简短的录象，是关于一个女孩被绑架的案件。第二天，让被试回答一些有关录象里内容的问题，并要求他们说出对自己回答的信心程度，然后做再认记忆测验。接下来，使用同样的方法，内容是从百科全书和通俗读物中选出的一般知识问题。<br>和以前发生的一样，珀费可特和豪林斯也发现，在证人回忆的精确性上，那些对自己的回答信心十足的人实际上并不比那些没信心的人更高明，但对于一般知识来说，情况就不是这样，信心高的人回忆成绩比信心不足的人好得多。<br>人们对于自己在一般知识上的优势与弱势有自知之明。因此，倾向于修改他们对于信心量表的测验结果。一般知识是一个数据库，在个体之间是共享的，它有公认的正确答案，被试可以自己去衡量。例如，人们会知道自己在体育问题上是否比别人更好或更差一点。但是，目击的事件不受这种自知之明的影响。例如，从总体上讲，他们不大可能知道自己比别人在记忆事件中的参与者头发颜色方面更好或更差。\n　　</p>\n<h3 id=\"罗森塔尔效应\"><a href=\"#罗森塔尔效应\" class=\"headerlink\" title=\"罗森塔尔效应\"></a>罗森塔尔效应</h3><p>美国心理学家罗森塔尔等人于1968年做过一个著名实验。他们到一所小学，在一至六年级各选三个班的儿童进行煞有介事的“预测未来发展的测验”，然后实验者将认为有“优异发展可能”的学生名单通知教师。其实，这个名单并不是根据测验结果确定的，而是随机抽取的。它是以“权威性的谎言”暗示教师，从而调动了教师对名单上的学生的某种期待心理。8个月后，再次智能测验的结果发现，名单上的学生的成绩普遍提高，教师也给了他们良好的品行评语。这个实验取得了奇迹般的效果，人们把这种通过教师对学生心理的潜移默化的影响，从而使学生取得教师所期望的进步的现象，称为“罗森塔尔效应”，习惯上也称为皮格马利翁效应（皮格马利翁是古希腊神话中塞浦路斯国王，他对一尊少女塑像产生爱慕之情，他的热望最终使这尊雕像变为一个真人，两人相爱结合）。<br>教育实践也表明：如果教师喜爱某些学生，对他们会抱有较高期望，经过一段时间，学生感受到教师的关怀、爱护和鼓励；常常以积极态度对待老师、对待学习以及对待自己的行为，学生更加自尊、自信、自爱、自强，诱发出一种积极向上的激情，这些学生常常会取得老师所期望的进步。相反，那些受到老师忽视、歧视的学生，久而久之会从教师的言谈、举止、表情中感受到教师的“偏心”，也会以消极的态度对待老师、对待自己的学习，不理会或拒绝听从老师的要求；这些学生常常会一天天变坏，最后沦为社会的不良分子。尽管有些例外，但大趋势却是如此，同时这也给教师敲响了警钟。</p>\n<h3 id=\"虚假同感偏差（false-consensus-bias）\"><a href=\"#虚假同感偏差（false-consensus-bias）\" class=\"headerlink\" title=\"虚假同感偏差（false consensus bias）\"></a>虚假同感偏差（false consensus bias）</h3><p>我们通常都会相信，我们的爱好与大多数人是一样的。如果你喜欢玩电脑游戏，那么就有可能高估喜欢电脑游戏的人数。你也通常会高估给自己喜欢的同学投票的人数，高估自己在群体中的威信与领导能力等等。你的这种高估与你的行为及态度有相同特点的人数的倾向性就叫做“虚假同感偏差”。有些因素会影响你的这种虚假同感偏差强度：<br>（1）当外部的归因强于内部归因时；<br>（2）当前的行为或事件对某人非常重要时；<br>（3）当你对自己的观点非常确定或坚信时；<br>（4）当你的地位或正常生活和学习受到某种威胁时；<br>（5）当涉及到某种积极的品质或个性时；<br>（6）当你将其他人看成与自己是相似时。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>蝴蝶效应、青蛙现象、鳄鱼法则、鲇鱼效应、羊群效应、刺猬法则、手表定律、破窗理论、二八定律、木桶理论、马太效应，这些你都明白吗？</p>\n<h3 id=\"蝴蝶效应\"><a href=\"#蝴蝶效应\" class=\"headerlink\" title=\"蝴蝶效应\"></a>蝴蝶效应</h3><p>上个世纪70年代，美国一个名叫洛伦兹的气象学家在解释空气系统理论时说，亚马逊雨林一只蝴蝶翅膀偶尔振动，也许两周后就会引起美国得克萨斯州的一场龙卷风。<br>蝴蝶效应是说，初始条件十分微小的变化经过不断放大，对其未来状态会造成极其巨大的差别。有些小事可以糊涂，有些小事如经系统放大，则对一个组织、一个国家来说是很重要的，就不能糊涂。</p>\n<h3 id=\"青蛙现象\"><a href=\"#青蛙现象\" class=\"headerlink\" title=\"青蛙现象\"></a>青蛙现象</h3><p>把一只青蛙直接放进热水锅里，由于它对不良环境的反应十分敏感，就会迅速跳出锅外。如果把一个青蛙放进冷水锅里，慢慢地加温，青蛙并不会立即跳出锅外，水温逐渐提高的最终结局是青蛙被煮死了，因为等水温高到青蛙无法忍受时，它已经来不及、或者说是没有能力跳出锅外了。　　<br>青蛙现象告诉我们，一些突变事件，往往容易引起人们的警觉，而易致人于死地的却是在自我感觉良好的情况下，对实际情况的逐渐恶化，没有清醒的察觉。</p>\n<h3 id=\"鳄鱼法则\"><a href=\"#鳄鱼法则\" class=\"headerlink\" title=\"鳄鱼法则\"></a>鳄鱼法则</h3><p>其原意是假定一只鳄鱼咬住你的脚，如果你用手去试图挣脱你的脚，鳄鱼便会同时咬住你的脚与手。你愈挣扎，就被咬住得越多。所以，万一鳄鱼咬住你的脚，你唯一的办法就是牺牲一只脚。<br>譬如在股市中，鳄鱼法则就是：当你发现自己的交易背离了市场的方向，必须立即止损，不得有任何延误，不得存有任何侥幸。</p>\n<h3 id=\"鲇鱼效应\"><a href=\"#鲇鱼效应\" class=\"headerlink\" title=\"鲇鱼效应\"></a>鲇鱼效应</h3><p>以前，沙丁鱼在运输过程中成活率很低。后有人发现，若在沙丁鱼中放一条鲇鱼，情况却有所改观，成活率会大大提高。这是何故呢?<br>原来鲇鱼在到了一个陌生的环境后，就会“性情急躁”，四处乱游，这对于大量好静的沙丁鱼来说，无疑起到了搅拌作用;而沙丁鱼发现多了这样一个“异已分子”，自然也很紧张，加速游动。这样沙丁鱼缺氧的问题就迎刃而解了，沙丁鱼也就不会死了。</p>\n<h3 id=\"羊群效应\"><a href=\"#羊群效应\" class=\"headerlink\" title=\"羊群效应\"></a>羊群效应</h3><p>头羊往哪里走，后面的羊就跟着往哪里走。<br>羊群效应最早是股票投资中的一个术语，主要是指投资者在交易过程中存在学习与模仿现象，“有样学样”，盲目效仿别人，从而导致他们在某段时期内买卖相同的股票。</p>\n<h3 id=\"刺猬法则\"><a href=\"#刺猬法则\" class=\"headerlink\" title=\"刺猬法则\"></a>刺猬法则</h3><p>两只困倦的刺猬，由于寒冷而拥在一起。可因为各自身上都长着刺，于是它们离开了一段距离，但又冷得受不了，于是凑到一起。几经折腾，两只刺猬终于找到一个合适的距离：既能互相获得对方的温暖而又不至于被扎。　<br>刺猬法则主要是指人际交往中的“心理距离效应”。</p>\n<h3 id=\"手表定律\"><a href=\"#手表定律\" class=\"headerlink\" title=\"手表定律\"></a>手表定律</h3><p>手表定律是指一个人有一只表时，可以知道现在是几点钟，而当他同时拥有两只时却无法确定。两只表并不能告诉一个人更准确的时间，反而会使看表的人失去对准确时间的信心。<br>手表定律在企业管理方面给我们一种非常直观的启发，就是对同一个人或同一个组织不能同时采用两种不同的方法，不能同时设置两个不同的目标，甚至每一个人不能由两个人来同时指挥，否则将使这个企业或者个人无所适从。</p>\n<h3 id=\"破窗理论\"><a href=\"#破窗理论\" class=\"headerlink\" title=\"破窗理论\"></a>破窗理论</h3><p>一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙地被人打破;一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西;一个很干净的地方，人们不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑地抛，丝毫不觉羞愧。</p>\n<h3 id=\"二八定律-巴莱多定律\"><a href=\"#二八定律-巴莱多定律\" class=\"headerlink\" title=\"二八定律(巴莱多定律)\"></a>二八定律(巴莱多定律)</h3><p>19世纪末20世纪初意大利的经济学家巴莱多认为，在任何一组东西中，最重要的只占其中一小部分，约20%，其余80%尽管是多数，却是次要的。社会约80%的财富集中在20%的人手里，而80%的人只拥有20%的社会财富。这种统计的不平衡性在社会、经济及生活中无处不在，这就是二八法则。<br>二八法则告诉我们，不要平均地分析、处理和看待问题，企业经营和管理中要抓住关键的少数;要找出那些能给企业带来80%利润、总量却仅占20%的关键客户，加强服务，达到事半功倍的效果;企业领导人要对工作认真分类分析，要把主要精力花在解决主要问题、抓主要项目上。</p>\n<h3 id=\"木桶理论\"><a href=\"#木桶理论\" class=\"headerlink\" title=\"木桶理论\"></a>木桶理论</h3><p>组成木桶的木板如果长短不齐，那么木桶的盛水量不是取决于最长的那一块木板，而是取决于最短的那一块木板。</p>\n<h3 id=\"马太效应\"><a href=\"#马太效应\" class=\"headerlink\" title=\"马太效应\"></a>马太效应</h3><p>《圣经·马太福音》中有一句名言：“凡有的，还要加给他，叫他有余;没有的，连他所有的，也要夺过来。”<br>社会学家从中引申出了“马太效应”这一概念，用以描述社会生活领域中普遍存在的两极分化现象。</p>\n<h3 id=\"鸟笼逻辑\"><a href=\"#鸟笼逻辑\" class=\"headerlink\" title=\"鸟笼逻辑\"></a>鸟笼逻辑</h3><p>挂一个漂亮的鸟笼在房间里最显眼的地方，过不了几天，主人一定会做出下面两个选择之一：把鸟笼扔掉，或者买一只鸟回来放在鸟笼里。这就是鸟笼逻辑。过程很简单，设想你是这房间的主人，只要有人走进房间，看到鸟笼，就会忍不住问你：“鸟呢？是不是死了？”当你回答：“我从来都没有养过鸟。”人们会问：“那么，你要一个鸟笼干什么？”最后你不得不在两个选择中二选一，因为这比无休止的解释要容易得多。鸟笼逻辑的原因很简单：人们绝大部分的时候是采取惯性思维。所以可见在生活和工作中培养逻辑思维是多么重要。</p>\n<h3 id=\"破窗效应\"><a href=\"#破窗效应\" class=\"headerlink\" title=\"破窗效应\"></a>破窗效应</h3><p>心理学的研究上有个现象叫做“破窗效应”，就是说，一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙的被人打破；一面墙，如果出现一些涂鸦没有清洗掉，很快的，墙上就布满了乱七八糟，不堪入目的东西。一个很干净的地方，人会不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑的拋，丝毫不觉羞愧。这真是很奇怪的现象。<br>心理学家研究的就是这个“引爆点”，地上究竟要有多脏，人们才会觉得反正这么脏，再脏一点无所谓，情况究竟要坏到什么程度，人们才会自暴自弃，让它烂到底。<br>任何坏事，如果在开始时没有阻拦掉，形成风气，改也改不掉，就好象河堤，一个小缺口没有及时修补，可以崩坝，造成千百万倍的损失。<br>犯罪其实就是失序的结果，纽约市在80年代的时候，真是无处不抢，无日不杀，大白天走在马路上也会害怕。地铁更不用说了，车厢脏乱，到处涂满了秽句，坐在地铁里，人人自危。我虽然没有被抢过，但是有位教授被人在光天化日之下，敲了一记闷棍，眼睛失明，从此结束他的研究生涯，使我多少年来谈虎变色，不敢只身去纽约开会。最近纽约的市容和市誉提升了不少，令我颇为吃惊，一个已经向下沉沦的城市，竟能死而复生，向上提升。<br>因此，当我出去开会，碰到一位犯罪学家时，立刻向他讨教，原来纽约市用的就是过去书本上讲的破窗效应的理论，先改善犯罪的环境，使人们不易犯罪，再慢慢缉凶捕盗，回归秩序。<br>当时这个做法虽然被人骂为缓不济急，“船都要沉了还在洗甲板”，但是纽约市还是从维护地铁车厢干净着手，并将不买车票白搭车的人用手铐铐住排成一列站在月台上，公开向民众宣示政府整顿的决心，结果发现非常有效。<br>警察发现人们果然比较不会在干净的场合犯罪，又发现抓逃票很有收获，因为每七名逃票的人中就有一名是通缉犯，二十名中就有一名携带武器，因此警察愿意很认真地去抓逃票，这使得歹徒不敢逃票，出门不敢带武器，以免得不偿失、因小失大。这样纽约市就从最小、最容易的地方着手，打破了犯罪环结(chain)，使这个恶性循环无法继续下去</p>\n<h3 id=\"责任分散效应\"><a href=\"#责任分散效应\" class=\"headerlink\" title=\"责任分散效应\"></a>责任分散效应</h3><p>1964年3月13日夜3时20分，在美国纽约郊外某公寓前，一位叫朱诺比白的年轻女子在结束酒巴间工作回家的路上遇刺。当她绝望地喊叫：“有人要杀人啦!救命!救命!”听到喊叫声，附近住户亮起了灯，打开了窗户，凶手吓跑了。当一切恢复平静后，凶手又返回作案。当她又叫喊时，附近的住户又打开了电灯，凶手又逃跑了。当她认为已经无事，回到自己家上楼时，凶手又一次出现在她面前，将她杀死在楼梯上。在这个过程中，尽管她大声呼救，她的邻居中至少有38位到窗前观看，但无一人来救她，甚至无一人打电话报警。这件事引起纽约社会的轰动，也引起了社会心理学工作者的重视和思考。人们把这种众多的旁观者见死不救的现象称为责任分散效应。<br>对于责任分散效应形成的原因，心理学家进行了大量的实验和调查，结果发现：这种现象不能仅仅说是众人的冷酷无情，或道德日益沦丧的表现。因为在不同的场合，人们的援助行为确实是不同的。当一个人遇到紧急情境时，如果只有他一个人能提供帮助，他会清醒地意识到自己的责任，对受难者给予帮助。如果他见死不救会产生罪恶感、内疚感，这需要付出很高的心理代价。而如果有许多人在场的话，帮助求助者的责任就由大家来分担，造成责任分散，每个人分担的责任很少，旁观者甚至可能连他自己的那一份责任也意识不到，从而产生一种“我不去救，由别人去救”的心理，造成“集体冷漠”的局面。如何打破这种局面，这是心理学家正在研究的一个重要课题。</p>\n<h3 id=\"帕金森定律\"><a href=\"#帕金森定律\" class=\"headerlink\" title=\"帕金森定律\"></a>帕金森定律</h3><p>英国著名历史学家诺斯古德·帕金森通过长期调查研究，写出一本名叫《帕金森定律》的书。他在书中阐述了机构人员膨胀的原因及后果：一个不称职的官员，可能有三条出路，第一是申请退职，把位子让给能干的人；第二是让一位能干的人来协助自己工作；第三是任用两个水平比自己更低的人当助手。这第一条路是万万走不得的，因为那样会丧失许多权利；第二条路也不能走，因为那个能干的人会成为自己的对手；看来只有第三条路最适宜。于是，两个平庸的助手分担了他的工作，他自己则高高在上发号施令，他们不会对自己的权利构成威胁。两个助手既然无能，他们就上行下效，再为自己找两个更加无能的助手。如此类推，就形成了一个机构臃肿，人浮于事，相互扯皮，效率低下的领导体系。</p>\n<h3 id=\"晕轮效应\"><a href=\"#晕轮效应\" class=\"headerlink\" title=\"晕轮效应\"></a>晕轮效应</h3><p>俄国著名的大文豪普希金曾因晕轮效应的作用吃了大苦头。他狂热地爱上了被称为“莫斯科第一美人”的娜坦丽，并且和她结了婚。娜坦丽容貌惊人，但与普希金志不同道不合。当普希金每次把写好的诗读给她听时。她总是捂着耳朵说：“不要听！不要听！”相反，她总是要普希金陪她游乐，出席一些豪华的晚会、舞会，普希金为此丢下创作，弄得债台高筑，最后还为她决斗而死，使一颗文学巨星过早地陨落。在普希金看来，一个漂亮的女人也必然有非凡的智慧和高贵的品格，然而事实并非如此，这种现象被称为晕轮效应。<br>所谓晕轮效应，就是在人际交往中，人身上表现出的某一方面的特征，掩盖了其他特征，从而造成人际认知的障碍。在日常生活中，“晕轮效应”往往在悄悄地影响着我们对别人的认知和评价。比如有的老年人对青年人的个别缺点，或衣着打扮、生活习惯看不顺眼，就认为他们一定没出息；有的青年人由于倾慕朋友的某一可爱之处，就会把他看得处处可爱，真所谓“一俊遮百丑”。晕轮效应是一种以偏概全的主观心理臆测，其错误在于：第一，它容易抓住事物的个别特征，习惯以个别推及一般，就像盲人摸象一样，以点代面；第二，它把并无内在联系的一些个性或外貌特征联系在一起，断言有这种特征必然会有另一种特征；第三，它说好就全都肯定，说坏就全部否定，这是一种受主观偏见支配的绝对化倾向。总之，晕轮效应是人际交往中对人的心理影响很大的认知障碍，我们在交往中要尽量地避免和克服晕轮效应的副作用。</p>\n<h3 id=\"霍桑效应（Hawthorne-effect）\"><a href=\"#霍桑效应（Hawthorne-effect）\" class=\"headerlink\" title=\"霍桑效应（Hawthorne effect）\"></a>霍桑效应（Hawthorne effect）</h3><p>心理学上的一种实验者效应。20世纪20-30年代，美国研究人员在芝加哥西方电力公司霍桑工厂进行的工作条件、社会因素和生产效益关系实验中发现了实验者效应，称霍桑效应。<br>实验的第一阶段是从1924年11月开始的工作条件和生产效益的关系，设为实验组和控制组。结果不管增加或控制照明度，实验组产量都上升，而且照明度不变的控制组产量也增加。另外，有试验了工资报酬、工间休息时间、每日工作长度和每周工作天数等因素，也看不出这些工作条件对生产效益有何直接影响。第二阶段的试验是由美国哈佛大学教授梅奥领导的，着重研究社会因素与生产效率的关系，结果发现生产效率的提高主要是由于被实验者在精神方面发生了巨大的变化。参加试验的工人被置于专门的实验室并由研究人员领导，其社会状况发生了变化，受到各方面的关注，从而形成了参与试验的感觉，觉得自己是公司中重要的一部分，从而使工人从社会角度方面被激励，促进产量上升。<br>这个效应告诉我们，当同学或自己受到公众的关注或注视时，学习和交往的效率就会大大增加。因此，我们在日常生活中要学会与他人友好相处，明白什么样的行为才是同学和老师所接受和赞赏的，我们只有在生活和学习中不断地增加自己的良好行为，才可能受到更多人的关注和赞赏，也才可能让我们的学习不断进步，充满自信！</p>\n<h3 id=\"习得性无助实验\"><a href=\"#习得性无助实验\" class=\"headerlink\" title=\"习得性无助实验\"></a>习得性无助实验</h3><p>习得性无助效应最早有奥弗米尔和西里格曼发现，后来在动物和人类研究中被广泛探讨。简单地说，很多实验表明，经过训练，狗可以越过屏障或从事其他的行为来逃避实验者加于它的电击。但是，如果狗以前受到不可预期（不知道什么时候到来）且不可控制的电击（如电击的中断与否不依赖于狗的行为），当狗后来有机会逃离电击时，他们也变得无力逃离。而且，狗还表现出其他方面的缺陷，如感到沮丧和压抑，主动性降低等等。<br>狗之所以表现出这种状况，是由于在实验的早期学到了一种无助感。也就是说，它们认识到自己无论做什么都不能控制电击的终止。在每次实验中，电击终止都是在实验者掌控之下的，而狗会认识到自己没有能力改变这种外界的控制，从而学到了一种无助感。<br>人如果产生了习得性无助，就成为了一种深深的绝望和悲哀。因此，我们在学习和生活中应把自己的眼光在开阔一点，看到事件背后的真正的决定因素，不要使我们自己陷入绝望。</p>\n<h3 id=\"证人的记忆\"><a href=\"#证人的记忆\" class=\"headerlink\" title=\"证人的记忆\"></a>证人的记忆</h3><p>证人，在我们的认识里，通常都是提供一些客观的证据的人，就是把自己亲眼看到、亲耳听到的东西如实地讲出来的人。然而，心理学研究证明，很多证人提供的证词都不太准确，或者说是具有个人倾向性，带着个人的观点和意识。<br>证人对他们的证词的信心并不能决定他们证词的准确性，这一研究结果令人感到惊讶。心理学家珀费可特和豪林斯决定对这一结论进行更深入的研究。为了考察证人的证词是否有特别的东西，他们将证人的记忆与对一般知识的记忆进行了比较。<br>他们让被试看一个简短的录象，是关于一个女孩被绑架的案件。第二天，让被试回答一些有关录象里内容的问题，并要求他们说出对自己回答的信心程度，然后做再认记忆测验。接下来，使用同样的方法，内容是从百科全书和通俗读物中选出的一般知识问题。<br>和以前发生的一样，珀费可特和豪林斯也发现，在证人回忆的精确性上，那些对自己的回答信心十足的人实际上并不比那些没信心的人更高明，但对于一般知识来说，情况就不是这样，信心高的人回忆成绩比信心不足的人好得多。<br>人们对于自己在一般知识上的优势与弱势有自知之明。因此，倾向于修改他们对于信心量表的测验结果。一般知识是一个数据库，在个体之间是共享的，它有公认的正确答案，被试可以自己去衡量。例如，人们会知道自己在体育问题上是否比别人更好或更差一点。但是，目击的事件不受这种自知之明的影响。例如，从总体上讲，他们不大可能知道自己比别人在记忆事件中的参与者头发颜色方面更好或更差。\n　　</p>\n<h3 id=\"罗森塔尔效应\"><a href=\"#罗森塔尔效应\" class=\"headerlink\" title=\"罗森塔尔效应\"></a>罗森塔尔效应</h3><p>美国心理学家罗森塔尔等人于1968年做过一个著名实验。他们到一所小学，在一至六年级各选三个班的儿童进行煞有介事的“预测未来发展的测验”，然后实验者将认为有“优异发展可能”的学生名单通知教师。其实，这个名单并不是根据测验结果确定的，而是随机抽取的。它是以“权威性的谎言”暗示教师，从而调动了教师对名单上的学生的某种期待心理。8个月后，再次智能测验的结果发现，名单上的学生的成绩普遍提高，教师也给了他们良好的品行评语。这个实验取得了奇迹般的效果，人们把这种通过教师对学生心理的潜移默化的影响，从而使学生取得教师所期望的进步的现象，称为“罗森塔尔效应”，习惯上也称为皮格马利翁效应（皮格马利翁是古希腊神话中塞浦路斯国王，他对一尊少女塑像产生爱慕之情，他的热望最终使这尊雕像变为一个真人，两人相爱结合）。<br>教育实践也表明：如果教师喜爱某些学生，对他们会抱有较高期望，经过一段时间，学生感受到教师的关怀、爱护和鼓励；常常以积极态度对待老师、对待学习以及对待自己的行为，学生更加自尊、自信、自爱、自强，诱发出一种积极向上的激情，这些学生常常会取得老师所期望的进步。相反，那些受到老师忽视、歧视的学生，久而久之会从教师的言谈、举止、表情中感受到教师的“偏心”，也会以消极的态度对待老师、对待自己的学习，不理会或拒绝听从老师的要求；这些学生常常会一天天变坏，最后沦为社会的不良分子。尽管有些例外，但大趋势却是如此，同时这也给教师敲响了警钟。</p>\n<h3 id=\"虚假同感偏差（false-consensus-bias）\"><a href=\"#虚假同感偏差（false-consensus-bias）\" class=\"headerlink\" title=\"虚假同感偏差（false consensus bias）\"></a>虚假同感偏差（false consensus bias）</h3><p>我们通常都会相信，我们的爱好与大多数人是一样的。如果你喜欢玩电脑游戏，那么就有可能高估喜欢电脑游戏的人数。你也通常会高估给自己喜欢的同学投票的人数，高估自己在群体中的威信与领导能力等等。你的这种高估与你的行为及态度有相同特点的人数的倾向性就叫做“虚假同感偏差”。有些因素会影响你的这种虚假同感偏差强度：<br>（1）当外部的归因强于内部归因时；<br>（2）当前的行为或事件对某人非常重要时；<br>（3）当你对自己的观点非常确定或坚信时；<br>（4）当你的地位或正常生活和学习受到某种威胁时；<br>（5）当涉及到某种积极的品质或个性时；<br>（6）当你将其他人看成与自己是相似时。</p>\n","sticky":0},{"title":"这五年的那些事","date":"2017-01-24T05:42:25.000Z","_content":"最近一直想写，都不知道怎么下笔，闲下来的时间总是在懒惰中挥霍，或是沉浸在幸福快乐中流散。五年真的是白驹过隙，但发生的事情比上一个五年多太多。\n\n上一个五年，做的影响一辈子的事情，确是高考与专业选报，现在看来，也不后悔，对路，也符合我的性格，但是也封闭了我的性格，不知从何时开始，内心开始对这个很小的世界产生了依赖，不愿意改变，很怕变化之后会怎样，畏首畏尾的。毕业找工作时也碰到了坎，四月份才找到，对于我这抓住了毕业季尾巴的人来说，实在太幸运了。\n\n大学四年，自律意识太差了，现在回想起来，大学是被荒废了的，逃课挂科家常便饭，只醉心于自己喜欢的事情，想到了那年收到学校警示通知（挂科太多），与家人过年都是在阴云笼罩的气氛中度过，让父母操碎了心，现在这些事情想想，真是太不应该，学生的工作，就是学习好自己的课程，这是本份，任何借口都是狡辩。如果没有比尔盖茨的本事，就老老实实的读书，不读书这社会上你就是傻子。我就是个傻子，现在除了掌握皮毛不入精髓的点点计算机知识，我就剩下一具肉身。真是往事不堪回首。这是工作前的五年，就这样写吧，反正也不能反悔了，自己买单吧！\n\n现在开始最近这五年。前方无高能，流水帐记叙。\n \n毕业之后来到了一家大公司，以一名很多人不懂以为是修电脑的，一线城市称为软件工程师，自嘲为码农程序猿做着一份刚好能自娱自乐填饱肚子的工作--程序员，公司制度完善，有师傅带，大家对我很不错，很和谐，无奈期间换了部门，后面详说吧，继而又换了两家公司，现在还是码农，哈哈，做一辈子码农也不错，至少可以吹着空调玩电脑。\n\n总在想怎么去写，现在想想，就随便写吧，想到啥写啥，顺便吐吐槽。如果下文中您在看的时候感觉到是在写你，请不要觉得是你，因为我会加花。\n\n2010年7月/2014年9月，这个时期跨度很大，记忆也零碎了，那就从大事件聊吧。\n\n依然记得那天挎着个硕大的袋子，拖着大学时候的被褥，被保安大哥拦住：喂，农民工去对面工地（预警，此处加花，下文再加花处，恕不提醒），待俺拿出有红戳戳的入职通知，保安大哥才引我进入公司餐厅的休息，好吧，这只是开始好伐，我当时去到公司的时间略早于上班时间，好吧，每个进公司的同事进门都跟看猴子一样看我，我就这么在第一家公司曝光了。这一天是步入社会的日子，恐怕要像烙印一样记一辈子吧，2010年7月9日！\n\n初入职场，楞头青，突然来到高大上的软件公司，还是挺兴奋的，从接到offer到报到，足足高兴了三个月，然而蜜月期啊侬晓得伐？高大上的BOS和EAS（不懂没关系，我也不懂，以下文章关于技术的词语不必懂，看新鲜即可）足足让我折腾了两个月才入门，这感觉太痛苦了，简直睡觉脑子里都是那个蓝色风格的EAS系统，这里感谢我那耐心的如禅师般的师傅，同一个问题问三遍的我都烦了，你还不烦，你这样耐心的性格是谁教的，已如神佛，我已献出了我的膝盖，师傅，感谢你！初入江湖有你，吾之大幸么么哒！\n\n好了，会写代码了，干活咯！来来来，小涛来，老戴喊我，分你个基础数据先练练手，三天搞得定吧？好嗒，领导！然后就屁颠屁颠的去回到座位了，呃，是个什么基础数据来着，哎呀，需求文档怎么找不到了，哎呀呀，这环境怎么启动不了了，哎呀呀呀，一天过去了，今天的贡献值zero，然已累觉不爱，加班吧，先把实体建了界面画了吧，至少得晚上能有个理由睡觉，不然失眠了怎么办！吥呤吥呤搞定打卡下班走人，哟十点多了，哟还有三十块钱餐补，想想还有些小激动呢！\n\n回到驻地，或称作为住的地方，远不能用家这个字。洗澡先，这里补充下，夏天在这个南方海岸线上以蚯蚓状蜿蜒的城市，来桑拿啊，免费的，不洗澡你就变成蚯蚓了，粘死了！我喜欢这里的冬天，不热不出汗不洗澡，积攒泥灰修佛。哈哈哈，啊~，跑题了，赶紧睡觉都快十一点了，呃，要不玩会QQ，不玩不要紧，一看时间吓一跳啊，十二点了，睡吧睡吧。接下来的八个小时无意识之后，洗洗还是红色的眼睛，莫名其妙睡着了，然后莫名其妙的被闹钟吵醒，然后走路去上班，虽然只有一两站偶尔也打个的挤个地铁，然后如此循环。后来呢，弄了个二手的自行车，丁丁当当成了个伪骑行族，真实是个伪的，因为自行车的变速简直是个渣渣，还有那个铃铛，真是用的时候才知道是个摆设，这是后话，自行车有传奇，各位看官接下文分解。\n\n这样也还好，刚开始的时候都是很充实的过每一天，至少每天都能学到点东西，但是大学时候的种种劣习也逐渐暴露出来了，作息以及饮食的不规律，熬夜，不记笔记或者说是不记便签[这时候才知道好记性不如烂笔头是什么意思]，大学我承认时间真是很多，一些学科老师教的东西确实对工作帮助很少，但是现在想想，其实这些培养的并不是你课本上学到了什么，实际工作要用到的，是你怎么去学的方法，大学应该培养一种良好的生活以及学习习惯，这个对工作帮助真得很大。觉悟吧，骚年！！！\n\n在这家公司吧，其实算折腾了一个来回，这里用A部门和B部门来代替，入职的是A部门，也是在这里变的有点油条气，成了第一家公司的油子，因为是个传统行业的ERP研发，所以刚开始对这些高大上的ERP名词都一知半解的，什么BOM啊，移动加权啊，货位啊，都是在那帮需求的带领下，慢慢了解，对程序员来说，这些名词其实对编程影响不大，有人已经帮你写好了计算公式，你只要按公式垒代码就行，成体系的公司就是这样，所有人的分工是很明确的，你就写好你的代码就行，这就是问题，程序员被局限了，视野被封闭在了逻辑代码上，对于业务逻辑以及为什么这样的业务逻辑一知半解，对产品提不出建设性建议，老都是按需求文档，不好玩，太呆板。其实这时候我也还是这样子做的，一切听需求按文档，这样晃晃忽忽一年，有个机会可以去客户现场出差咯，对于刚参加工作的小年轻，出差显得高大上，跟部门领导说了下，领导,我想出差，哈哈。领导笑呵呵的看着我，哟，年轻人，不错嘛，有魄力，去吧，就这样，第一次被一个测试姐姐带着坐灰机，飞呀飞，从深圳飞到了上海，哎呀，上海哟，一线大城市哦，不过我们去的是无锡，一个没有锡的地方。无锡确实是个好地方，生活环境好，工作压力小，这个在我去的那年【2011-2012】真实的感受，早上9点半上班，晚上5点下班，人们生活在太湖边，没事就去划划船啦，吃吃湖鲜啦。哟，这段好乱，整理下思绪，就像跑飞了的代码，连系统都找不到它。那就另起一段。\n\n这段讲无锡出差的那段经历，因为有先行部队先到了，我们属于第三批到的，所以刚去的那天，我跟那个测试的美女姐姐一起，拉着大包小箱飞机转高铁，再转坐出租，来到这个接下来要待多半年的地方-无锡马山灵山，大佛保佑，我们这路行程很顺利，到了目的地的时候，已经跟我现在写这段文字一样的时刻了，夕阳已经泛出了红，夜幕也静悄悄的在这块佛光护佑的圣地拉开了帷幕。鸟儿偶尔悄悄的叫两句，不过已没有中午的那么叽叽喳喳，村子里的狗，听到人声的时候也懒洋洋的吠两声，那时已入冬，在太湖边上这座小镇，还是很冷的，在景区门口等了几分钟，我们那熟悉的小伙伴出现在了我们面前，这才感觉到，哦，原来这里也有我们认识的人，刚产生的点点落寞就散去了，经过一片停车场，我们到了我们接下来这半年要战斗的地方，一个十几平方两排办公桌的地方，第一拨和第二拨人都在，见面时候的欢呼，调侃，哈哈，总之其乐融融赶走了很多工作带来的压抑，领导这时候发话，走，吃饭，哈哈，这个以后就是晚上下班的号令了。接风洗尘，自然离不开酒，这里的酒，是黄酒，我知道的品牌也是那天喝的叫惠泉，好不好喝不知道，我不是会喝酒的人，但是温热的酒冒着热气，加上大家的欢笑，足以驱走异乡客独有的无归属感。\n\n工作上的事情吧，跟在公司是一样的，只是去客户现场，表明我们是重视客户的，我们这拨人就是专门来做这个项目的，这样客户也很重视我们，那边的人对我们很不错，跟他们一样吃的他们的食堂，说实话，这食堂绝对比下馆子要好吃一百倍，而且很便宜[客户给我们充了张卡，所以我们属于白吃]，至少我现在想起来，还是觉得是美味。无锡人喜欢吃甜，但是也不会腻，哪种红皮的红烧肉，我一次能吃好几块，酱排骨，我也能吃好多，哈哈，现在才分清了吃货和饭桶的区别，我属于饭桶。\n\n这两天有点忙，耽搁了写下去，继续吧，今天心情不好，从上面的思路上也接不下来了，还是以时间为主线想到那里写那里吧。\n\n（此处距离上面的文字已经一年多了）不好意思，真是断了，断了一年才接着继续写，这一年发生了太多事，后面细聊。这篇文章的标题原本是5 years的，按现在的时间也要变成6 years了。 无锡的故事还没讲完，现在继续~\n额，不太好接上，若说到饭桶了，那还是先讲讲吃吧。我确实是个吃货，刚开始工作的前几年，我还不怎么做饭，可到了后来，就想着做点了，也是因为交了女朋友的缘故吧，前几年，自己做的简单，本身我也不挑食，挂面+韭苔炒鸡蛋+老干妈+生蒜。哈哈，吃生蒜估计是北方面食动物的专属吧，南方的小伙伴看哭了。老干妈确实是个好东西，百搭，可以直接用勺子挖着吃。想起来大学的时候有个贵州的同学，好像是他妈妈是医生还是怎么回事来着，给老干妈陶华碧看过病，现在想想，好厉害哦，我也可以跟别人吹，我同学的妈妈给老干妈看过病[笑cry]。额，又跑飞了，刚到深圳的时候，买了个不锈钢的碗，其实可以算作盆，因为确实挺大的，一般我是先炒韭菜鸡蛋，炒出来就放在这个盆里，那时候的韭菜鸡蛋不知道为啥老炒的干巴巴的，后来过了好几年才发现，油放少了…… 然后不洗锅，直接接凉水，煮开后放挂面，不知何时记住了老家时煮面的诀窍：水开三次面就好了，就是挂面在水里煮的时候，水再次煮开了，加半碗凉水进去，然后再煮开，如此煮开三次面就好了。反正也不知道是不是真的熟了，用笊篱捞出来过一次凉水，就捞到盆里盖在韭菜炒鸡蛋上，然后放盐倒醋，剥蒜取老干妈。哦，这里由于思绪混乱，忘记告知生活环境了，这是我刚到深圳的第一家出租屋，在世界之窗对面的城中村-白石洲，合租的是中兴公司眯眯眼的一个小伙伴，名字已经模糊了。住在4楼还是5楼来着也模糊了。平时我们交流的比较少，他跟同学合住在主卧，我自己在另一间。如此间尺平方，生活半年。\n\n思绪回到无锡。太湖的边上，秋天去的时候有点凉，冬天我感觉是北方的那种冷，不像深圳的那种湿冷，秋冬的无锡，雾比较多。去无锡之前，我花了1500大洋在华强北买了台富士的相机，一到周末我就挎着相机，在马山镇[我们的驻地]的周遭转，看到好玩的新鲜的就拍下来。在酒店的后面，有条河，名字不知道，那是我常去的地方，有鱼，我没有渔具也不会钓鱼，就站在小桥上，远远的看当地的大爷大叔在那边钓，清晨时，河上起雾，我站在桥上，也许也是个不错的画面，也许也有卞之琳<<断章>>里所描绘的那样：你在桥上看风景，看风景人在楼上看你，明月装饰了你的窗子，你装饰了别人的梦。可是那时真有别人的梦吗？沿着河走，可以走很远，我也没有去探索过河的源头在哪里，只知道，对于一个外乡人来说，这样的风景，多了便就成了乡愁。\n\n路上的行人都是本地人，无锡讲吴语[百度的，我也不清楚马山的是不是吴语],我虽不不会讲他们的话，但是愿意听他们的方言，我是个对各地方言很感兴趣的人，虽然不会说，但听得多了，也能听懂意思了。江苏分苏北苏南，无锡是苏南，鱼米之乡。太湖有三白，白鱼、白虾、银鱼，好像吃的最多的就是白鱼银鱼炒蛋吧，银鱼汤之类的吧，也许是白虾比较贵，只吃过一次，很经典的一次。[以下有些高能，慎入]不记得是无锡分公司还是甲方请客了，叫醉虾。是用当地的黄酒，然后把洗干净的白虾活活的扔进酒里。是不是感觉有些残忍呢，不过真的好吃啊，有些顽强的虾在酒中还在跳，捞出来放在嘴里的时候还是活的，当你咬下去的时候，先是酒味充斥口腔，来个温润的刺激，然后就是活白虾嫩肉的爽口了。 同行的小燕子貌似没吃吧。可惜了。\n\n本是出差，却只记得吃吃喝喝，哈哈，其实工作吧，就是重复，没有乐趣的出差，一周就会腻。这段献给口口，也不知道你能不能看到。口口姓吕，比我大，大屁股，哈哈，出差无锡的领队，我们叫他村长。河北人，对！就是老白干的故乡-衡水那旮沓的。刚入职的时候吧，也许是不熟，对这货挺敬畏的，问需求的时候也是战战兢兢地。因为他有过硬的行业经验，对零售行业门清。专业知识过硬。这些对这篇流水账来说都是次要的，主要是这人，极够意思。我们这些小村民，就是跟着村长有肉吃。在客户现场，他也能独当一面，抗住客户压来的不合理需求，真是贤惠的村长啊。重点是长得还帅，真是没天理了。后来部门的一次变动之后，我们俩又一起进了BI商业智能部，然后我们的这位村长就明显感觉入了坑了，也可以说是英雄无用武之地吧，貌似记得还被分去写SQL是吧，真是****(脏话)。之后他也就离职了，去了能让他发光发热的地方。口口人缘及其不错，反正就是吧，对人好，对所有人，没脾气，没架子，能跟我们这帮小孩子打成一片，也能跟一帮老人谦卑有加，总之吧，就是这么一个能让你五体投地的人。\n\n再讲讲村里人吧，在无锡的时候，我们是在马山镇，有顺爷(专业测试能力极强，能从测试的角度猜测出你代码哪里写的有问题NND,没见过这么牛的测试，后来去了北京，离家近，河北人)，小磊子(是无锡项目组先锋部队搭环境的，这环境一搭就是一年多啊，酒店我们住在一起，有段时间为了减肥从酒店走到项目现场，后来好像也没瘦)，村支书(有村长必有支书啊，我们的精神领袖，很精干的老头子，有丰富的行业经验，后来听说定居就是去了无锡，确实无锡是个好地方，适合养老)，老肖（广西人，人总是笑呵呵的，弥勒佛的样子，哈哈）军（精干的小伙子，第一批的去的，技术比较厉害，后来去了阿里）广广(无锡部负责人这么叫的，本着不曝光真实姓名的原则，沿用。广东人，一丢丢辣都不能吃，仙风道骨，瘦到风可以吹起来)，小燕子(成天跟一帮男人混，都快被带坏了，都是口口带的，哈哈。有次项目现场大门的栅栏门关住了，也跟我们一起翻门，姑娘，敬你是条汉子。珍重)，姗姗姐（美女一枚，带着我第一次坐飞机，我像跟着个大姐姐似得，当时测试任务紧，去支援了个把月就回总部了）光哥（还是老乡叻，在深圳这个地方本来遇到陕西老乡就不经常，能在同一个部门遇到同一个市的老乡就更难得了）还有些是在我之前去的，就不表了。另外还有无锡分公司的老邬（我们尊称邬老爷子，很和善的人，非常照顾我们，后来我们离开无锡的时候还给我们带了无锡酱排骨，有时候加班晚，也陪着我们，早上给我们烧热水喝）客户甲方的老陈（甲方信息部的，由于项目是个佛家景区，老陈也有些超凡的感觉，身上的衣服总是一尘不染，有时候跟我们讲一些佛家的故事，我们也就是听个热闹，而他却很敬畏的讲给我们听，对我们也很好的）\n\n无锡出差的地方是景区，灵山胜境，票价好像很贵，老陈给我们办了几个工作人员的工牌，我们吃完饭或者下午工作厌烦的时候，就可以进去玩。第一次进去的时候刚好赶上九龙灌浴表演，喷出的水雾竟然出现了彩虹，从彩虹望大佛方向望去，更显的大佛庄严了，此佛极高，站在佛脚底下，我一米八的个子还不如一个脚趾头高，里面的景点还有好多个，也都模糊了，就不表了。还有个人不能不说，我们住的酒店离景区还有些远，7-10公里左右的样子吧，晚上下班无论多晚，我们都不怕回不去，因为有她，我们的杭阿姨[不知道姓写的对不，音译的]，杭阿姨告诉我们，无论多晚，你们只要下班要用车，给她打电话就好，她都会送我们回酒店。大冬天啊，这是什么精神，无锡对我的好感，杭阿姨的淳朴占一席。后来项目结束快要离开马山，杭阿姨在家做了很多地道的菜招待我们，她老公打了野味给我们，给我们送行，她老公也拿出了自家酿的米酒款待我们，那是我第一次喝自家酿的米酒，好烈，好冲，杭阿姨的热情就像这酒，就是这么猛烈却又让我们折服。感谢！\n\n有段时间不知道谁提议晚上去跑步，从酒店跑到太湖堤岸，距离没有概念，百度大概量了下，来回5公里多，结果那段时间，马山镇的街道上一到8点半就出现了几个外地的疯子，打打闹闹的在跑步。坚持跑了1个多月吧就搁浅了。\n\n那年的春节，是从无锡直接回去的。跟光哥先从无锡坐高铁去上海，在从上海飞回西安。上海，擦身而过，晚上在上海的街道上溜达，住的比较偏，街道很干净，晚上也不像深圳那样闹腾，也许是对比的对象不同，没看到川流不息的人群，也没看到只顾低头行路的年轻人。\n\n上海，比深圳有历史，深圳像什么呢，我感觉就是改革开放为中国经济快速发展而拼凑起来似得，这才30多年吧，一个渔村，想要什么历史想要什么底蕴想要什么文化呢？华强北，山寨的代名词，也许你逛过二线城市的赛格电脑城之类的地方，觉得已经很了不起了，那么多卖电脑的，我可以告诉你，华强北的壮观程度绝对可以让你瞠目，怎么形容呢，有次我去那边修手机，在肯德基的店里，一个中年妇女，背了一书包iPhone6的后盖，一个一个的擦拭，擦干净了就用一个一个塑料袋装好，后面的交易流程我们不清楚，也不知道这些壳流向了哪里，我就一形容而已。所以啊，一些不是从正规渠道买的iPhone啊，很可能就是这里组装起来的。深圳的创新程度有多高我不知道，但是创业程度真的很高，做软件的硬件的在这里不愁找不到工作的，大批的公司拔地而起，都打着要革命某一个传统行业的旗帜，冠冕堂皇的在这块地方滋生。深圳的青年人，上下班的路上，只顾走自己的路，要不就是低头玩手机，站在地铁上两脚之地，行尸走肉一样。站在留学生创业大厦上，高高的看着街上如蚂蚁般行走的人，想想自己，我何尝不是一只蚂蚁。\n\n当然我这太悲观了，深圳是中国经济发展不可缺少的一部分。就如我这第一家公司，让财务人员扔掉了算盘，革了财务行业的命。创造了企业的收入。也创造了税收，给国家做了贡献。如我这第一家的公司还有很多。略去不表。\n\n深圳抛去这些快节奏的和高的离谱的房价，其实是很适合生活的，毕竟是海边的城市，深南大道宝安大道的绿化程度很高。99.9%的时候没有雾霾，绿道到处都是，一辆自行车就够了，不用太紧张，轻轻的欣赏就好了。\n\n！！！！这思绪又跑到抒情上去了。继续流水账\n\n第一年的春节，过的有些紧张，因为没有买到初七票,到初十都没有票。在售票窗口，售票员告诉我，初五还有站票要不要，第一年工作的我傻不拉几的给买了。就这样，在初五晚上西安开往深圳的火车上，多了一个背着书包，拎了个马扎的小伙子，上车前我还想呢，不会有那么多人在 大初五的来挤火车吧，结果，真挤啊，30个小时啊，慢慢熬吧。从检票到挤上火车，衣服已经出汗湿了，这是我第二次坐火车去深圳。第一次是毕业入职，那时候是7月初，人不是很多，我买到了卧铺的票，而这次，这一对比，吐血了都。没办法，自己鼓励自己：还好，就30个小时，睡两觉再熬一白天就好。西安上车前买的小马扎，当天晚上就报废了，根本不经坐，完全是坑人的货。站票坐火车的都知道，火车上最讨厌就是“香烟瓜子火腿肠啤酒饮料矿泉水麻烦把腿收一下”了，这次我真是恨死这帮人了，哈哈。本来就在过道站着难受，还要给你让个道!大过年的，都不容易。当天晚上也不知道在哪里找了报纸还是啥东西，在中间的过道上铺开来，然后腿横着伸进到座位下面，躺在过道上，头枕书包靠在另一排的座位上，听着火车哐哐的声音往远方去了。虽然是冬天，车上还是有些热的。汗出了不少，记得上车前买了一瓶水，两个脉动，还有个烧鸡，呼呼哈哈。结果在火车上，一点点食欲都没有，只记得喝了大量的水。除了上火车时带的这三瓶，在火车上的这个香烟瓜子火腿肠上还买了好几瓶脉动，没买矿泉水，我想着还得补充些能量，不然抗不到下火车就悲剧了。喝了这么多水，奇怪的是，没上一次厕所。我想着这么多水都从汗孔里出去了啊。人还是很厉害啊。白天其实还好，第二天聊天时才知道，我伸腿的那桌也是富平的，我们白天就轮着坐，到了晚上，要休息的时候，我就自觉的继续了昨晚的姿势，因为确实很难受也不能去跟别人换着躺地上吧，哈哈。白天跟我换着坐的人叫冯凯，互换了手机号码，后来过年时都发一条拜年短信。谢谢你！\n\n第三天早上（初七凌晨5点）到达深圳的时候，还没有地铁，呼吸着南方海面吹来的温热的空气，有点点海的腥味。就像老家初春时候一场春雨，混合着干燥了一冬的浮尘，你既要喜欢这春雨的温润，又要享受这土的腥味。总之吧，与在火车上局促的环境对比起来，现在终于回到地面上的幸福就是这么简单。伸伸窝了30个小时腰，看着东方的天慢慢白了。初七，按说年还没有过完。又是一年的开始了。等到6点多，地铁口开门，进地铁的都是刚下火车的人，拖着疲惫的身躯，拉着或者背着行李，也都要开始为这一整年的生计打算了。\n\n回到住的地方，想想出了好几瓶水的汗量，不臭都难，与我合租的伙伴还没来，烧了热水洗了个澡，躺在床上就睡着了，脑袋里还是火车哐哐的声音，等起来都下午4、5点了，还是不想吃东西，仍是只喝水。果然，接下来的两三天，仍然没有食欲，有些轻微便血，尿也相当黄，等过了几天好些能吃东西的时候，第一次也就感觉是重生了。此后几年，哪怕飞机再贵，打死都不去挤火车了，除非是有卧铺。不过也又一次买了坐票在一个不是高峰期回去的。过年的时候其实这一路[西安到深圳的火车路]本身也没有啥可看的。13年开了高铁，把原本30个小时的路程缩短到10个小时。不过我现在不太喜欢高铁，太快！我说的太快啊，就是眼前的景色一晃就过去了，看到个景也就是个影子。那火车就不同了，远远的可以看到前面有一树花，你有足够的时间准备，有足够的时间送别。最主要的是，火车在上饶的时候，你可以下去买烤鸭腿吃，哈哈吃货本性尽显。不过前提是，要在舒适的火车环境里。像我上面说的那种，不要想了，太奢侈。\n\n这一路最好的时节应该是4月底，5月一整月吧，整个中国都是很舒服的季节，南方还没有热到冒汗，北方又刚刚过了初春的洗礼，所有的植物都在拼命的生长，各种花，各种叶子，拼了命的呼吸，北方也散了聚集一冬的雾霾，天也能达到深圳的蓝。反正就是吧，如果你这段时间有时间，那就买张卧铺票，带上水果和清爽的黄瓜(黄瓜是什么鬼，答:黄瓜是火车上的最爽口的食材)。无论是从南方到北方的那个城市，或者是从北方的哪个城市去南方，这个方案都是不错的选择。行一路，大江南北，一路春光，时间可以慢些，我也希望这火车不要太快，慢些最好。\n\n有时候我们就是走的太着急，忘了慢下来看看身上有没有落下的尘，轻轻佛去，继续前行。\n\n哎哟喂，骚年，又发......呃抒情了啊......\n\n上面讲了无锡出差时的村里人。回到大城市吧，再讲讲城市人。再回去时，部门里又来了几个新人，有个据说是被部门老大从客户甲方拉回来的，后来证实就是的，都结婚了。哈哈，我也都成了个老人了，其实还不能算作老人，因为部门里的老人们，除了口口叫我傻B，其他人都叫我小涛，所以啊，我借着这个小涛，享受了好几年部门里小辈的待遇，就是吧大家对我都很好，反正我最小，咋地吧！嘚瑟不？欠打不？\n\n先说说我师父吧，我们称作郑老师，我直接喊师傅，其实比我也就大一两岁吧，广东揭阳人，先前宫里招太监都不去这里招，为啥嘞，因为贵地的人把吃饭读作“驾崩”，皇上听到还不得吐一盆血啊。听同事们说，我还有个师哥，名字他们起先常说，后来说的少了，我就忘记了。6年多了吧，我一直都是师傅师傅喊，也不厌。师傅跟老肖一样，总是笑呵呵的。不像我，喜怒总挂在脸上，要不就是面无表情，很那接近的样子，还闷骚的要死。广东揭阳潮汕地区的人喜饮茶，师傅也不例外，每天早上上班前的第一件事，就是去洗杯子，泡茶。师傅的桌子上总是好几种茶，从无锡出差回来，特意给买了盏紫砂的茶壶。前面讲过了，EAS、BOS比较难搞，尤其是对刚毕业的人来说，那玩意就跟一团乱麻一样。启动个BOS要半个小时，启动下运行时环境要2、3分钟的样子，那时候有个调侃啊，就是点了启动EAS的时候，就去接个水啊上个厕所之类的，回来的时候差不多就好了，师傅对EAS和BOS那套东西玩的好溜，师傅比较聪明我比较笨，哈哈。但是师傅呢不嫌我笨，有时候同一个问题问到第三遍了，他就真烦了……哈哈。但是还是会告诉我怎么回事怎么解决云云，我个不长记性的家伙，也不知道记录下问题，现在想想，当时怎么那么懒，又笨又懒。哈哈。后来搬去跟师傅住在了一个城中村，住隔壁楼栋，这个村子住了我们部门好多同事，跟个部门根据地似得。起先的两年吧，师傅还是一个人，后来隐婚了，真的隐婚了，很突然的有了师娘，哈哈。自从有了师娘，师傅就很少出来跟我们活动了，师娘跟师傅是同一个地方的，由于住隔壁栋的原因。我是不是过去蹭饭，师傅师娘做的饭很好吃，是广东沿海地区特色的餐食风格，清淡却很有食材的原味，每次去我都吃到光盘子，我一点都不见外，哈哈。有直接煎的海鱼，还有广东人最喜欢煲的汤，还有次专门为我包了蒸饺，虽然吧整出来散了，不过真是我们三个，额不对，是四个，哈哈那个时候师娘已经是准妈妈了，这里再次恭喜师傅荣升爸比职称，哈哈。从师傅这里学会了煎鱼，有几次跟师傅去海鲜市场买食材，师傅常去的那家鱼档，后来我经常光顾，因为师傅常去，我也常去，没别的，就是因为信任我师傅，鱼档老板从来没坑过我，而且鱼也给我弄的很干净。因为老家深处内陆，小时候很少吃鱼。所以我很喜欢吃鱼，自从会做偷师学的煎海鱼之后，吃了个爽。\n\n师傅，后来很少联系了，不联系不代表忘记，有些记忆是忘不掉的，零售也永远不会忘记，这里的人都很好，对我好，让我个初涉世的毛头小子，感受到了大家庭的温暖。\n\n除过以上已经出现的同学们，喂现在开始点名了。\n\n成程哥，云南人，成程哥是个烟友，就是这么莫名其妙的认识，几根烟就可以很相熟，后来做了成程哥的几个项目，挣了些烟钱。另外成程哥也是个大厨，有次去了他那边，成程哥光着膀子给我们做水煮鱼还是什么来着，模糊了，那个假期我刚好在广州玩，成程哥给我打电话，在哪呢？能回来不？到了深圳直接从罗湖火车站过来哈！有饭吃我岂能推诿啊，我就屁颠屁颠的从广州回到了深圳，到了罗湖去了。其实成程哥我觉得一直都是个大哥一样的人，跟我有些像吧，但比我成熟的多。他也弹吉他，我是买了一把陪我寂寞的，到现在也是乱弹琴，成程哥已经会写弹唱了，一次我们在坪洲一个韩国烤肉的店里，点了两瓶真露，一人一瓶，这酒度数不高后劲挺大，喝着喝着聊着聊着不知不觉就晕了，两个人踉踉跄跄的，成程哥趁着酒劲抱着我那把吉他，就开始唱，唱的跟个流氓一样，哈哈。歌词我记住了两句:姑娘姑娘那个美啊，小伙小伙那个浪啊，云云。后来成程哥去澳洲待了一年左右，回来我们仍然联系。现在也少了。哦对了，成程哥也喊我师傅叫师傅，这么算下来我是你师哥啊。我这脑子，现在才反应过来......\n\n还有与我合租了半年多的老莫，也是广东人，眼神很深邃，很会做饭，我有好些菜都是跟他学的，此人极喜欢酱油，导致我后来做菜也都喜欢放酱油，广东人注重养生，比较清淡，反而这半年他被我带的口味重了些，我很喜欢吃广东的肠粉，他竟然在我住了1年多的村子里找到了地道的肠粉店，老板是广东人，只做早点，老头老太太两口子，只早上7点到10点之间出摊，肠粉是限量的，就那么三两桶米浆，卖完了就完了，老板娘的普通话不是很好，每次都用很奇怪的语调问我:要木要la(二声)jiu(三声)。其实在这店里吧，很能找到广东早茶的那种感觉，虽然很简陋，只有五六张桌子，老板家的茶很好喝，尤其是早上吃早点的时候，有甜甜的味道。肠粉很爽口，用老莫的话，就是很”滑”，好像是这个字吧，也模糊了。听着小摊对面大榕树上鸟的叫声，喝着清甜的茶，吃着爽口的肠粉，忽然觉得，深圳这座城还是挺美的。\n\n在深圳的时候，最喜欢的就是徒步了，只要不是城中村这种极其难治理的地方，主街道还是很干净的，不算有组织的那种徒步，我自己私下里走的，按我的话，已横穿了深圳，因为我对深圳的定义，就是罗湖火车站到机场，其他的地方都算郊区，因为我没去过，哈哈就这么任性。私下里的徒步分两次，第一次跟顺爷，我俩也不知道是谁最先提出来的，反正就是这么的臭味相投，一排即和，我们早上从白石洲开始走，先走到红树林，再沿着红树林往罗湖方向走，到了福田的时候，天就开始下雨了，俩傻B都没有伞，躲到福田某个立交桥下的桥洞里躲雨，我的手机还是安卓1.6系统的摩托罗拉里程碑，那时候已算是第一代智能手机了，也在这次雨中壮烈的暂时牺牲了(后来检查是屏幕进水了，自己在淘宝淘了块屏幕换上了)。雨停了，我们继续往罗湖走，在福田，我们俩已经累成了傻子，中午到饭点，我俩进了一家猪脚饭的店还是啥店来着，也模糊了。这时候我们已笑不出声了，相对而视，嘴角上扬，轻蔑的从喉咙里发出哼的一声，就代表我们笑过了，是对笑，俩傻逼，哈哈。吃完饭我们继续走，这时候腿估计已经麻木了，没有疼的感觉，只是觉得累，终于，在下午四点半左右的样子到达深圳罗湖口岸，于是就有了顺爷那张光脚、我跟个木鸡一样站在罗湖口岸门口的照片。罗湖口岸有地铁直达白石洲，这也是为啥选择徒步到罗湖口岸的原因。累成俩傻子。假期过后，又被同事们笑成俩傻子。不过，这次徒步，让我收获了我最喜欢的一张照片：扶桑花，长得那么傲人，又刚下过雨，展现出极强的生命力。第二次徒步我是自己走的，没叫顺爷，也没通知谁，就自己走。出发地仍然是白石洲，目标宝安国际机场[老机场]，这次的距离和去罗湖的距离差不多。但是是一个人了，出发时已经中午了，选了大冲地铁口的肯德基搞定了中午饭，满满的能量，预计12点的时候正式出发，沿深南大道上宝安大道，沿宝安大道直走就到机场了，就这么简单。这天的天是小阴天，有些风，很爽，走的出汗，风一吹，你自己体会下这种感觉。走到宝体的时候，由于鞋子的原因，脚上起了泡，幸亏我有准备，马上换上了包里带着换的一双新袜子，再在街道边上的商店买了双厚的棉垫子，舒服了些，水泡不在长大，踩了几公里之后竟然消失，也不知道是破了还是散了。走到宝安大道过了宝体的样子，其实脑袋已经开始放空了，开始注意宝安大道上的指路牌，机场10KM……开始骂自己傻，机场3.2KM……开始骂机场傻，建那么远，到了机场，下午16点19分，拍了张照。也真是没啥可看的，飞机起落也不是在宝安大道这边。绕道上天桥进机场东地铁站，腿已麻木。这次是个周末，没有像第一次那样是国庆，可以有好几天休息，这次惨了，第二天就要上班了，这两条腿哟，已经不是自己的了，从大冲地铁口走到公司，还有700米左右，是两条腿相互拖着，再加上一双手拽着走过的，从来没有觉得700米可以这么长。不用说，到了公司，又被同事们笑成傻子。可是傻的这两段记忆，已经钉在我的记忆里，对我来说，非常值得。后来参加了一次磨坊组织的深圳百公里徒步，只走了半程，虽然脑袋也放空了，但觉得太赶，大家只顾走路了，又是晚上，行至梧桐山山里时，志愿者一个一个的都是骗子，明明二签还有还有好几公里路，却在那边对我们喊：加油，快到了，拐了前面那个弯就到了！我们都大喊：骗子、骗子！！！然而心里却十分感激。到了梧桐山签到处，脚已经起水泡起的厉害，不能继续，就此结束吧。彼时凌晨4点，距离第一班公交发车还有2个小时。我们就捡了些红牛的箱子铺在地上躺在上面，望着还没落下的月亮和星辰，感受这空山的寂静。\n\n旅行是一场身体和思想都在路上的修行，眼睛看到的，未必是会深入脑海，但身体和眼睛同时感受到的，大多会留下来，成为一辈子的财富。\n\n我喜欢走到脑袋放空时的感觉。这时候我才能感觉到我是一个人而不是一只蚂蚁。\n\n额，扯的越来越多了，感觉要写不完了。零售就写到这里吧。接下来各位看官请随我走进第二个部门，BI(Business Intelligence)商业智能。不要被这牛哄哄的名字亮瞎，其实做的事情，远远挖掘不出啤酒和尿不湿的关系。说白了就是数字报表+好看的图表。\n\n先介绍下这个部门吧。入职的第一天，老戴[也是老大]领我到部部门，我坐在我的第一个办公位上，两个办公位的连接处放了一本公司画册，我就随手翻了翻。其中印象最深的就是乔昕明的介绍，胖胖的形态有些像高晓松[可百度搜索乔昕明第一个领英的照片]，2009年的时候他的扩展报表工具一举拿下了当年的一等奖。从此这个名字就在我的脑子里扎下了根。所以2013年零售部发生人事变动的时候，我有机会进入BI商业智能事业部(前身是扩展报表项目组)，于是我就放弃了可能会有N+1赔偿的裁员机会，进入了乔昕明领导下的BI事业部。有两方面原因：一个就是因为老乔的光环，一个是因为被BI这个名词给忽悠了。这里有必要介绍下老乔，资深的软件架构+资深的软件研发，总之就是神级的人物，我的印象了里，四楼中间的回忆室旁边，总能看到老乔的身影，一副森海塞尔的头戴式大耳机，一部苹果笔记本，还有些凌乱的稿纸，就是老乔的办公位了。其实老乔有办公位，就在BI部门的领导位上，可老乔很少过去，所以在BI部看来，老乔自从BI事业部成立空降了个产品经理之后，貌似已经是不再关心这个BI部了。也许他从一开始就知道新成立这个部门就是瞎胡闹吧。也有可能因为人，不表，不做长舌妇。\n\nBI事业部分离两个部门，一个是做BI分析解决方案，其实到底就完成了财务分析的方案。我就属于这个部门，做BI工具，具体是啥呢，就是把开源的kettle数据分析工具，包装成BI自己的产品，说白了就是换壳。这个组里，认识了大哥[*忠文，湖北土家族人，所以我也叫他土人。汽车4S事业部过来的，跟我一样的情况过来的。一脸的痘痘，夏天老穿的跟个归国华侨似得，冬天却又西装革履的，就差一条领带了.技术流，后来去了康拓普玩大数据]，宝哥[bruce，江苏人？模糊了，此部门的元老，研究僧毕业，瘦小精悍，技术好厉害，后来去了平安，让你给我要蔡学镛的签名都没要到]，阿甘[江西宜春人，资深测试，人不错，一脸胡髭，金蝶足球队的队长，会踢球的人缘一般都不会差，金蝶的员工我感觉他能认识一半吧，哈哈夸张了]，小龙[东北银，搞过扩展报表，后来搞前端，把报表的那坨东西又用js实现了一遍，BI内部后来发生组织变动的时候，有幸搭档做过一段时间portal，也是技术流的，后来去了腾讯].其实经常一起玩的是大哥，我们俩都是肉食动物，每次去找他玩，都是吃肉，时而喝点小酒。大哥是个无所不知的神人。你跟他聊什么都可以，他大学的专业是雷达与天线，厉害了我的哥。他大学在新疆上的，是个吃过手抓饭的，我们去的比较多的是他那边的巴依老爷，吃羊肉的地方。我是个饭桶，他是个吃货。我喜欢听他聊天，虽然有时候他天马行空的讲一些我听不懂的东西，他跟别人介绍自己的时候总是喜欢用明朝的大将李文忠开头。虽然大部分的人对李文忠是谁也不知道......他家里有茶树，清明谷雨过后，他爸会给他寄一些自己手工炒制的茶叶，我就沾个光，老去他那边蹭茶叶喝。这货喜欢喝啤酒，阳台上满满当当上百个啤酒瓶子。怪不得有啤酒肚。\n\n哦~说到大哥这些啤酒瓶我想起来了一件事，哈哈，顺便提一下，工作第二年的时候，喝可乐上瘾了，不要问我是怎么上瘾的，我也不知道。而且只喝香草口味的听装可乐，每次下班之后就去湾畔百货买4听，有时候打折我就买八听，那时候我没敢在公司喝，因为老戴也喝，我怕他跟我抢，哈哈。其实不是了，因为那时候有个段子说可乐杀精，问度娘，是谬论，当时做这个实验的是把精子直接泡在了可乐里，你这不是傻逼吗？你把青蛙腿打断了然后大喊吓青蛙，然后说青蛙没有耳朵听不到，因为对它大喊它没跳走。这都是啥实验环境啊？不过我也确实不敢再这样喝了，喝出病就麻烦了，而且接下来一年体检老检出高血压，是不是跟这个有关就无从可知了。半年下来，可乐的铝罐也攒了几百个。当时我住的地方楼下是个面馆，老板跟我是老乡，我去他那边吃饭，不为别的，就为讲几句陕西话，其实老板做的东西啊，确实不咋好吃，哈哈。我叫他哥，他跟他媳妇，还有两个儿子，一个已经上幼儿园，一个还在嗷嗷吃奶，他的老父亲也在那边，大叔抽的是旱烟。问题是他这个小儿子吧，放在推车里，就放在吃饭 的厅里，进进出出的人，孩子就老哭，一哭吧，他爷爷就去哄，他爷爷又是旱烟不离手，那个店朝北，本身就有些昏暗，再加上这样的环境，他家的生意也就不怎么样的感觉，反正我感觉就是有人去也是打包就走了。有次我去他那边吃饭，跟他聊天，他说他的大儿子捡瓶子自己挣钱花，哈哈，我就说我那里有好多的易拉罐，吃完饭跟我上去取去，他家的大儿子比较怕生，虽然我经常去跟他爸聊的也还不错，可这孩子挺羞涩的，也不跟我说句话，起先拿了个比较大的那种超市里的大塑料袋，我说太小了，哈哈。他爸爸又给他找了个好大的蛇皮袋子，我说差不多了便屁颠屁颠的跟我上楼去了，问题是等到上楼之后他看到这一堆的易拉罐也没有表现出很开心，还是羞羞涩涩的，我帮他装进袋子里，试着拎了下，有些小沉，就帮他一起提下去了，这些易拉罐估计可以换一个小玩具吧。小伙子，羞涩如我小时候啊，家里来人就躲进房间不出来啊。哈哈。后来我搬走了，还专门回去他那边吃了两次饭，聊聊天。\n\n我去......这段跑飞的严重了，回到BI吧。BI事业部的日常工作没有啥可讲的，能记住的还是出差。去的不远，在广东云浮。领导开车拉着我们四个过去的，忘记介绍这个领导了，叫学明，技术出身，对我们都很好，从开发和需求的两个角度看问题，不像有些领导，空降来的，天上掉落凡间的天屎吗？出差一行人：宝哥[坚强的技术后盾]、领导和阿甘[主要培训客户软件使用]、我[酱油]。学明和阿甘喜欢足球，那天晚上吃过晚饭，回到酒店，说有球赛，领导买了几瓶加几罐啤酒，买了酒鬼花生，瓜子。然后就开始看球了，我跟宝哥不怎么感兴趣，陪他们看，其实就是瞎看边聊天，出差的项目是温氏，几个农民合资起家的，整个县城估计都是仗着温氏吧，温氏总部的楼好气派，据说比他们县政府的还要气派，说的糙点：养鸡能养成这样，真是牛逼。临走时大家去当地买了土鸡蛋，我不记得我买了没，模糊了。\n\n写不出文字了，思绪已经被散乱的记忆打乱。这篇回忆录写了四年了，不想往下写了，或者说现在不想写了吧。接下来的两年有些起落，要写的东西太多，与前面这四年对比太强烈，风格也要完全不一样，再构思一下吧。先就此止笔。\n\n标题也不改了，也许空白几年也好。\n\n回忆越忆越漫长，如人生路，一个往前一个向后。毕业后的工作路是个极长期且没有毕业季的历程。\n","source":"_posts/life/2017-01-24-5years.md","raw":"title: 这五年的那些事\ndate: 2017/01/24 13:42:25\ncategories:\n- 人生历程\ntags: [五年记录,乱七八糟,心情]\n---\n最近一直想写，都不知道怎么下笔，闲下来的时间总是在懒惰中挥霍，或是沉浸在幸福快乐中流散。五年真的是白驹过隙，但发生的事情比上一个五年多太多。\n\n上一个五年，做的影响一辈子的事情，确是高考与专业选报，现在看来，也不后悔，对路，也符合我的性格，但是也封闭了我的性格，不知从何时开始，内心开始对这个很小的世界产生了依赖，不愿意改变，很怕变化之后会怎样，畏首畏尾的。毕业找工作时也碰到了坎，四月份才找到，对于我这抓住了毕业季尾巴的人来说，实在太幸运了。\n\n大学四年，自律意识太差了，现在回想起来，大学是被荒废了的，逃课挂科家常便饭，只醉心于自己喜欢的事情，想到了那年收到学校警示通知（挂科太多），与家人过年都是在阴云笼罩的气氛中度过，让父母操碎了心，现在这些事情想想，真是太不应该，学生的工作，就是学习好自己的课程，这是本份，任何借口都是狡辩。如果没有比尔盖茨的本事，就老老实实的读书，不读书这社会上你就是傻子。我就是个傻子，现在除了掌握皮毛不入精髓的点点计算机知识，我就剩下一具肉身。真是往事不堪回首。这是工作前的五年，就这样写吧，反正也不能反悔了，自己买单吧！\n\n现在开始最近这五年。前方无高能，流水帐记叙。\n \n毕业之后来到了一家大公司，以一名很多人不懂以为是修电脑的，一线城市称为软件工程师，自嘲为码农程序猿做着一份刚好能自娱自乐填饱肚子的工作--程序员，公司制度完善，有师傅带，大家对我很不错，很和谐，无奈期间换了部门，后面详说吧，继而又换了两家公司，现在还是码农，哈哈，做一辈子码农也不错，至少可以吹着空调玩电脑。\n\n总在想怎么去写，现在想想，就随便写吧，想到啥写啥，顺便吐吐槽。如果下文中您在看的时候感觉到是在写你，请不要觉得是你，因为我会加花。\n\n2010年7月/2014年9月，这个时期跨度很大，记忆也零碎了，那就从大事件聊吧。\n\n依然记得那天挎着个硕大的袋子，拖着大学时候的被褥，被保安大哥拦住：喂，农民工去对面工地（预警，此处加花，下文再加花处，恕不提醒），待俺拿出有红戳戳的入职通知，保安大哥才引我进入公司餐厅的休息，好吧，这只是开始好伐，我当时去到公司的时间略早于上班时间，好吧，每个进公司的同事进门都跟看猴子一样看我，我就这么在第一家公司曝光了。这一天是步入社会的日子，恐怕要像烙印一样记一辈子吧，2010年7月9日！\n\n初入职场，楞头青，突然来到高大上的软件公司，还是挺兴奋的，从接到offer到报到，足足高兴了三个月，然而蜜月期啊侬晓得伐？高大上的BOS和EAS（不懂没关系，我也不懂，以下文章关于技术的词语不必懂，看新鲜即可）足足让我折腾了两个月才入门，这感觉太痛苦了，简直睡觉脑子里都是那个蓝色风格的EAS系统，这里感谢我那耐心的如禅师般的师傅，同一个问题问三遍的我都烦了，你还不烦，你这样耐心的性格是谁教的，已如神佛，我已献出了我的膝盖，师傅，感谢你！初入江湖有你，吾之大幸么么哒！\n\n好了，会写代码了，干活咯！来来来，小涛来，老戴喊我，分你个基础数据先练练手，三天搞得定吧？好嗒，领导！然后就屁颠屁颠的去回到座位了，呃，是个什么基础数据来着，哎呀，需求文档怎么找不到了，哎呀呀，这环境怎么启动不了了，哎呀呀呀，一天过去了，今天的贡献值zero，然已累觉不爱，加班吧，先把实体建了界面画了吧，至少得晚上能有个理由睡觉，不然失眠了怎么办！吥呤吥呤搞定打卡下班走人，哟十点多了，哟还有三十块钱餐补，想想还有些小激动呢！\n\n回到驻地，或称作为住的地方，远不能用家这个字。洗澡先，这里补充下，夏天在这个南方海岸线上以蚯蚓状蜿蜒的城市，来桑拿啊，免费的，不洗澡你就变成蚯蚓了，粘死了！我喜欢这里的冬天，不热不出汗不洗澡，积攒泥灰修佛。哈哈哈，啊~，跑题了，赶紧睡觉都快十一点了，呃，要不玩会QQ，不玩不要紧，一看时间吓一跳啊，十二点了，睡吧睡吧。接下来的八个小时无意识之后，洗洗还是红色的眼睛，莫名其妙睡着了，然后莫名其妙的被闹钟吵醒，然后走路去上班，虽然只有一两站偶尔也打个的挤个地铁，然后如此循环。后来呢，弄了个二手的自行车，丁丁当当成了个伪骑行族，真实是个伪的，因为自行车的变速简直是个渣渣，还有那个铃铛，真是用的时候才知道是个摆设，这是后话，自行车有传奇，各位看官接下文分解。\n\n这样也还好，刚开始的时候都是很充实的过每一天，至少每天都能学到点东西，但是大学时候的种种劣习也逐渐暴露出来了，作息以及饮食的不规律，熬夜，不记笔记或者说是不记便签[这时候才知道好记性不如烂笔头是什么意思]，大学我承认时间真是很多，一些学科老师教的东西确实对工作帮助很少，但是现在想想，其实这些培养的并不是你课本上学到了什么，实际工作要用到的，是你怎么去学的方法，大学应该培养一种良好的生活以及学习习惯，这个对工作帮助真得很大。觉悟吧，骚年！！！\n\n在这家公司吧，其实算折腾了一个来回，这里用A部门和B部门来代替，入职的是A部门，也是在这里变的有点油条气，成了第一家公司的油子，因为是个传统行业的ERP研发，所以刚开始对这些高大上的ERP名词都一知半解的，什么BOM啊，移动加权啊，货位啊，都是在那帮需求的带领下，慢慢了解，对程序员来说，这些名词其实对编程影响不大，有人已经帮你写好了计算公式，你只要按公式垒代码就行，成体系的公司就是这样，所有人的分工是很明确的，你就写好你的代码就行，这就是问题，程序员被局限了，视野被封闭在了逻辑代码上，对于业务逻辑以及为什么这样的业务逻辑一知半解，对产品提不出建设性建议，老都是按需求文档，不好玩，太呆板。其实这时候我也还是这样子做的，一切听需求按文档，这样晃晃忽忽一年，有个机会可以去客户现场出差咯，对于刚参加工作的小年轻，出差显得高大上，跟部门领导说了下，领导,我想出差，哈哈。领导笑呵呵的看着我，哟，年轻人，不错嘛，有魄力，去吧，就这样，第一次被一个测试姐姐带着坐灰机，飞呀飞，从深圳飞到了上海，哎呀，上海哟，一线大城市哦，不过我们去的是无锡，一个没有锡的地方。无锡确实是个好地方，生活环境好，工作压力小，这个在我去的那年【2011-2012】真实的感受，早上9点半上班，晚上5点下班，人们生活在太湖边，没事就去划划船啦，吃吃湖鲜啦。哟，这段好乱，整理下思绪，就像跑飞了的代码，连系统都找不到它。那就另起一段。\n\n这段讲无锡出差的那段经历，因为有先行部队先到了，我们属于第三批到的，所以刚去的那天，我跟那个测试的美女姐姐一起，拉着大包小箱飞机转高铁，再转坐出租，来到这个接下来要待多半年的地方-无锡马山灵山，大佛保佑，我们这路行程很顺利，到了目的地的时候，已经跟我现在写这段文字一样的时刻了，夕阳已经泛出了红，夜幕也静悄悄的在这块佛光护佑的圣地拉开了帷幕。鸟儿偶尔悄悄的叫两句，不过已没有中午的那么叽叽喳喳，村子里的狗，听到人声的时候也懒洋洋的吠两声，那时已入冬，在太湖边上这座小镇，还是很冷的，在景区门口等了几分钟，我们那熟悉的小伙伴出现在了我们面前，这才感觉到，哦，原来这里也有我们认识的人，刚产生的点点落寞就散去了，经过一片停车场，我们到了我们接下来这半年要战斗的地方，一个十几平方两排办公桌的地方，第一拨和第二拨人都在，见面时候的欢呼，调侃，哈哈，总之其乐融融赶走了很多工作带来的压抑，领导这时候发话，走，吃饭，哈哈，这个以后就是晚上下班的号令了。接风洗尘，自然离不开酒，这里的酒，是黄酒，我知道的品牌也是那天喝的叫惠泉，好不好喝不知道，我不是会喝酒的人，但是温热的酒冒着热气，加上大家的欢笑，足以驱走异乡客独有的无归属感。\n\n工作上的事情吧，跟在公司是一样的，只是去客户现场，表明我们是重视客户的，我们这拨人就是专门来做这个项目的，这样客户也很重视我们，那边的人对我们很不错，跟他们一样吃的他们的食堂，说实话，这食堂绝对比下馆子要好吃一百倍，而且很便宜[客户给我们充了张卡，所以我们属于白吃]，至少我现在想起来，还是觉得是美味。无锡人喜欢吃甜，但是也不会腻，哪种红皮的红烧肉，我一次能吃好几块，酱排骨，我也能吃好多，哈哈，现在才分清了吃货和饭桶的区别，我属于饭桶。\n\n这两天有点忙，耽搁了写下去，继续吧，今天心情不好，从上面的思路上也接不下来了，还是以时间为主线想到那里写那里吧。\n\n（此处距离上面的文字已经一年多了）不好意思，真是断了，断了一年才接着继续写，这一年发生了太多事，后面细聊。这篇文章的标题原本是5 years的，按现在的时间也要变成6 years了。 无锡的故事还没讲完，现在继续~\n额，不太好接上，若说到饭桶了，那还是先讲讲吃吧。我确实是个吃货，刚开始工作的前几年，我还不怎么做饭，可到了后来，就想着做点了，也是因为交了女朋友的缘故吧，前几年，自己做的简单，本身我也不挑食，挂面+韭苔炒鸡蛋+老干妈+生蒜。哈哈，吃生蒜估计是北方面食动物的专属吧，南方的小伙伴看哭了。老干妈确实是个好东西，百搭，可以直接用勺子挖着吃。想起来大学的时候有个贵州的同学，好像是他妈妈是医生还是怎么回事来着，给老干妈陶华碧看过病，现在想想，好厉害哦，我也可以跟别人吹，我同学的妈妈给老干妈看过病[笑cry]。额，又跑飞了，刚到深圳的时候，买了个不锈钢的碗，其实可以算作盆，因为确实挺大的，一般我是先炒韭菜鸡蛋，炒出来就放在这个盆里，那时候的韭菜鸡蛋不知道为啥老炒的干巴巴的，后来过了好几年才发现，油放少了…… 然后不洗锅，直接接凉水，煮开后放挂面，不知何时记住了老家时煮面的诀窍：水开三次面就好了，就是挂面在水里煮的时候，水再次煮开了，加半碗凉水进去，然后再煮开，如此煮开三次面就好了。反正也不知道是不是真的熟了，用笊篱捞出来过一次凉水，就捞到盆里盖在韭菜炒鸡蛋上，然后放盐倒醋，剥蒜取老干妈。哦，这里由于思绪混乱，忘记告知生活环境了，这是我刚到深圳的第一家出租屋，在世界之窗对面的城中村-白石洲，合租的是中兴公司眯眯眼的一个小伙伴，名字已经模糊了。住在4楼还是5楼来着也模糊了。平时我们交流的比较少，他跟同学合住在主卧，我自己在另一间。如此间尺平方，生活半年。\n\n思绪回到无锡。太湖的边上，秋天去的时候有点凉，冬天我感觉是北方的那种冷，不像深圳的那种湿冷，秋冬的无锡，雾比较多。去无锡之前，我花了1500大洋在华强北买了台富士的相机，一到周末我就挎着相机，在马山镇[我们的驻地]的周遭转，看到好玩的新鲜的就拍下来。在酒店的后面，有条河，名字不知道，那是我常去的地方，有鱼，我没有渔具也不会钓鱼，就站在小桥上，远远的看当地的大爷大叔在那边钓，清晨时，河上起雾，我站在桥上，也许也是个不错的画面，也许也有卞之琳<<断章>>里所描绘的那样：你在桥上看风景，看风景人在楼上看你，明月装饰了你的窗子，你装饰了别人的梦。可是那时真有别人的梦吗？沿着河走，可以走很远，我也没有去探索过河的源头在哪里，只知道，对于一个外乡人来说，这样的风景，多了便就成了乡愁。\n\n路上的行人都是本地人，无锡讲吴语[百度的，我也不清楚马山的是不是吴语],我虽不不会讲他们的话，但是愿意听他们的方言，我是个对各地方言很感兴趣的人，虽然不会说，但听得多了，也能听懂意思了。江苏分苏北苏南，无锡是苏南，鱼米之乡。太湖有三白，白鱼、白虾、银鱼，好像吃的最多的就是白鱼银鱼炒蛋吧，银鱼汤之类的吧，也许是白虾比较贵，只吃过一次，很经典的一次。[以下有些高能，慎入]不记得是无锡分公司还是甲方请客了，叫醉虾。是用当地的黄酒，然后把洗干净的白虾活活的扔进酒里。是不是感觉有些残忍呢，不过真的好吃啊，有些顽强的虾在酒中还在跳，捞出来放在嘴里的时候还是活的，当你咬下去的时候，先是酒味充斥口腔，来个温润的刺激，然后就是活白虾嫩肉的爽口了。 同行的小燕子貌似没吃吧。可惜了。\n\n本是出差，却只记得吃吃喝喝，哈哈，其实工作吧，就是重复，没有乐趣的出差，一周就会腻。这段献给口口，也不知道你能不能看到。口口姓吕，比我大，大屁股，哈哈，出差无锡的领队，我们叫他村长。河北人，对！就是老白干的故乡-衡水那旮沓的。刚入职的时候吧，也许是不熟，对这货挺敬畏的，问需求的时候也是战战兢兢地。因为他有过硬的行业经验，对零售行业门清。专业知识过硬。这些对这篇流水账来说都是次要的，主要是这人，极够意思。我们这些小村民，就是跟着村长有肉吃。在客户现场，他也能独当一面，抗住客户压来的不合理需求，真是贤惠的村长啊。重点是长得还帅，真是没天理了。后来部门的一次变动之后，我们俩又一起进了BI商业智能部，然后我们的这位村长就明显感觉入了坑了，也可以说是英雄无用武之地吧，貌似记得还被分去写SQL是吧，真是****(脏话)。之后他也就离职了，去了能让他发光发热的地方。口口人缘及其不错，反正就是吧，对人好，对所有人，没脾气，没架子，能跟我们这帮小孩子打成一片，也能跟一帮老人谦卑有加，总之吧，就是这么一个能让你五体投地的人。\n\n再讲讲村里人吧，在无锡的时候，我们是在马山镇，有顺爷(专业测试能力极强，能从测试的角度猜测出你代码哪里写的有问题NND,没见过这么牛的测试，后来去了北京，离家近，河北人)，小磊子(是无锡项目组先锋部队搭环境的，这环境一搭就是一年多啊，酒店我们住在一起，有段时间为了减肥从酒店走到项目现场，后来好像也没瘦)，村支书(有村长必有支书啊，我们的精神领袖，很精干的老头子，有丰富的行业经验，后来听说定居就是去了无锡，确实无锡是个好地方，适合养老)，老肖（广西人，人总是笑呵呵的，弥勒佛的样子，哈哈）军（精干的小伙子，第一批的去的，技术比较厉害，后来去了阿里）广广(无锡部负责人这么叫的，本着不曝光真实姓名的原则，沿用。广东人，一丢丢辣都不能吃，仙风道骨，瘦到风可以吹起来)，小燕子(成天跟一帮男人混，都快被带坏了，都是口口带的，哈哈。有次项目现场大门的栅栏门关住了，也跟我们一起翻门，姑娘，敬你是条汉子。珍重)，姗姗姐（美女一枚，带着我第一次坐飞机，我像跟着个大姐姐似得，当时测试任务紧，去支援了个把月就回总部了）光哥（还是老乡叻，在深圳这个地方本来遇到陕西老乡就不经常，能在同一个部门遇到同一个市的老乡就更难得了）还有些是在我之前去的，就不表了。另外还有无锡分公司的老邬（我们尊称邬老爷子，很和善的人，非常照顾我们，后来我们离开无锡的时候还给我们带了无锡酱排骨，有时候加班晚，也陪着我们，早上给我们烧热水喝）客户甲方的老陈（甲方信息部的，由于项目是个佛家景区，老陈也有些超凡的感觉，身上的衣服总是一尘不染，有时候跟我们讲一些佛家的故事，我们也就是听个热闹，而他却很敬畏的讲给我们听，对我们也很好的）\n\n无锡出差的地方是景区，灵山胜境，票价好像很贵，老陈给我们办了几个工作人员的工牌，我们吃完饭或者下午工作厌烦的时候，就可以进去玩。第一次进去的时候刚好赶上九龙灌浴表演，喷出的水雾竟然出现了彩虹，从彩虹望大佛方向望去，更显的大佛庄严了，此佛极高，站在佛脚底下，我一米八的个子还不如一个脚趾头高，里面的景点还有好多个，也都模糊了，就不表了。还有个人不能不说，我们住的酒店离景区还有些远，7-10公里左右的样子吧，晚上下班无论多晚，我们都不怕回不去，因为有她，我们的杭阿姨[不知道姓写的对不，音译的]，杭阿姨告诉我们，无论多晚，你们只要下班要用车，给她打电话就好，她都会送我们回酒店。大冬天啊，这是什么精神，无锡对我的好感，杭阿姨的淳朴占一席。后来项目结束快要离开马山，杭阿姨在家做了很多地道的菜招待我们，她老公打了野味给我们，给我们送行，她老公也拿出了自家酿的米酒款待我们，那是我第一次喝自家酿的米酒，好烈，好冲，杭阿姨的热情就像这酒，就是这么猛烈却又让我们折服。感谢！\n\n有段时间不知道谁提议晚上去跑步，从酒店跑到太湖堤岸，距离没有概念，百度大概量了下，来回5公里多，结果那段时间，马山镇的街道上一到8点半就出现了几个外地的疯子，打打闹闹的在跑步。坚持跑了1个多月吧就搁浅了。\n\n那年的春节，是从无锡直接回去的。跟光哥先从无锡坐高铁去上海，在从上海飞回西安。上海，擦身而过，晚上在上海的街道上溜达，住的比较偏，街道很干净，晚上也不像深圳那样闹腾，也许是对比的对象不同，没看到川流不息的人群，也没看到只顾低头行路的年轻人。\n\n上海，比深圳有历史，深圳像什么呢，我感觉就是改革开放为中国经济快速发展而拼凑起来似得，这才30多年吧，一个渔村，想要什么历史想要什么底蕴想要什么文化呢？华强北，山寨的代名词，也许你逛过二线城市的赛格电脑城之类的地方，觉得已经很了不起了，那么多卖电脑的，我可以告诉你，华强北的壮观程度绝对可以让你瞠目，怎么形容呢，有次我去那边修手机，在肯德基的店里，一个中年妇女，背了一书包iPhone6的后盖，一个一个的擦拭，擦干净了就用一个一个塑料袋装好，后面的交易流程我们不清楚，也不知道这些壳流向了哪里，我就一形容而已。所以啊，一些不是从正规渠道买的iPhone啊，很可能就是这里组装起来的。深圳的创新程度有多高我不知道，但是创业程度真的很高，做软件的硬件的在这里不愁找不到工作的，大批的公司拔地而起，都打着要革命某一个传统行业的旗帜，冠冕堂皇的在这块地方滋生。深圳的青年人，上下班的路上，只顾走自己的路，要不就是低头玩手机，站在地铁上两脚之地，行尸走肉一样。站在留学生创业大厦上，高高的看着街上如蚂蚁般行走的人，想想自己，我何尝不是一只蚂蚁。\n\n当然我这太悲观了，深圳是中国经济发展不可缺少的一部分。就如我这第一家公司，让财务人员扔掉了算盘，革了财务行业的命。创造了企业的收入。也创造了税收，给国家做了贡献。如我这第一家的公司还有很多。略去不表。\n\n深圳抛去这些快节奏的和高的离谱的房价，其实是很适合生活的，毕竟是海边的城市，深南大道宝安大道的绿化程度很高。99.9%的时候没有雾霾，绿道到处都是，一辆自行车就够了，不用太紧张，轻轻的欣赏就好了。\n\n！！！！这思绪又跑到抒情上去了。继续流水账\n\n第一年的春节，过的有些紧张，因为没有买到初七票,到初十都没有票。在售票窗口，售票员告诉我，初五还有站票要不要，第一年工作的我傻不拉几的给买了。就这样，在初五晚上西安开往深圳的火车上，多了一个背着书包，拎了个马扎的小伙子，上车前我还想呢，不会有那么多人在 大初五的来挤火车吧，结果，真挤啊，30个小时啊，慢慢熬吧。从检票到挤上火车，衣服已经出汗湿了，这是我第二次坐火车去深圳。第一次是毕业入职，那时候是7月初，人不是很多，我买到了卧铺的票，而这次，这一对比，吐血了都。没办法，自己鼓励自己：还好，就30个小时，睡两觉再熬一白天就好。西安上车前买的小马扎，当天晚上就报废了，根本不经坐，完全是坑人的货。站票坐火车的都知道，火车上最讨厌就是“香烟瓜子火腿肠啤酒饮料矿泉水麻烦把腿收一下”了，这次我真是恨死这帮人了，哈哈。本来就在过道站着难受，还要给你让个道!大过年的，都不容易。当天晚上也不知道在哪里找了报纸还是啥东西，在中间的过道上铺开来，然后腿横着伸进到座位下面，躺在过道上，头枕书包靠在另一排的座位上，听着火车哐哐的声音往远方去了。虽然是冬天，车上还是有些热的。汗出了不少，记得上车前买了一瓶水，两个脉动，还有个烧鸡，呼呼哈哈。结果在火车上，一点点食欲都没有，只记得喝了大量的水。除了上火车时带的这三瓶，在火车上的这个香烟瓜子火腿肠上还买了好几瓶脉动，没买矿泉水，我想着还得补充些能量，不然抗不到下火车就悲剧了。喝了这么多水，奇怪的是，没上一次厕所。我想着这么多水都从汗孔里出去了啊。人还是很厉害啊。白天其实还好，第二天聊天时才知道，我伸腿的那桌也是富平的，我们白天就轮着坐，到了晚上，要休息的时候，我就自觉的继续了昨晚的姿势，因为确实很难受也不能去跟别人换着躺地上吧，哈哈。白天跟我换着坐的人叫冯凯，互换了手机号码，后来过年时都发一条拜年短信。谢谢你！\n\n第三天早上（初七凌晨5点）到达深圳的时候，还没有地铁，呼吸着南方海面吹来的温热的空气，有点点海的腥味。就像老家初春时候一场春雨，混合着干燥了一冬的浮尘，你既要喜欢这春雨的温润，又要享受这土的腥味。总之吧，与在火车上局促的环境对比起来，现在终于回到地面上的幸福就是这么简单。伸伸窝了30个小时腰，看着东方的天慢慢白了。初七，按说年还没有过完。又是一年的开始了。等到6点多，地铁口开门，进地铁的都是刚下火车的人，拖着疲惫的身躯，拉着或者背着行李，也都要开始为这一整年的生计打算了。\n\n回到住的地方，想想出了好几瓶水的汗量，不臭都难，与我合租的伙伴还没来，烧了热水洗了个澡，躺在床上就睡着了，脑袋里还是火车哐哐的声音，等起来都下午4、5点了，还是不想吃东西，仍是只喝水。果然，接下来的两三天，仍然没有食欲，有些轻微便血，尿也相当黄，等过了几天好些能吃东西的时候，第一次也就感觉是重生了。此后几年，哪怕飞机再贵，打死都不去挤火车了，除非是有卧铺。不过也又一次买了坐票在一个不是高峰期回去的。过年的时候其实这一路[西安到深圳的火车路]本身也没有啥可看的。13年开了高铁，把原本30个小时的路程缩短到10个小时。不过我现在不太喜欢高铁，太快！我说的太快啊，就是眼前的景色一晃就过去了，看到个景也就是个影子。那火车就不同了，远远的可以看到前面有一树花，你有足够的时间准备，有足够的时间送别。最主要的是，火车在上饶的时候，你可以下去买烤鸭腿吃，哈哈吃货本性尽显。不过前提是，要在舒适的火车环境里。像我上面说的那种，不要想了，太奢侈。\n\n这一路最好的时节应该是4月底，5月一整月吧，整个中国都是很舒服的季节，南方还没有热到冒汗，北方又刚刚过了初春的洗礼，所有的植物都在拼命的生长，各种花，各种叶子，拼了命的呼吸，北方也散了聚集一冬的雾霾，天也能达到深圳的蓝。反正就是吧，如果你这段时间有时间，那就买张卧铺票，带上水果和清爽的黄瓜(黄瓜是什么鬼，答:黄瓜是火车上的最爽口的食材)。无论是从南方到北方的那个城市，或者是从北方的哪个城市去南方，这个方案都是不错的选择。行一路，大江南北，一路春光，时间可以慢些，我也希望这火车不要太快，慢些最好。\n\n有时候我们就是走的太着急，忘了慢下来看看身上有没有落下的尘，轻轻佛去，继续前行。\n\n哎哟喂，骚年，又发......呃抒情了啊......\n\n上面讲了无锡出差时的村里人。回到大城市吧，再讲讲城市人。再回去时，部门里又来了几个新人，有个据说是被部门老大从客户甲方拉回来的，后来证实就是的，都结婚了。哈哈，我也都成了个老人了，其实还不能算作老人，因为部门里的老人们，除了口口叫我傻B，其他人都叫我小涛，所以啊，我借着这个小涛，享受了好几年部门里小辈的待遇，就是吧大家对我都很好，反正我最小，咋地吧！嘚瑟不？欠打不？\n\n先说说我师父吧，我们称作郑老师，我直接喊师傅，其实比我也就大一两岁吧，广东揭阳人，先前宫里招太监都不去这里招，为啥嘞，因为贵地的人把吃饭读作“驾崩”，皇上听到还不得吐一盆血啊。听同事们说，我还有个师哥，名字他们起先常说，后来说的少了，我就忘记了。6年多了吧，我一直都是师傅师傅喊，也不厌。师傅跟老肖一样，总是笑呵呵的。不像我，喜怒总挂在脸上，要不就是面无表情，很那接近的样子，还闷骚的要死。广东揭阳潮汕地区的人喜饮茶，师傅也不例外，每天早上上班前的第一件事，就是去洗杯子，泡茶。师傅的桌子上总是好几种茶，从无锡出差回来，特意给买了盏紫砂的茶壶。前面讲过了，EAS、BOS比较难搞，尤其是对刚毕业的人来说，那玩意就跟一团乱麻一样。启动个BOS要半个小时，启动下运行时环境要2、3分钟的样子，那时候有个调侃啊，就是点了启动EAS的时候，就去接个水啊上个厕所之类的，回来的时候差不多就好了，师傅对EAS和BOS那套东西玩的好溜，师傅比较聪明我比较笨，哈哈。但是师傅呢不嫌我笨，有时候同一个问题问到第三遍了，他就真烦了……哈哈。但是还是会告诉我怎么回事怎么解决云云，我个不长记性的家伙，也不知道记录下问题，现在想想，当时怎么那么懒，又笨又懒。哈哈。后来搬去跟师傅住在了一个城中村，住隔壁楼栋，这个村子住了我们部门好多同事，跟个部门根据地似得。起先的两年吧，师傅还是一个人，后来隐婚了，真的隐婚了，很突然的有了师娘，哈哈。自从有了师娘，师傅就很少出来跟我们活动了，师娘跟师傅是同一个地方的，由于住隔壁栋的原因。我是不是过去蹭饭，师傅师娘做的饭很好吃，是广东沿海地区特色的餐食风格，清淡却很有食材的原味，每次去我都吃到光盘子，我一点都不见外，哈哈。有直接煎的海鱼，还有广东人最喜欢煲的汤，还有次专门为我包了蒸饺，虽然吧整出来散了，不过真是我们三个，额不对，是四个，哈哈那个时候师娘已经是准妈妈了，这里再次恭喜师傅荣升爸比职称，哈哈。从师傅这里学会了煎鱼，有几次跟师傅去海鲜市场买食材，师傅常去的那家鱼档，后来我经常光顾，因为师傅常去，我也常去，没别的，就是因为信任我师傅，鱼档老板从来没坑过我，而且鱼也给我弄的很干净。因为老家深处内陆，小时候很少吃鱼。所以我很喜欢吃鱼，自从会做偷师学的煎海鱼之后，吃了个爽。\n\n师傅，后来很少联系了，不联系不代表忘记，有些记忆是忘不掉的，零售也永远不会忘记，这里的人都很好，对我好，让我个初涉世的毛头小子，感受到了大家庭的温暖。\n\n除过以上已经出现的同学们，喂现在开始点名了。\n\n成程哥，云南人，成程哥是个烟友，就是这么莫名其妙的认识，几根烟就可以很相熟，后来做了成程哥的几个项目，挣了些烟钱。另外成程哥也是个大厨，有次去了他那边，成程哥光着膀子给我们做水煮鱼还是什么来着，模糊了，那个假期我刚好在广州玩，成程哥给我打电话，在哪呢？能回来不？到了深圳直接从罗湖火车站过来哈！有饭吃我岂能推诿啊，我就屁颠屁颠的从广州回到了深圳，到了罗湖去了。其实成程哥我觉得一直都是个大哥一样的人，跟我有些像吧，但比我成熟的多。他也弹吉他，我是买了一把陪我寂寞的，到现在也是乱弹琴，成程哥已经会写弹唱了，一次我们在坪洲一个韩国烤肉的店里，点了两瓶真露，一人一瓶，这酒度数不高后劲挺大，喝着喝着聊着聊着不知不觉就晕了，两个人踉踉跄跄的，成程哥趁着酒劲抱着我那把吉他，就开始唱，唱的跟个流氓一样，哈哈。歌词我记住了两句:姑娘姑娘那个美啊，小伙小伙那个浪啊，云云。后来成程哥去澳洲待了一年左右，回来我们仍然联系。现在也少了。哦对了，成程哥也喊我师傅叫师傅，这么算下来我是你师哥啊。我这脑子，现在才反应过来......\n\n还有与我合租了半年多的老莫，也是广东人，眼神很深邃，很会做饭，我有好些菜都是跟他学的，此人极喜欢酱油，导致我后来做菜也都喜欢放酱油，广东人注重养生，比较清淡，反而这半年他被我带的口味重了些，我很喜欢吃广东的肠粉，他竟然在我住了1年多的村子里找到了地道的肠粉店，老板是广东人，只做早点，老头老太太两口子，只早上7点到10点之间出摊，肠粉是限量的，就那么三两桶米浆，卖完了就完了，老板娘的普通话不是很好，每次都用很奇怪的语调问我:要木要la(二声)jiu(三声)。其实在这店里吧，很能找到广东早茶的那种感觉，虽然很简陋，只有五六张桌子，老板家的茶很好喝，尤其是早上吃早点的时候，有甜甜的味道。肠粉很爽口，用老莫的话，就是很”滑”，好像是这个字吧，也模糊了。听着小摊对面大榕树上鸟的叫声，喝着清甜的茶，吃着爽口的肠粉，忽然觉得，深圳这座城还是挺美的。\n\n在深圳的时候，最喜欢的就是徒步了，只要不是城中村这种极其难治理的地方，主街道还是很干净的，不算有组织的那种徒步，我自己私下里走的，按我的话，已横穿了深圳，因为我对深圳的定义，就是罗湖火车站到机场，其他的地方都算郊区，因为我没去过，哈哈就这么任性。私下里的徒步分两次，第一次跟顺爷，我俩也不知道是谁最先提出来的，反正就是这么的臭味相投，一排即和，我们早上从白石洲开始走，先走到红树林，再沿着红树林往罗湖方向走，到了福田的时候，天就开始下雨了，俩傻B都没有伞，躲到福田某个立交桥下的桥洞里躲雨，我的手机还是安卓1.6系统的摩托罗拉里程碑，那时候已算是第一代智能手机了，也在这次雨中壮烈的暂时牺牲了(后来检查是屏幕进水了，自己在淘宝淘了块屏幕换上了)。雨停了，我们继续往罗湖走，在福田，我们俩已经累成了傻子，中午到饭点，我俩进了一家猪脚饭的店还是啥店来着，也模糊了。这时候我们已笑不出声了，相对而视，嘴角上扬，轻蔑的从喉咙里发出哼的一声，就代表我们笑过了，是对笑，俩傻逼，哈哈。吃完饭我们继续走，这时候腿估计已经麻木了，没有疼的感觉，只是觉得累，终于，在下午四点半左右的样子到达深圳罗湖口岸，于是就有了顺爷那张光脚、我跟个木鸡一样站在罗湖口岸门口的照片。罗湖口岸有地铁直达白石洲，这也是为啥选择徒步到罗湖口岸的原因。累成俩傻子。假期过后，又被同事们笑成俩傻子。不过，这次徒步，让我收获了我最喜欢的一张照片：扶桑花，长得那么傲人，又刚下过雨，展现出极强的生命力。第二次徒步我是自己走的，没叫顺爷，也没通知谁，就自己走。出发地仍然是白石洲，目标宝安国际机场[老机场]，这次的距离和去罗湖的距离差不多。但是是一个人了，出发时已经中午了，选了大冲地铁口的肯德基搞定了中午饭，满满的能量，预计12点的时候正式出发，沿深南大道上宝安大道，沿宝安大道直走就到机场了，就这么简单。这天的天是小阴天，有些风，很爽，走的出汗，风一吹，你自己体会下这种感觉。走到宝体的时候，由于鞋子的原因，脚上起了泡，幸亏我有准备，马上换上了包里带着换的一双新袜子，再在街道边上的商店买了双厚的棉垫子，舒服了些，水泡不在长大，踩了几公里之后竟然消失，也不知道是破了还是散了。走到宝安大道过了宝体的样子，其实脑袋已经开始放空了，开始注意宝安大道上的指路牌，机场10KM……开始骂自己傻，机场3.2KM……开始骂机场傻，建那么远，到了机场，下午16点19分，拍了张照。也真是没啥可看的，飞机起落也不是在宝安大道这边。绕道上天桥进机场东地铁站，腿已麻木。这次是个周末，没有像第一次那样是国庆，可以有好几天休息，这次惨了，第二天就要上班了，这两条腿哟，已经不是自己的了，从大冲地铁口走到公司，还有700米左右，是两条腿相互拖着，再加上一双手拽着走过的，从来没有觉得700米可以这么长。不用说，到了公司，又被同事们笑成傻子。可是傻的这两段记忆，已经钉在我的记忆里，对我来说，非常值得。后来参加了一次磨坊组织的深圳百公里徒步，只走了半程，虽然脑袋也放空了，但觉得太赶，大家只顾走路了，又是晚上，行至梧桐山山里时，志愿者一个一个的都是骗子，明明二签还有还有好几公里路，却在那边对我们喊：加油，快到了，拐了前面那个弯就到了！我们都大喊：骗子、骗子！！！然而心里却十分感激。到了梧桐山签到处，脚已经起水泡起的厉害，不能继续，就此结束吧。彼时凌晨4点，距离第一班公交发车还有2个小时。我们就捡了些红牛的箱子铺在地上躺在上面，望着还没落下的月亮和星辰，感受这空山的寂静。\n\n旅行是一场身体和思想都在路上的修行，眼睛看到的，未必是会深入脑海，但身体和眼睛同时感受到的，大多会留下来，成为一辈子的财富。\n\n我喜欢走到脑袋放空时的感觉。这时候我才能感觉到我是一个人而不是一只蚂蚁。\n\n额，扯的越来越多了，感觉要写不完了。零售就写到这里吧。接下来各位看官请随我走进第二个部门，BI(Business Intelligence)商业智能。不要被这牛哄哄的名字亮瞎，其实做的事情，远远挖掘不出啤酒和尿不湿的关系。说白了就是数字报表+好看的图表。\n\n先介绍下这个部门吧。入职的第一天，老戴[也是老大]领我到部部门，我坐在我的第一个办公位上，两个办公位的连接处放了一本公司画册，我就随手翻了翻。其中印象最深的就是乔昕明的介绍，胖胖的形态有些像高晓松[可百度搜索乔昕明第一个领英的照片]，2009年的时候他的扩展报表工具一举拿下了当年的一等奖。从此这个名字就在我的脑子里扎下了根。所以2013年零售部发生人事变动的时候，我有机会进入BI商业智能事业部(前身是扩展报表项目组)，于是我就放弃了可能会有N+1赔偿的裁员机会，进入了乔昕明领导下的BI事业部。有两方面原因：一个就是因为老乔的光环，一个是因为被BI这个名词给忽悠了。这里有必要介绍下老乔，资深的软件架构+资深的软件研发，总之就是神级的人物，我的印象了里，四楼中间的回忆室旁边，总能看到老乔的身影，一副森海塞尔的头戴式大耳机，一部苹果笔记本，还有些凌乱的稿纸，就是老乔的办公位了。其实老乔有办公位，就在BI部门的领导位上，可老乔很少过去，所以在BI部看来，老乔自从BI事业部成立空降了个产品经理之后，貌似已经是不再关心这个BI部了。也许他从一开始就知道新成立这个部门就是瞎胡闹吧。也有可能因为人，不表，不做长舌妇。\n\nBI事业部分离两个部门，一个是做BI分析解决方案，其实到底就完成了财务分析的方案。我就属于这个部门，做BI工具，具体是啥呢，就是把开源的kettle数据分析工具，包装成BI自己的产品，说白了就是换壳。这个组里，认识了大哥[*忠文，湖北土家族人，所以我也叫他土人。汽车4S事业部过来的，跟我一样的情况过来的。一脸的痘痘，夏天老穿的跟个归国华侨似得，冬天却又西装革履的，就差一条领带了.技术流，后来去了康拓普玩大数据]，宝哥[bruce，江苏人？模糊了，此部门的元老，研究僧毕业，瘦小精悍，技术好厉害，后来去了平安，让你给我要蔡学镛的签名都没要到]，阿甘[江西宜春人，资深测试，人不错，一脸胡髭，金蝶足球队的队长，会踢球的人缘一般都不会差，金蝶的员工我感觉他能认识一半吧，哈哈夸张了]，小龙[东北银，搞过扩展报表，后来搞前端，把报表的那坨东西又用js实现了一遍，BI内部后来发生组织变动的时候，有幸搭档做过一段时间portal，也是技术流的，后来去了腾讯].其实经常一起玩的是大哥，我们俩都是肉食动物，每次去找他玩，都是吃肉，时而喝点小酒。大哥是个无所不知的神人。你跟他聊什么都可以，他大学的专业是雷达与天线，厉害了我的哥。他大学在新疆上的，是个吃过手抓饭的，我们去的比较多的是他那边的巴依老爷，吃羊肉的地方。我是个饭桶，他是个吃货。我喜欢听他聊天，虽然有时候他天马行空的讲一些我听不懂的东西，他跟别人介绍自己的时候总是喜欢用明朝的大将李文忠开头。虽然大部分的人对李文忠是谁也不知道......他家里有茶树，清明谷雨过后，他爸会给他寄一些自己手工炒制的茶叶，我就沾个光，老去他那边蹭茶叶喝。这货喜欢喝啤酒，阳台上满满当当上百个啤酒瓶子。怪不得有啤酒肚。\n\n哦~说到大哥这些啤酒瓶我想起来了一件事，哈哈，顺便提一下，工作第二年的时候，喝可乐上瘾了，不要问我是怎么上瘾的，我也不知道。而且只喝香草口味的听装可乐，每次下班之后就去湾畔百货买4听，有时候打折我就买八听，那时候我没敢在公司喝，因为老戴也喝，我怕他跟我抢，哈哈。其实不是了，因为那时候有个段子说可乐杀精，问度娘，是谬论，当时做这个实验的是把精子直接泡在了可乐里，你这不是傻逼吗？你把青蛙腿打断了然后大喊吓青蛙，然后说青蛙没有耳朵听不到，因为对它大喊它没跳走。这都是啥实验环境啊？不过我也确实不敢再这样喝了，喝出病就麻烦了，而且接下来一年体检老检出高血压，是不是跟这个有关就无从可知了。半年下来，可乐的铝罐也攒了几百个。当时我住的地方楼下是个面馆，老板跟我是老乡，我去他那边吃饭，不为别的，就为讲几句陕西话，其实老板做的东西啊，确实不咋好吃，哈哈。我叫他哥，他跟他媳妇，还有两个儿子，一个已经上幼儿园，一个还在嗷嗷吃奶，他的老父亲也在那边，大叔抽的是旱烟。问题是他这个小儿子吧，放在推车里，就放在吃饭 的厅里，进进出出的人，孩子就老哭，一哭吧，他爷爷就去哄，他爷爷又是旱烟不离手，那个店朝北，本身就有些昏暗，再加上这样的环境，他家的生意也就不怎么样的感觉，反正我感觉就是有人去也是打包就走了。有次我去他那边吃饭，跟他聊天，他说他的大儿子捡瓶子自己挣钱花，哈哈，我就说我那里有好多的易拉罐，吃完饭跟我上去取去，他家的大儿子比较怕生，虽然我经常去跟他爸聊的也还不错，可这孩子挺羞涩的，也不跟我说句话，起先拿了个比较大的那种超市里的大塑料袋，我说太小了，哈哈。他爸爸又给他找了个好大的蛇皮袋子，我说差不多了便屁颠屁颠的跟我上楼去了，问题是等到上楼之后他看到这一堆的易拉罐也没有表现出很开心，还是羞羞涩涩的，我帮他装进袋子里，试着拎了下，有些小沉，就帮他一起提下去了，这些易拉罐估计可以换一个小玩具吧。小伙子，羞涩如我小时候啊，家里来人就躲进房间不出来啊。哈哈。后来我搬走了，还专门回去他那边吃了两次饭，聊聊天。\n\n我去......这段跑飞的严重了，回到BI吧。BI事业部的日常工作没有啥可讲的，能记住的还是出差。去的不远，在广东云浮。领导开车拉着我们四个过去的，忘记介绍这个领导了，叫学明，技术出身，对我们都很好，从开发和需求的两个角度看问题，不像有些领导，空降来的，天上掉落凡间的天屎吗？出差一行人：宝哥[坚强的技术后盾]、领导和阿甘[主要培训客户软件使用]、我[酱油]。学明和阿甘喜欢足球，那天晚上吃过晚饭，回到酒店，说有球赛，领导买了几瓶加几罐啤酒，买了酒鬼花生，瓜子。然后就开始看球了，我跟宝哥不怎么感兴趣，陪他们看，其实就是瞎看边聊天，出差的项目是温氏，几个农民合资起家的，整个县城估计都是仗着温氏吧，温氏总部的楼好气派，据说比他们县政府的还要气派，说的糙点：养鸡能养成这样，真是牛逼。临走时大家去当地买了土鸡蛋，我不记得我买了没，模糊了。\n\n写不出文字了，思绪已经被散乱的记忆打乱。这篇回忆录写了四年了，不想往下写了，或者说现在不想写了吧。接下来的两年有些起落，要写的东西太多，与前面这四年对比太强烈，风格也要完全不一样，再构思一下吧。先就此止笔。\n\n标题也不改了，也许空白几年也好。\n\n回忆越忆越漫长，如人生路，一个往前一个向后。毕业后的工作路是个极长期且没有毕业季的历程。\n","slug":"life/2017-01-24-5years","published":1,"updated":"2018-05-15T07:42:34.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8f6000n2wh54fdpy98h","content":"<p>最近一直想写，都不知道怎么下笔，闲下来的时间总是在懒惰中挥霍，或是沉浸在幸福快乐中流散。五年真的是白驹过隙，但发生的事情比上一个五年多太多。</p>\n<p>上一个五年，做的影响一辈子的事情，确是高考与专业选报，现在看来，也不后悔，对路，也符合我的性格，但是也封闭了我的性格，不知从何时开始，内心开始对这个很小的世界产生了依赖，不愿意改变，很怕变化之后会怎样，畏首畏尾的。毕业找工作时也碰到了坎，四月份才找到，对于我这抓住了毕业季尾巴的人来说，实在太幸运了。</p>\n<p>大学四年，自律意识太差了，现在回想起来，大学是被荒废了的，逃课挂科家常便饭，只醉心于自己喜欢的事情，想到了那年收到学校警示通知（挂科太多），与家人过年都是在阴云笼罩的气氛中度过，让父母操碎了心，现在这些事情想想，真是太不应该，学生的工作，就是学习好自己的课程，这是本份，任何借口都是狡辩。如果没有比尔盖茨的本事，就老老实实的读书，不读书这社会上你就是傻子。我就是个傻子，现在除了掌握皮毛不入精髓的点点计算机知识，我就剩下一具肉身。真是往事不堪回首。这是工作前的五年，就这样写吧，反正也不能反悔了，自己买单吧！</p>\n<p>现在开始最近这五年。前方无高能，流水帐记叙。</p>\n<p>毕业之后来到了一家大公司，以一名很多人不懂以为是修电脑的，一线城市称为软件工程师，自嘲为码农程序猿做着一份刚好能自娱自乐填饱肚子的工作–程序员，公司制度完善，有师傅带，大家对我很不错，很和谐，无奈期间换了部门，后面详说吧，继而又换了两家公司，现在还是码农，哈哈，做一辈子码农也不错，至少可以吹着空调玩电脑。</p>\n<p>总在想怎么去写，现在想想，就随便写吧，想到啥写啥，顺便吐吐槽。如果下文中您在看的时候感觉到是在写你，请不要觉得是你，因为我会加花。</p>\n<p>2010年7月/2014年9月，这个时期跨度很大，记忆也零碎了，那就从大事件聊吧。</p>\n<p>依然记得那天挎着个硕大的袋子，拖着大学时候的被褥，被保安大哥拦住：喂，农民工去对面工地（预警，此处加花，下文再加花处，恕不提醒），待俺拿出有红戳戳的入职通知，保安大哥才引我进入公司餐厅的休息，好吧，这只是开始好伐，我当时去到公司的时间略早于上班时间，好吧，每个进公司的同事进门都跟看猴子一样看我，我就这么在第一家公司曝光了。这一天是步入社会的日子，恐怕要像烙印一样记一辈子吧，2010年7月9日！</p>\n<p>初入职场，楞头青，突然来到高大上的软件公司，还是挺兴奋的，从接到offer到报到，足足高兴了三个月，然而蜜月期啊侬晓得伐？高大上的BOS和EAS（不懂没关系，我也不懂，以下文章关于技术的词语不必懂，看新鲜即可）足足让我折腾了两个月才入门，这感觉太痛苦了，简直睡觉脑子里都是那个蓝色风格的EAS系统，这里感谢我那耐心的如禅师般的师傅，同一个问题问三遍的我都烦了，你还不烦，你这样耐心的性格是谁教的，已如神佛，我已献出了我的膝盖，师傅，感谢你！初入江湖有你，吾之大幸么么哒！</p>\n<p>好了，会写代码了，干活咯！来来来，小涛来，老戴喊我，分你个基础数据先练练手，三天搞得定吧？好嗒，领导！然后就屁颠屁颠的去回到座位了，呃，是个什么基础数据来着，哎呀，需求文档怎么找不到了，哎呀呀，这环境怎么启动不了了，哎呀呀呀，一天过去了，今天的贡献值zero，然已累觉不爱，加班吧，先把实体建了界面画了吧，至少得晚上能有个理由睡觉，不然失眠了怎么办！吥呤吥呤搞定打卡下班走人，哟十点多了，哟还有三十块钱餐补，想想还有些小激动呢！</p>\n<p>回到驻地，或称作为住的地方，远不能用家这个字。洗澡先，这里补充下，夏天在这个南方海岸线上以蚯蚓状蜿蜒的城市，来桑拿啊，免费的，不洗澡你就变成蚯蚓了，粘死了！我喜欢这里的冬天，不热不出汗不洗澡，积攒泥灰修佛。哈哈哈，啊~，跑题了，赶紧睡觉都快十一点了，呃，要不玩会QQ，不玩不要紧，一看时间吓一跳啊，十二点了，睡吧睡吧。接下来的八个小时无意识之后，洗洗还是红色的眼睛，莫名其妙睡着了，然后莫名其妙的被闹钟吵醒，然后走路去上班，虽然只有一两站偶尔也打个的挤个地铁，然后如此循环。后来呢，弄了个二手的自行车，丁丁当当成了个伪骑行族，真实是个伪的，因为自行车的变速简直是个渣渣，还有那个铃铛，真是用的时候才知道是个摆设，这是后话，自行车有传奇，各位看官接下文分解。</p>\n<p>这样也还好，刚开始的时候都是很充实的过每一天，至少每天都能学到点东西，但是大学时候的种种劣习也逐渐暴露出来了，作息以及饮食的不规律，熬夜，不记笔记或者说是不记便签[这时候才知道好记性不如烂笔头是什么意思]，大学我承认时间真是很多，一些学科老师教的东西确实对工作帮助很少，但是现在想想，其实这些培养的并不是你课本上学到了什么，实际工作要用到的，是你怎么去学的方法，大学应该培养一种良好的生活以及学习习惯，这个对工作帮助真得很大。觉悟吧，骚年！！！</p>\n<p>在这家公司吧，其实算折腾了一个来回，这里用A部门和B部门来代替，入职的是A部门，也是在这里变的有点油条气，成了第一家公司的油子，因为是个传统行业的ERP研发，所以刚开始对这些高大上的ERP名词都一知半解的，什么BOM啊，移动加权啊，货位啊，都是在那帮需求的带领下，慢慢了解，对程序员来说，这些名词其实对编程影响不大，有人已经帮你写好了计算公式，你只要按公式垒代码就行，成体系的公司就是这样，所有人的分工是很明确的，你就写好你的代码就行，这就是问题，程序员被局限了，视野被封闭在了逻辑代码上，对于业务逻辑以及为什么这样的业务逻辑一知半解，对产品提不出建设性建议，老都是按需求文档，不好玩，太呆板。其实这时候我也还是这样子做的，一切听需求按文档，这样晃晃忽忽一年，有个机会可以去客户现场出差咯，对于刚参加工作的小年轻，出差显得高大上，跟部门领导说了下，领导,我想出差，哈哈。领导笑呵呵的看着我，哟，年轻人，不错嘛，有魄力，去吧，就这样，第一次被一个测试姐姐带着坐灰机，飞呀飞，从深圳飞到了上海，哎呀，上海哟，一线大城市哦，不过我们去的是无锡，一个没有锡的地方。无锡确实是个好地方，生活环境好，工作压力小，这个在我去的那年【2011-2012】真实的感受，早上9点半上班，晚上5点下班，人们生活在太湖边，没事就去划划船啦，吃吃湖鲜啦。哟，这段好乱，整理下思绪，就像跑飞了的代码，连系统都找不到它。那就另起一段。</p>\n<p>这段讲无锡出差的那段经历，因为有先行部队先到了，我们属于第三批到的，所以刚去的那天，我跟那个测试的美女姐姐一起，拉着大包小箱飞机转高铁，再转坐出租，来到这个接下来要待多半年的地方-无锡马山灵山，大佛保佑，我们这路行程很顺利，到了目的地的时候，已经跟我现在写这段文字一样的时刻了，夕阳已经泛出了红，夜幕也静悄悄的在这块佛光护佑的圣地拉开了帷幕。鸟儿偶尔悄悄的叫两句，不过已没有中午的那么叽叽喳喳，村子里的狗，听到人声的时候也懒洋洋的吠两声，那时已入冬，在太湖边上这座小镇，还是很冷的，在景区门口等了几分钟，我们那熟悉的小伙伴出现在了我们面前，这才感觉到，哦，原来这里也有我们认识的人，刚产生的点点落寞就散去了，经过一片停车场，我们到了我们接下来这半年要战斗的地方，一个十几平方两排办公桌的地方，第一拨和第二拨人都在，见面时候的欢呼，调侃，哈哈，总之其乐融融赶走了很多工作带来的压抑，领导这时候发话，走，吃饭，哈哈，这个以后就是晚上下班的号令了。接风洗尘，自然离不开酒，这里的酒，是黄酒，我知道的品牌也是那天喝的叫惠泉，好不好喝不知道，我不是会喝酒的人，但是温热的酒冒着热气，加上大家的欢笑，足以驱走异乡客独有的无归属感。</p>\n<p>工作上的事情吧，跟在公司是一样的，只是去客户现场，表明我们是重视客户的，我们这拨人就是专门来做这个项目的，这样客户也很重视我们，那边的人对我们很不错，跟他们一样吃的他们的食堂，说实话，这食堂绝对比下馆子要好吃一百倍，而且很便宜[客户给我们充了张卡，所以我们属于白吃]，至少我现在想起来，还是觉得是美味。无锡人喜欢吃甜，但是也不会腻，哪种红皮的红烧肉，我一次能吃好几块，酱排骨，我也能吃好多，哈哈，现在才分清了吃货和饭桶的区别，我属于饭桶。</p>\n<p>这两天有点忙，耽搁了写下去，继续吧，今天心情不好，从上面的思路上也接不下来了，还是以时间为主线想到那里写那里吧。</p>\n<p>（此处距离上面的文字已经一年多了）不好意思，真是断了，断了一年才接着继续写，这一年发生了太多事，后面细聊。这篇文章的标题原本是5 years的，按现在的时间也要变成6 years了。 无锡的故事还没讲完，现在继续~<br>额，不太好接上，若说到饭桶了，那还是先讲讲吃吧。我确实是个吃货，刚开始工作的前几年，我还不怎么做饭，可到了后来，就想着做点了，也是因为交了女朋友的缘故吧，前几年，自己做的简单，本身我也不挑食，挂面+韭苔炒鸡蛋+老干妈+生蒜。哈哈，吃生蒜估计是北方面食动物的专属吧，南方的小伙伴看哭了。老干妈确实是个好东西，百搭，可以直接用勺子挖着吃。想起来大学的时候有个贵州的同学，好像是他妈妈是医生还是怎么回事来着，给老干妈陶华碧看过病，现在想想，好厉害哦，我也可以跟别人吹，我同学的妈妈给老干妈看过病[笑cry]。额，又跑飞了，刚到深圳的时候，买了个不锈钢的碗，其实可以算作盆，因为确实挺大的，一般我是先炒韭菜鸡蛋，炒出来就放在这个盆里，那时候的韭菜鸡蛋不知道为啥老炒的干巴巴的，后来过了好几年才发现，油放少了…… 然后不洗锅，直接接凉水，煮开后放挂面，不知何时记住了老家时煮面的诀窍：水开三次面就好了，就是挂面在水里煮的时候，水再次煮开了，加半碗凉水进去，然后再煮开，如此煮开三次面就好了。反正也不知道是不是真的熟了，用笊篱捞出来过一次凉水，就捞到盆里盖在韭菜炒鸡蛋上，然后放盐倒醋，剥蒜取老干妈。哦，这里由于思绪混乱，忘记告知生活环境了，这是我刚到深圳的第一家出租屋，在世界之窗对面的城中村-白石洲，合租的是中兴公司眯眯眼的一个小伙伴，名字已经模糊了。住在4楼还是5楼来着也模糊了。平时我们交流的比较少，他跟同学合住在主卧，我自己在另一间。如此间尺平方，生活半年。</p>\n<p>思绪回到无锡。太湖的边上，秋天去的时候有点凉，冬天我感觉是北方的那种冷，不像深圳的那种湿冷，秋冬的无锡，雾比较多。去无锡之前，我花了1500大洋在华强北买了台富士的相机，一到周末我就挎着相机，在马山镇[我们的驻地]的周遭转，看到好玩的新鲜的就拍下来。在酒店的后面，有条河，名字不知道，那是我常去的地方，有鱼，我没有渔具也不会钓鱼，就站在小桥上，远远的看当地的大爷大叔在那边钓，清晨时，河上起雾，我站在桥上，也许也是个不错的画面，也许也有卞之琳&lt;&lt;断章&gt;&gt;里所描绘的那样：你在桥上看风景，看风景人在楼上看你，明月装饰了你的窗子，你装饰了别人的梦。可是那时真有别人的梦吗？沿着河走，可以走很远，我也没有去探索过河的源头在哪里，只知道，对于一个外乡人来说，这样的风景，多了便就成了乡愁。</p>\n<p>路上的行人都是本地人，无锡讲吴语[百度的，我也不清楚马山的是不是吴语],我虽不不会讲他们的话，但是愿意听他们的方言，我是个对各地方言很感兴趣的人，虽然不会说，但听得多了，也能听懂意思了。江苏分苏北苏南，无锡是苏南，鱼米之乡。太湖有三白，白鱼、白虾、银鱼，好像吃的最多的就是白鱼银鱼炒蛋吧，银鱼汤之类的吧，也许是白虾比较贵，只吃过一次，很经典的一次。[以下有些高能，慎入]不记得是无锡分公司还是甲方请客了，叫醉虾。是用当地的黄酒，然后把洗干净的白虾活活的扔进酒里。是不是感觉有些残忍呢，不过真的好吃啊，有些顽强的虾在酒中还在跳，捞出来放在嘴里的时候还是活的，当你咬下去的时候，先是酒味充斥口腔，来个温润的刺激，然后就是活白虾嫩肉的爽口了。 同行的小燕子貌似没吃吧。可惜了。</p>\n<p>本是出差，却只记得吃吃喝喝，哈哈，其实工作吧，就是重复，没有乐趣的出差，一周就会腻。这段献给口口，也不知道你能不能看到。口口姓吕，比我大，大屁股，哈哈，出差无锡的领队，我们叫他村长。河北人，对！就是老白干的故乡-衡水那旮沓的。刚入职的时候吧，也许是不熟，对这货挺敬畏的，问需求的时候也是战战兢兢地。因为他有过硬的行业经验，对零售行业门清。专业知识过硬。这些对这篇流水账来说都是次要的，主要是这人，极够意思。我们这些小村民，就是跟着村长有肉吃。在客户现场，他也能独当一面，抗住客户压来的不合理需求，真是贤惠的村长啊。重点是长得还帅，真是没天理了。后来部门的一次变动之后，我们俩又一起进了BI商业智能部，然后我们的这位村长就明显感觉入了坑了，也可以说是英雄无用武之地吧，貌似记得还被分去写SQL是吧，真是<em>**</em>(脏话)。之后他也就离职了，去了能让他发光发热的地方。口口人缘及其不错，反正就是吧，对人好，对所有人，没脾气，没架子，能跟我们这帮小孩子打成一片，也能跟一帮老人谦卑有加，总之吧，就是这么一个能让你五体投地的人。</p>\n<p>再讲讲村里人吧，在无锡的时候，我们是在马山镇，有顺爷(专业测试能力极强，能从测试的角度猜测出你代码哪里写的有问题NND,没见过这么牛的测试，后来去了北京，离家近，河北人)，小磊子(是无锡项目组先锋部队搭环境的，这环境一搭就是一年多啊，酒店我们住在一起，有段时间为了减肥从酒店走到项目现场，后来好像也没瘦)，村支书(有村长必有支书啊，我们的精神领袖，很精干的老头子，有丰富的行业经验，后来听说定居就是去了无锡，确实无锡是个好地方，适合养老)，老肖（广西人，人总是笑呵呵的，弥勒佛的样子，哈哈）军（精干的小伙子，第一批的去的，技术比较厉害，后来去了阿里）广广(无锡部负责人这么叫的，本着不曝光真实姓名的原则，沿用。广东人，一丢丢辣都不能吃，仙风道骨，瘦到风可以吹起来)，小燕子(成天跟一帮男人混，都快被带坏了，都是口口带的，哈哈。有次项目现场大门的栅栏门关住了，也跟我们一起翻门，姑娘，敬你是条汉子。珍重)，姗姗姐（美女一枚，带着我第一次坐飞机，我像跟着个大姐姐似得，当时测试任务紧，去支援了个把月就回总部了）光哥（还是老乡叻，在深圳这个地方本来遇到陕西老乡就不经常，能在同一个部门遇到同一个市的老乡就更难得了）还有些是在我之前去的，就不表了。另外还有无锡分公司的老邬（我们尊称邬老爷子，很和善的人，非常照顾我们，后来我们离开无锡的时候还给我们带了无锡酱排骨，有时候加班晚，也陪着我们，早上给我们烧热水喝）客户甲方的老陈（甲方信息部的，由于项目是个佛家景区，老陈也有些超凡的感觉，身上的衣服总是一尘不染，有时候跟我们讲一些佛家的故事，我们也就是听个热闹，而他却很敬畏的讲给我们听，对我们也很好的）</p>\n<p>无锡出差的地方是景区，灵山胜境，票价好像很贵，老陈给我们办了几个工作人员的工牌，我们吃完饭或者下午工作厌烦的时候，就可以进去玩。第一次进去的时候刚好赶上九龙灌浴表演，喷出的水雾竟然出现了彩虹，从彩虹望大佛方向望去，更显的大佛庄严了，此佛极高，站在佛脚底下，我一米八的个子还不如一个脚趾头高，里面的景点还有好多个，也都模糊了，就不表了。还有个人不能不说，我们住的酒店离景区还有些远，7-10公里左右的样子吧，晚上下班无论多晚，我们都不怕回不去，因为有她，我们的杭阿姨[不知道姓写的对不，音译的]，杭阿姨告诉我们，无论多晚，你们只要下班要用车，给她打电话就好，她都会送我们回酒店。大冬天啊，这是什么精神，无锡对我的好感，杭阿姨的淳朴占一席。后来项目结束快要离开马山，杭阿姨在家做了很多地道的菜招待我们，她老公打了野味给我们，给我们送行，她老公也拿出了自家酿的米酒款待我们，那是我第一次喝自家酿的米酒，好烈，好冲，杭阿姨的热情就像这酒，就是这么猛烈却又让我们折服。感谢！</p>\n<p>有段时间不知道谁提议晚上去跑步，从酒店跑到太湖堤岸，距离没有概念，百度大概量了下，来回5公里多，结果那段时间，马山镇的街道上一到8点半就出现了几个外地的疯子，打打闹闹的在跑步。坚持跑了1个多月吧就搁浅了。</p>\n<p>那年的春节，是从无锡直接回去的。跟光哥先从无锡坐高铁去上海，在从上海飞回西安。上海，擦身而过，晚上在上海的街道上溜达，住的比较偏，街道很干净，晚上也不像深圳那样闹腾，也许是对比的对象不同，没看到川流不息的人群，也没看到只顾低头行路的年轻人。</p>\n<p>上海，比深圳有历史，深圳像什么呢，我感觉就是改革开放为中国经济快速发展而拼凑起来似得，这才30多年吧，一个渔村，想要什么历史想要什么底蕴想要什么文化呢？华强北，山寨的代名词，也许你逛过二线城市的赛格电脑城之类的地方，觉得已经很了不起了，那么多卖电脑的，我可以告诉你，华强北的壮观程度绝对可以让你瞠目，怎么形容呢，有次我去那边修手机，在肯德基的店里，一个中年妇女，背了一书包iPhone6的后盖，一个一个的擦拭，擦干净了就用一个一个塑料袋装好，后面的交易流程我们不清楚，也不知道这些壳流向了哪里，我就一形容而已。所以啊，一些不是从正规渠道买的iPhone啊，很可能就是这里组装起来的。深圳的创新程度有多高我不知道，但是创业程度真的很高，做软件的硬件的在这里不愁找不到工作的，大批的公司拔地而起，都打着要革命某一个传统行业的旗帜，冠冕堂皇的在这块地方滋生。深圳的青年人，上下班的路上，只顾走自己的路，要不就是低头玩手机，站在地铁上两脚之地，行尸走肉一样。站在留学生创业大厦上，高高的看着街上如蚂蚁般行走的人，想想自己，我何尝不是一只蚂蚁。</p>\n<p>当然我这太悲观了，深圳是中国经济发展不可缺少的一部分。就如我这第一家公司，让财务人员扔掉了算盘，革了财务行业的命。创造了企业的收入。也创造了税收，给国家做了贡献。如我这第一家的公司还有很多。略去不表。</p>\n<p>深圳抛去这些快节奏的和高的离谱的房价，其实是很适合生活的，毕竟是海边的城市，深南大道宝安大道的绿化程度很高。99.9%的时候没有雾霾，绿道到处都是，一辆自行车就够了，不用太紧张，轻轻的欣赏就好了。</p>\n<p>！！！！这思绪又跑到抒情上去了。继续流水账</p>\n<p>第一年的春节，过的有些紧张，因为没有买到初七票,到初十都没有票。在售票窗口，售票员告诉我，初五还有站票要不要，第一年工作的我傻不拉几的给买了。就这样，在初五晚上西安开往深圳的火车上，多了一个背着书包，拎了个马扎的小伙子，上车前我还想呢，不会有那么多人在 大初五的来挤火车吧，结果，真挤啊，30个小时啊，慢慢熬吧。从检票到挤上火车，衣服已经出汗湿了，这是我第二次坐火车去深圳。第一次是毕业入职，那时候是7月初，人不是很多，我买到了卧铺的票，而这次，这一对比，吐血了都。没办法，自己鼓励自己：还好，就30个小时，睡两觉再熬一白天就好。西安上车前买的小马扎，当天晚上就报废了，根本不经坐，完全是坑人的货。站票坐火车的都知道，火车上最讨厌就是“香烟瓜子火腿肠啤酒饮料矿泉水麻烦把腿收一下”了，这次我真是恨死这帮人了，哈哈。本来就在过道站着难受，还要给你让个道!大过年的，都不容易。当天晚上也不知道在哪里找了报纸还是啥东西，在中间的过道上铺开来，然后腿横着伸进到座位下面，躺在过道上，头枕书包靠在另一排的座位上，听着火车哐哐的声音往远方去了。虽然是冬天，车上还是有些热的。汗出了不少，记得上车前买了一瓶水，两个脉动，还有个烧鸡，呼呼哈哈。结果在火车上，一点点食欲都没有，只记得喝了大量的水。除了上火车时带的这三瓶，在火车上的这个香烟瓜子火腿肠上还买了好几瓶脉动，没买矿泉水，我想着还得补充些能量，不然抗不到下火车就悲剧了。喝了这么多水，奇怪的是，没上一次厕所。我想着这么多水都从汗孔里出去了啊。人还是很厉害啊。白天其实还好，第二天聊天时才知道，我伸腿的那桌也是富平的，我们白天就轮着坐，到了晚上，要休息的时候，我就自觉的继续了昨晚的姿势，因为确实很难受也不能去跟别人换着躺地上吧，哈哈。白天跟我换着坐的人叫冯凯，互换了手机号码，后来过年时都发一条拜年短信。谢谢你！</p>\n<p>第三天早上（初七凌晨5点）到达深圳的时候，还没有地铁，呼吸着南方海面吹来的温热的空气，有点点海的腥味。就像老家初春时候一场春雨，混合着干燥了一冬的浮尘，你既要喜欢这春雨的温润，又要享受这土的腥味。总之吧，与在火车上局促的环境对比起来，现在终于回到地面上的幸福就是这么简单。伸伸窝了30个小时腰，看着东方的天慢慢白了。初七，按说年还没有过完。又是一年的开始了。等到6点多，地铁口开门，进地铁的都是刚下火车的人，拖着疲惫的身躯，拉着或者背着行李，也都要开始为这一整年的生计打算了。</p>\n<p>回到住的地方，想想出了好几瓶水的汗量，不臭都难，与我合租的伙伴还没来，烧了热水洗了个澡，躺在床上就睡着了，脑袋里还是火车哐哐的声音，等起来都下午4、5点了，还是不想吃东西，仍是只喝水。果然，接下来的两三天，仍然没有食欲，有些轻微便血，尿也相当黄，等过了几天好些能吃东西的时候，第一次也就感觉是重生了。此后几年，哪怕飞机再贵，打死都不去挤火车了，除非是有卧铺。不过也又一次买了坐票在一个不是高峰期回去的。过年的时候其实这一路[西安到深圳的火车路]本身也没有啥可看的。13年开了高铁，把原本30个小时的路程缩短到10个小时。不过我现在不太喜欢高铁，太快！我说的太快啊，就是眼前的景色一晃就过去了，看到个景也就是个影子。那火车就不同了，远远的可以看到前面有一树花，你有足够的时间准备，有足够的时间送别。最主要的是，火车在上饶的时候，你可以下去买烤鸭腿吃，哈哈吃货本性尽显。不过前提是，要在舒适的火车环境里。像我上面说的那种，不要想了，太奢侈。</p>\n<p>这一路最好的时节应该是4月底，5月一整月吧，整个中国都是很舒服的季节，南方还没有热到冒汗，北方又刚刚过了初春的洗礼，所有的植物都在拼命的生长，各种花，各种叶子，拼了命的呼吸，北方也散了聚集一冬的雾霾，天也能达到深圳的蓝。反正就是吧，如果你这段时间有时间，那就买张卧铺票，带上水果和清爽的黄瓜(黄瓜是什么鬼，答:黄瓜是火车上的最爽口的食材)。无论是从南方到北方的那个城市，或者是从北方的哪个城市去南方，这个方案都是不错的选择。行一路，大江南北，一路春光，时间可以慢些，我也希望这火车不要太快，慢些最好。</p>\n<p>有时候我们就是走的太着急，忘了慢下来看看身上有没有落下的尘，轻轻佛去，继续前行。</p>\n<p>哎哟喂，骚年，又发……呃抒情了啊……</p>\n<p>上面讲了无锡出差时的村里人。回到大城市吧，再讲讲城市人。再回去时，部门里又来了几个新人，有个据说是被部门老大从客户甲方拉回来的，后来证实就是的，都结婚了。哈哈，我也都成了个老人了，其实还不能算作老人，因为部门里的老人们，除了口口叫我傻B，其他人都叫我小涛，所以啊，我借着这个小涛，享受了好几年部门里小辈的待遇，就是吧大家对我都很好，反正我最小，咋地吧！嘚瑟不？欠打不？</p>\n<p>先说说我师父吧，我们称作郑老师，我直接喊师傅，其实比我也就大一两岁吧，广东揭阳人，先前宫里招太监都不去这里招，为啥嘞，因为贵地的人把吃饭读作“驾崩”，皇上听到还不得吐一盆血啊。听同事们说，我还有个师哥，名字他们起先常说，后来说的少了，我就忘记了。6年多了吧，我一直都是师傅师傅喊，也不厌。师傅跟老肖一样，总是笑呵呵的。不像我，喜怒总挂在脸上，要不就是面无表情，很那接近的样子，还闷骚的要死。广东揭阳潮汕地区的人喜饮茶，师傅也不例外，每天早上上班前的第一件事，就是去洗杯子，泡茶。师傅的桌子上总是好几种茶，从无锡出差回来，特意给买了盏紫砂的茶壶。前面讲过了，EAS、BOS比较难搞，尤其是对刚毕业的人来说，那玩意就跟一团乱麻一样。启动个BOS要半个小时，启动下运行时环境要2、3分钟的样子，那时候有个调侃啊，就是点了启动EAS的时候，就去接个水啊上个厕所之类的，回来的时候差不多就好了，师傅对EAS和BOS那套东西玩的好溜，师傅比较聪明我比较笨，哈哈。但是师傅呢不嫌我笨，有时候同一个问题问到第三遍了，他就真烦了……哈哈。但是还是会告诉我怎么回事怎么解决云云，我个不长记性的家伙，也不知道记录下问题，现在想想，当时怎么那么懒，又笨又懒。哈哈。后来搬去跟师傅住在了一个城中村，住隔壁楼栋，这个村子住了我们部门好多同事，跟个部门根据地似得。起先的两年吧，师傅还是一个人，后来隐婚了，真的隐婚了，很突然的有了师娘，哈哈。自从有了师娘，师傅就很少出来跟我们活动了，师娘跟师傅是同一个地方的，由于住隔壁栋的原因。我是不是过去蹭饭，师傅师娘做的饭很好吃，是广东沿海地区特色的餐食风格，清淡却很有食材的原味，每次去我都吃到光盘子，我一点都不见外，哈哈。有直接煎的海鱼，还有广东人最喜欢煲的汤，还有次专门为我包了蒸饺，虽然吧整出来散了，不过真是我们三个，额不对，是四个，哈哈那个时候师娘已经是准妈妈了，这里再次恭喜师傅荣升爸比职称，哈哈。从师傅这里学会了煎鱼，有几次跟师傅去海鲜市场买食材，师傅常去的那家鱼档，后来我经常光顾，因为师傅常去，我也常去，没别的，就是因为信任我师傅，鱼档老板从来没坑过我，而且鱼也给我弄的很干净。因为老家深处内陆，小时候很少吃鱼。所以我很喜欢吃鱼，自从会做偷师学的煎海鱼之后，吃了个爽。</p>\n<p>师傅，后来很少联系了，不联系不代表忘记，有些记忆是忘不掉的，零售也永远不会忘记，这里的人都很好，对我好，让我个初涉世的毛头小子，感受到了大家庭的温暖。</p>\n<p>除过以上已经出现的同学们，喂现在开始点名了。</p>\n<p>成程哥，云南人，成程哥是个烟友，就是这么莫名其妙的认识，几根烟就可以很相熟，后来做了成程哥的几个项目，挣了些烟钱。另外成程哥也是个大厨，有次去了他那边，成程哥光着膀子给我们做水煮鱼还是什么来着，模糊了，那个假期我刚好在广州玩，成程哥给我打电话，在哪呢？能回来不？到了深圳直接从罗湖火车站过来哈！有饭吃我岂能推诿啊，我就屁颠屁颠的从广州回到了深圳，到了罗湖去了。其实成程哥我觉得一直都是个大哥一样的人，跟我有些像吧，但比我成熟的多。他也弹吉他，我是买了一把陪我寂寞的，到现在也是乱弹琴，成程哥已经会写弹唱了，一次我们在坪洲一个韩国烤肉的店里，点了两瓶真露，一人一瓶，这酒度数不高后劲挺大，喝着喝着聊着聊着不知不觉就晕了，两个人踉踉跄跄的，成程哥趁着酒劲抱着我那把吉他，就开始唱，唱的跟个流氓一样，哈哈。歌词我记住了两句:姑娘姑娘那个美啊，小伙小伙那个浪啊，云云。后来成程哥去澳洲待了一年左右，回来我们仍然联系。现在也少了。哦对了，成程哥也喊我师傅叫师傅，这么算下来我是你师哥啊。我这脑子，现在才反应过来……</p>\n<p>还有与我合租了半年多的老莫，也是广东人，眼神很深邃，很会做饭，我有好些菜都是跟他学的，此人极喜欢酱油，导致我后来做菜也都喜欢放酱油，广东人注重养生，比较清淡，反而这半年他被我带的口味重了些，我很喜欢吃广东的肠粉，他竟然在我住了1年多的村子里找到了地道的肠粉店，老板是广东人，只做早点，老头老太太两口子，只早上7点到10点之间出摊，肠粉是限量的，就那么三两桶米浆，卖完了就完了，老板娘的普通话不是很好，每次都用很奇怪的语调问我:要木要la(二声)jiu(三声)。其实在这店里吧，很能找到广东早茶的那种感觉，虽然很简陋，只有五六张桌子，老板家的茶很好喝，尤其是早上吃早点的时候，有甜甜的味道。肠粉很爽口，用老莫的话，就是很”滑”，好像是这个字吧，也模糊了。听着小摊对面大榕树上鸟的叫声，喝着清甜的茶，吃着爽口的肠粉，忽然觉得，深圳这座城还是挺美的。</p>\n<p>在深圳的时候，最喜欢的就是徒步了，只要不是城中村这种极其难治理的地方，主街道还是很干净的，不算有组织的那种徒步，我自己私下里走的，按我的话，已横穿了深圳，因为我对深圳的定义，就是罗湖火车站到机场，其他的地方都算郊区，因为我没去过，哈哈就这么任性。私下里的徒步分两次，第一次跟顺爷，我俩也不知道是谁最先提出来的，反正就是这么的臭味相投，一排即和，我们早上从白石洲开始走，先走到红树林，再沿着红树林往罗湖方向走，到了福田的时候，天就开始下雨了，俩傻B都没有伞，躲到福田某个立交桥下的桥洞里躲雨，我的手机还是安卓1.6系统的摩托罗拉里程碑，那时候已算是第一代智能手机了，也在这次雨中壮烈的暂时牺牲了(后来检查是屏幕进水了，自己在淘宝淘了块屏幕换上了)。雨停了，我们继续往罗湖走，在福田，我们俩已经累成了傻子，中午到饭点，我俩进了一家猪脚饭的店还是啥店来着，也模糊了。这时候我们已笑不出声了，相对而视，嘴角上扬，轻蔑的从喉咙里发出哼的一声，就代表我们笑过了，是对笑，俩傻逼，哈哈。吃完饭我们继续走，这时候腿估计已经麻木了，没有疼的感觉，只是觉得累，终于，在下午四点半左右的样子到达深圳罗湖口岸，于是就有了顺爷那张光脚、我跟个木鸡一样站在罗湖口岸门口的照片。罗湖口岸有地铁直达白石洲，这也是为啥选择徒步到罗湖口岸的原因。累成俩傻子。假期过后，又被同事们笑成俩傻子。不过，这次徒步，让我收获了我最喜欢的一张照片：扶桑花，长得那么傲人，又刚下过雨，展现出极强的生命力。第二次徒步我是自己走的，没叫顺爷，也没通知谁，就自己走。出发地仍然是白石洲，目标宝安国际机场[老机场]，这次的距离和去罗湖的距离差不多。但是是一个人了，出发时已经中午了，选了大冲地铁口的肯德基搞定了中午饭，满满的能量，预计12点的时候正式出发，沿深南大道上宝安大道，沿宝安大道直走就到机场了，就这么简单。这天的天是小阴天，有些风，很爽，走的出汗，风一吹，你自己体会下这种感觉。走到宝体的时候，由于鞋子的原因，脚上起了泡，幸亏我有准备，马上换上了包里带着换的一双新袜子，再在街道边上的商店买了双厚的棉垫子，舒服了些，水泡不在长大，踩了几公里之后竟然消失，也不知道是破了还是散了。走到宝安大道过了宝体的样子，其实脑袋已经开始放空了，开始注意宝安大道上的指路牌，机场10KM……开始骂自己傻，机场3.2KM……开始骂机场傻，建那么远，到了机场，下午16点19分，拍了张照。也真是没啥可看的，飞机起落也不是在宝安大道这边。绕道上天桥进机场东地铁站，腿已麻木。这次是个周末，没有像第一次那样是国庆，可以有好几天休息，这次惨了，第二天就要上班了，这两条腿哟，已经不是自己的了，从大冲地铁口走到公司，还有700米左右，是两条腿相互拖着，再加上一双手拽着走过的，从来没有觉得700米可以这么长。不用说，到了公司，又被同事们笑成傻子。可是傻的这两段记忆，已经钉在我的记忆里，对我来说，非常值得。后来参加了一次磨坊组织的深圳百公里徒步，只走了半程，虽然脑袋也放空了，但觉得太赶，大家只顾走路了，又是晚上，行至梧桐山山里时，志愿者一个一个的都是骗子，明明二签还有还有好几公里路，却在那边对我们喊：加油，快到了，拐了前面那个弯就到了！我们都大喊：骗子、骗子！！！然而心里却十分感激。到了梧桐山签到处，脚已经起水泡起的厉害，不能继续，就此结束吧。彼时凌晨4点，距离第一班公交发车还有2个小时。我们就捡了些红牛的箱子铺在地上躺在上面，望着还没落下的月亮和星辰，感受这空山的寂静。</p>\n<p>旅行是一场身体和思想都在路上的修行，眼睛看到的，未必是会深入脑海，但身体和眼睛同时感受到的，大多会留下来，成为一辈子的财富。</p>\n<p>我喜欢走到脑袋放空时的感觉。这时候我才能感觉到我是一个人而不是一只蚂蚁。</p>\n<p>额，扯的越来越多了，感觉要写不完了。零售就写到这里吧。接下来各位看官请随我走进第二个部门，BI(Business Intelligence)商业智能。不要被这牛哄哄的名字亮瞎，其实做的事情，远远挖掘不出啤酒和尿不湿的关系。说白了就是数字报表+好看的图表。</p>\n<p>先介绍下这个部门吧。入职的第一天，老戴[也是老大]领我到部部门，我坐在我的第一个办公位上，两个办公位的连接处放了一本公司画册，我就随手翻了翻。其中印象最深的就是乔昕明的介绍，胖胖的形态有些像高晓松[可百度搜索乔昕明第一个领英的照片]，2009年的时候他的扩展报表工具一举拿下了当年的一等奖。从此这个名字就在我的脑子里扎下了根。所以2013年零售部发生人事变动的时候，我有机会进入BI商业智能事业部(前身是扩展报表项目组)，于是我就放弃了可能会有N+1赔偿的裁员机会，进入了乔昕明领导下的BI事业部。有两方面原因：一个就是因为老乔的光环，一个是因为被BI这个名词给忽悠了。这里有必要介绍下老乔，资深的软件架构+资深的软件研发，总之就是神级的人物，我的印象了里，四楼中间的回忆室旁边，总能看到老乔的身影，一副森海塞尔的头戴式大耳机，一部苹果笔记本，还有些凌乱的稿纸，就是老乔的办公位了。其实老乔有办公位，就在BI部门的领导位上，可老乔很少过去，所以在BI部看来，老乔自从BI事业部成立空降了个产品经理之后，貌似已经是不再关心这个BI部了。也许他从一开始就知道新成立这个部门就是瞎胡闹吧。也有可能因为人，不表，不做长舌妇。</p>\n<p>BI事业部分离两个部门，一个是做BI分析解决方案，其实到底就完成了财务分析的方案。我就属于这个部门，做BI工具，具体是啥呢，就是把开源的kettle数据分析工具，包装成BI自己的产品，说白了就是换壳。这个组里，认识了大哥[*忠文，湖北土家族人，所以我也叫他土人。汽车4S事业部过来的，跟我一样的情况过来的。一脸的痘痘，夏天老穿的跟个归国华侨似得，冬天却又西装革履的，就差一条领带了.技术流，后来去了康拓普玩大数据]，宝哥[bruce，江苏人？模糊了，此部门的元老，研究僧毕业，瘦小精悍，技术好厉害，后来去了平安，让你给我要蔡学镛的签名都没要到]，阿甘[江西宜春人，资深测试，人不错，一脸胡髭，金蝶足球队的队长，会踢球的人缘一般都不会差，金蝶的员工我感觉他能认识一半吧，哈哈夸张了]，小龙[东北银，搞过扩展报表，后来搞前端，把报表的那坨东西又用js实现了一遍，BI内部后来发生组织变动的时候，有幸搭档做过一段时间portal，也是技术流的，后来去了腾讯].其实经常一起玩的是大哥，我们俩都是肉食动物，每次去找他玩，都是吃肉，时而喝点小酒。大哥是个无所不知的神人。你跟他聊什么都可以，他大学的专业是雷达与天线，厉害了我的哥。他大学在新疆上的，是个吃过手抓饭的，我们去的比较多的是他那边的巴依老爷，吃羊肉的地方。我是个饭桶，他是个吃货。我喜欢听他聊天，虽然有时候他天马行空的讲一些我听不懂的东西，他跟别人介绍自己的时候总是喜欢用明朝的大将李文忠开头。虽然大部分的人对李文忠是谁也不知道……他家里有茶树，清明谷雨过后，他爸会给他寄一些自己手工炒制的茶叶，我就沾个光，老去他那边蹭茶叶喝。这货喜欢喝啤酒，阳台上满满当当上百个啤酒瓶子。怪不得有啤酒肚。</p>\n<p>哦~说到大哥这些啤酒瓶我想起来了一件事，哈哈，顺便提一下，工作第二年的时候，喝可乐上瘾了，不要问我是怎么上瘾的，我也不知道。而且只喝香草口味的听装可乐，每次下班之后就去湾畔百货买4听，有时候打折我就买八听，那时候我没敢在公司喝，因为老戴也喝，我怕他跟我抢，哈哈。其实不是了，因为那时候有个段子说可乐杀精，问度娘，是谬论，当时做这个实验的是把精子直接泡在了可乐里，你这不是傻逼吗？你把青蛙腿打断了然后大喊吓青蛙，然后说青蛙没有耳朵听不到，因为对它大喊它没跳走。这都是啥实验环境啊？不过我也确实不敢再这样喝了，喝出病就麻烦了，而且接下来一年体检老检出高血压，是不是跟这个有关就无从可知了。半年下来，可乐的铝罐也攒了几百个。当时我住的地方楼下是个面馆，老板跟我是老乡，我去他那边吃饭，不为别的，就为讲几句陕西话，其实老板做的东西啊，确实不咋好吃，哈哈。我叫他哥，他跟他媳妇，还有两个儿子，一个已经上幼儿园，一个还在嗷嗷吃奶，他的老父亲也在那边，大叔抽的是旱烟。问题是他这个小儿子吧，放在推车里，就放在吃饭 的厅里，进进出出的人，孩子就老哭，一哭吧，他爷爷就去哄，他爷爷又是旱烟不离手，那个店朝北，本身就有些昏暗，再加上这样的环境，他家的生意也就不怎么样的感觉，反正我感觉就是有人去也是打包就走了。有次我去他那边吃饭，跟他聊天，他说他的大儿子捡瓶子自己挣钱花，哈哈，我就说我那里有好多的易拉罐，吃完饭跟我上去取去，他家的大儿子比较怕生，虽然我经常去跟他爸聊的也还不错，可这孩子挺羞涩的，也不跟我说句话，起先拿了个比较大的那种超市里的大塑料袋，我说太小了，哈哈。他爸爸又给他找了个好大的蛇皮袋子，我说差不多了便屁颠屁颠的跟我上楼去了，问题是等到上楼之后他看到这一堆的易拉罐也没有表现出很开心，还是羞羞涩涩的，我帮他装进袋子里，试着拎了下，有些小沉，就帮他一起提下去了，这些易拉罐估计可以换一个小玩具吧。小伙子，羞涩如我小时候啊，家里来人就躲进房间不出来啊。哈哈。后来我搬走了，还专门回去他那边吃了两次饭，聊聊天。</p>\n<p>我去……这段跑飞的严重了，回到BI吧。BI事业部的日常工作没有啥可讲的，能记住的还是出差。去的不远，在广东云浮。领导开车拉着我们四个过去的，忘记介绍这个领导了，叫学明，技术出身，对我们都很好，从开发和需求的两个角度看问题，不像有些领导，空降来的，天上掉落凡间的天屎吗？出差一行人：宝哥[坚强的技术后盾]、领导和阿甘[主要培训客户软件使用]、我[酱油]。学明和阿甘喜欢足球，那天晚上吃过晚饭，回到酒店，说有球赛，领导买了几瓶加几罐啤酒，买了酒鬼花生，瓜子。然后就开始看球了，我跟宝哥不怎么感兴趣，陪他们看，其实就是瞎看边聊天，出差的项目是温氏，几个农民合资起家的，整个县城估计都是仗着温氏吧，温氏总部的楼好气派，据说比他们县政府的还要气派，说的糙点：养鸡能养成这样，真是牛逼。临走时大家去当地买了土鸡蛋，我不记得我买了没，模糊了。</p>\n<p>写不出文字了，思绪已经被散乱的记忆打乱。这篇回忆录写了四年了，不想往下写了，或者说现在不想写了吧。接下来的两年有些起落，要写的东西太多，与前面这四年对比太强烈，风格也要完全不一样，再构思一下吧。先就此止笔。</p>\n<p>标题也不改了，也许空白几年也好。</p>\n<p>回忆越忆越漫长，如人生路，一个往前一个向后。毕业后的工作路是个极长期且没有毕业季的历程。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近一直想写，都不知道怎么下笔，闲下来的时间总是在懒惰中挥霍，或是沉浸在幸福快乐中流散。五年真的是白驹过隙，但发生的事情比上一个五年多太多。</p>\n<p>上一个五年，做的影响一辈子的事情，确是高考与专业选报，现在看来，也不后悔，对路，也符合我的性格，但是也封闭了我的性格，不知从何时开始，内心开始对这个很小的世界产生了依赖，不愿意改变，很怕变化之后会怎样，畏首畏尾的。毕业找工作时也碰到了坎，四月份才找到，对于我这抓住了毕业季尾巴的人来说，实在太幸运了。</p>\n<p>大学四年，自律意识太差了，现在回想起来，大学是被荒废了的，逃课挂科家常便饭，只醉心于自己喜欢的事情，想到了那年收到学校警示通知（挂科太多），与家人过年都是在阴云笼罩的气氛中度过，让父母操碎了心，现在这些事情想想，真是太不应该，学生的工作，就是学习好自己的课程，这是本份，任何借口都是狡辩。如果没有比尔盖茨的本事，就老老实实的读书，不读书这社会上你就是傻子。我就是个傻子，现在除了掌握皮毛不入精髓的点点计算机知识，我就剩下一具肉身。真是往事不堪回首。这是工作前的五年，就这样写吧，反正也不能反悔了，自己买单吧！</p>\n<p>现在开始最近这五年。前方无高能，流水帐记叙。</p>\n<p>毕业之后来到了一家大公司，以一名很多人不懂以为是修电脑的，一线城市称为软件工程师，自嘲为码农程序猿做着一份刚好能自娱自乐填饱肚子的工作–程序员，公司制度完善，有师傅带，大家对我很不错，很和谐，无奈期间换了部门，后面详说吧，继而又换了两家公司，现在还是码农，哈哈，做一辈子码农也不错，至少可以吹着空调玩电脑。</p>\n<p>总在想怎么去写，现在想想，就随便写吧，想到啥写啥，顺便吐吐槽。如果下文中您在看的时候感觉到是在写你，请不要觉得是你，因为我会加花。</p>\n<p>2010年7月/2014年9月，这个时期跨度很大，记忆也零碎了，那就从大事件聊吧。</p>\n<p>依然记得那天挎着个硕大的袋子，拖着大学时候的被褥，被保安大哥拦住：喂，农民工去对面工地（预警，此处加花，下文再加花处，恕不提醒），待俺拿出有红戳戳的入职通知，保安大哥才引我进入公司餐厅的休息，好吧，这只是开始好伐，我当时去到公司的时间略早于上班时间，好吧，每个进公司的同事进门都跟看猴子一样看我，我就这么在第一家公司曝光了。这一天是步入社会的日子，恐怕要像烙印一样记一辈子吧，2010年7月9日！</p>\n<p>初入职场，楞头青，突然来到高大上的软件公司，还是挺兴奋的，从接到offer到报到，足足高兴了三个月，然而蜜月期啊侬晓得伐？高大上的BOS和EAS（不懂没关系，我也不懂，以下文章关于技术的词语不必懂，看新鲜即可）足足让我折腾了两个月才入门，这感觉太痛苦了，简直睡觉脑子里都是那个蓝色风格的EAS系统，这里感谢我那耐心的如禅师般的师傅，同一个问题问三遍的我都烦了，你还不烦，你这样耐心的性格是谁教的，已如神佛，我已献出了我的膝盖，师傅，感谢你！初入江湖有你，吾之大幸么么哒！</p>\n<p>好了，会写代码了，干活咯！来来来，小涛来，老戴喊我，分你个基础数据先练练手，三天搞得定吧？好嗒，领导！然后就屁颠屁颠的去回到座位了，呃，是个什么基础数据来着，哎呀，需求文档怎么找不到了，哎呀呀，这环境怎么启动不了了，哎呀呀呀，一天过去了，今天的贡献值zero，然已累觉不爱，加班吧，先把实体建了界面画了吧，至少得晚上能有个理由睡觉，不然失眠了怎么办！吥呤吥呤搞定打卡下班走人，哟十点多了，哟还有三十块钱餐补，想想还有些小激动呢！</p>\n<p>回到驻地，或称作为住的地方，远不能用家这个字。洗澡先，这里补充下，夏天在这个南方海岸线上以蚯蚓状蜿蜒的城市，来桑拿啊，免费的，不洗澡你就变成蚯蚓了，粘死了！我喜欢这里的冬天，不热不出汗不洗澡，积攒泥灰修佛。哈哈哈，啊~，跑题了，赶紧睡觉都快十一点了，呃，要不玩会QQ，不玩不要紧，一看时间吓一跳啊，十二点了，睡吧睡吧。接下来的八个小时无意识之后，洗洗还是红色的眼睛，莫名其妙睡着了，然后莫名其妙的被闹钟吵醒，然后走路去上班，虽然只有一两站偶尔也打个的挤个地铁，然后如此循环。后来呢，弄了个二手的自行车，丁丁当当成了个伪骑行族，真实是个伪的，因为自行车的变速简直是个渣渣，还有那个铃铛，真是用的时候才知道是个摆设，这是后话，自行车有传奇，各位看官接下文分解。</p>\n<p>这样也还好，刚开始的时候都是很充实的过每一天，至少每天都能学到点东西，但是大学时候的种种劣习也逐渐暴露出来了，作息以及饮食的不规律，熬夜，不记笔记或者说是不记便签[这时候才知道好记性不如烂笔头是什么意思]，大学我承认时间真是很多，一些学科老师教的东西确实对工作帮助很少，但是现在想想，其实这些培养的并不是你课本上学到了什么，实际工作要用到的，是你怎么去学的方法，大学应该培养一种良好的生活以及学习习惯，这个对工作帮助真得很大。觉悟吧，骚年！！！</p>\n<p>在这家公司吧，其实算折腾了一个来回，这里用A部门和B部门来代替，入职的是A部门，也是在这里变的有点油条气，成了第一家公司的油子，因为是个传统行业的ERP研发，所以刚开始对这些高大上的ERP名词都一知半解的，什么BOM啊，移动加权啊，货位啊，都是在那帮需求的带领下，慢慢了解，对程序员来说，这些名词其实对编程影响不大，有人已经帮你写好了计算公式，你只要按公式垒代码就行，成体系的公司就是这样，所有人的分工是很明确的，你就写好你的代码就行，这就是问题，程序员被局限了，视野被封闭在了逻辑代码上，对于业务逻辑以及为什么这样的业务逻辑一知半解，对产品提不出建设性建议，老都是按需求文档，不好玩，太呆板。其实这时候我也还是这样子做的，一切听需求按文档，这样晃晃忽忽一年，有个机会可以去客户现场出差咯，对于刚参加工作的小年轻，出差显得高大上，跟部门领导说了下，领导,我想出差，哈哈。领导笑呵呵的看着我，哟，年轻人，不错嘛，有魄力，去吧，就这样，第一次被一个测试姐姐带着坐灰机，飞呀飞，从深圳飞到了上海，哎呀，上海哟，一线大城市哦，不过我们去的是无锡，一个没有锡的地方。无锡确实是个好地方，生活环境好，工作压力小，这个在我去的那年【2011-2012】真实的感受，早上9点半上班，晚上5点下班，人们生活在太湖边，没事就去划划船啦，吃吃湖鲜啦。哟，这段好乱，整理下思绪，就像跑飞了的代码，连系统都找不到它。那就另起一段。</p>\n<p>这段讲无锡出差的那段经历，因为有先行部队先到了，我们属于第三批到的，所以刚去的那天，我跟那个测试的美女姐姐一起，拉着大包小箱飞机转高铁，再转坐出租，来到这个接下来要待多半年的地方-无锡马山灵山，大佛保佑，我们这路行程很顺利，到了目的地的时候，已经跟我现在写这段文字一样的时刻了，夕阳已经泛出了红，夜幕也静悄悄的在这块佛光护佑的圣地拉开了帷幕。鸟儿偶尔悄悄的叫两句，不过已没有中午的那么叽叽喳喳，村子里的狗，听到人声的时候也懒洋洋的吠两声，那时已入冬，在太湖边上这座小镇，还是很冷的，在景区门口等了几分钟，我们那熟悉的小伙伴出现在了我们面前，这才感觉到，哦，原来这里也有我们认识的人，刚产生的点点落寞就散去了，经过一片停车场，我们到了我们接下来这半年要战斗的地方，一个十几平方两排办公桌的地方，第一拨和第二拨人都在，见面时候的欢呼，调侃，哈哈，总之其乐融融赶走了很多工作带来的压抑，领导这时候发话，走，吃饭，哈哈，这个以后就是晚上下班的号令了。接风洗尘，自然离不开酒，这里的酒，是黄酒，我知道的品牌也是那天喝的叫惠泉，好不好喝不知道，我不是会喝酒的人，但是温热的酒冒着热气，加上大家的欢笑，足以驱走异乡客独有的无归属感。</p>\n<p>工作上的事情吧，跟在公司是一样的，只是去客户现场，表明我们是重视客户的，我们这拨人就是专门来做这个项目的，这样客户也很重视我们，那边的人对我们很不错，跟他们一样吃的他们的食堂，说实话，这食堂绝对比下馆子要好吃一百倍，而且很便宜[客户给我们充了张卡，所以我们属于白吃]，至少我现在想起来，还是觉得是美味。无锡人喜欢吃甜，但是也不会腻，哪种红皮的红烧肉，我一次能吃好几块，酱排骨，我也能吃好多，哈哈，现在才分清了吃货和饭桶的区别，我属于饭桶。</p>\n<p>这两天有点忙，耽搁了写下去，继续吧，今天心情不好，从上面的思路上也接不下来了，还是以时间为主线想到那里写那里吧。</p>\n<p>（此处距离上面的文字已经一年多了）不好意思，真是断了，断了一年才接着继续写，这一年发生了太多事，后面细聊。这篇文章的标题原本是5 years的，按现在的时间也要变成6 years了。 无锡的故事还没讲完，现在继续~<br>额，不太好接上，若说到饭桶了，那还是先讲讲吃吧。我确实是个吃货，刚开始工作的前几年，我还不怎么做饭，可到了后来，就想着做点了，也是因为交了女朋友的缘故吧，前几年，自己做的简单，本身我也不挑食，挂面+韭苔炒鸡蛋+老干妈+生蒜。哈哈，吃生蒜估计是北方面食动物的专属吧，南方的小伙伴看哭了。老干妈确实是个好东西，百搭，可以直接用勺子挖着吃。想起来大学的时候有个贵州的同学，好像是他妈妈是医生还是怎么回事来着，给老干妈陶华碧看过病，现在想想，好厉害哦，我也可以跟别人吹，我同学的妈妈给老干妈看过病[笑cry]。额，又跑飞了，刚到深圳的时候，买了个不锈钢的碗，其实可以算作盆，因为确实挺大的，一般我是先炒韭菜鸡蛋，炒出来就放在这个盆里，那时候的韭菜鸡蛋不知道为啥老炒的干巴巴的，后来过了好几年才发现，油放少了…… 然后不洗锅，直接接凉水，煮开后放挂面，不知何时记住了老家时煮面的诀窍：水开三次面就好了，就是挂面在水里煮的时候，水再次煮开了，加半碗凉水进去，然后再煮开，如此煮开三次面就好了。反正也不知道是不是真的熟了，用笊篱捞出来过一次凉水，就捞到盆里盖在韭菜炒鸡蛋上，然后放盐倒醋，剥蒜取老干妈。哦，这里由于思绪混乱，忘记告知生活环境了，这是我刚到深圳的第一家出租屋，在世界之窗对面的城中村-白石洲，合租的是中兴公司眯眯眼的一个小伙伴，名字已经模糊了。住在4楼还是5楼来着也模糊了。平时我们交流的比较少，他跟同学合住在主卧，我自己在另一间。如此间尺平方，生活半年。</p>\n<p>思绪回到无锡。太湖的边上，秋天去的时候有点凉，冬天我感觉是北方的那种冷，不像深圳的那种湿冷，秋冬的无锡，雾比较多。去无锡之前，我花了1500大洋在华强北买了台富士的相机，一到周末我就挎着相机，在马山镇[我们的驻地]的周遭转，看到好玩的新鲜的就拍下来。在酒店的后面，有条河，名字不知道，那是我常去的地方，有鱼，我没有渔具也不会钓鱼，就站在小桥上，远远的看当地的大爷大叔在那边钓，清晨时，河上起雾，我站在桥上，也许也是个不错的画面，也许也有卞之琳&lt;&lt;断章&gt;&gt;里所描绘的那样：你在桥上看风景，看风景人在楼上看你，明月装饰了你的窗子，你装饰了别人的梦。可是那时真有别人的梦吗？沿着河走，可以走很远，我也没有去探索过河的源头在哪里，只知道，对于一个外乡人来说，这样的风景，多了便就成了乡愁。</p>\n<p>路上的行人都是本地人，无锡讲吴语[百度的，我也不清楚马山的是不是吴语],我虽不不会讲他们的话，但是愿意听他们的方言，我是个对各地方言很感兴趣的人，虽然不会说，但听得多了，也能听懂意思了。江苏分苏北苏南，无锡是苏南，鱼米之乡。太湖有三白，白鱼、白虾、银鱼，好像吃的最多的就是白鱼银鱼炒蛋吧，银鱼汤之类的吧，也许是白虾比较贵，只吃过一次，很经典的一次。[以下有些高能，慎入]不记得是无锡分公司还是甲方请客了，叫醉虾。是用当地的黄酒，然后把洗干净的白虾活活的扔进酒里。是不是感觉有些残忍呢，不过真的好吃啊，有些顽强的虾在酒中还在跳，捞出来放在嘴里的时候还是活的，当你咬下去的时候，先是酒味充斥口腔，来个温润的刺激，然后就是活白虾嫩肉的爽口了。 同行的小燕子貌似没吃吧。可惜了。</p>\n<p>本是出差，却只记得吃吃喝喝，哈哈，其实工作吧，就是重复，没有乐趣的出差，一周就会腻。这段献给口口，也不知道你能不能看到。口口姓吕，比我大，大屁股，哈哈，出差无锡的领队，我们叫他村长。河北人，对！就是老白干的故乡-衡水那旮沓的。刚入职的时候吧，也许是不熟，对这货挺敬畏的，问需求的时候也是战战兢兢地。因为他有过硬的行业经验，对零售行业门清。专业知识过硬。这些对这篇流水账来说都是次要的，主要是这人，极够意思。我们这些小村民，就是跟着村长有肉吃。在客户现场，他也能独当一面，抗住客户压来的不合理需求，真是贤惠的村长啊。重点是长得还帅，真是没天理了。后来部门的一次变动之后，我们俩又一起进了BI商业智能部，然后我们的这位村长就明显感觉入了坑了，也可以说是英雄无用武之地吧，貌似记得还被分去写SQL是吧，真是<em>**</em>(脏话)。之后他也就离职了，去了能让他发光发热的地方。口口人缘及其不错，反正就是吧，对人好，对所有人，没脾气，没架子，能跟我们这帮小孩子打成一片，也能跟一帮老人谦卑有加，总之吧，就是这么一个能让你五体投地的人。</p>\n<p>再讲讲村里人吧，在无锡的时候，我们是在马山镇，有顺爷(专业测试能力极强，能从测试的角度猜测出你代码哪里写的有问题NND,没见过这么牛的测试，后来去了北京，离家近，河北人)，小磊子(是无锡项目组先锋部队搭环境的，这环境一搭就是一年多啊，酒店我们住在一起，有段时间为了减肥从酒店走到项目现场，后来好像也没瘦)，村支书(有村长必有支书啊，我们的精神领袖，很精干的老头子，有丰富的行业经验，后来听说定居就是去了无锡，确实无锡是个好地方，适合养老)，老肖（广西人，人总是笑呵呵的，弥勒佛的样子，哈哈）军（精干的小伙子，第一批的去的，技术比较厉害，后来去了阿里）广广(无锡部负责人这么叫的，本着不曝光真实姓名的原则，沿用。广东人，一丢丢辣都不能吃，仙风道骨，瘦到风可以吹起来)，小燕子(成天跟一帮男人混，都快被带坏了，都是口口带的，哈哈。有次项目现场大门的栅栏门关住了，也跟我们一起翻门，姑娘，敬你是条汉子。珍重)，姗姗姐（美女一枚，带着我第一次坐飞机，我像跟着个大姐姐似得，当时测试任务紧，去支援了个把月就回总部了）光哥（还是老乡叻，在深圳这个地方本来遇到陕西老乡就不经常，能在同一个部门遇到同一个市的老乡就更难得了）还有些是在我之前去的，就不表了。另外还有无锡分公司的老邬（我们尊称邬老爷子，很和善的人，非常照顾我们，后来我们离开无锡的时候还给我们带了无锡酱排骨，有时候加班晚，也陪着我们，早上给我们烧热水喝）客户甲方的老陈（甲方信息部的，由于项目是个佛家景区，老陈也有些超凡的感觉，身上的衣服总是一尘不染，有时候跟我们讲一些佛家的故事，我们也就是听个热闹，而他却很敬畏的讲给我们听，对我们也很好的）</p>\n<p>无锡出差的地方是景区，灵山胜境，票价好像很贵，老陈给我们办了几个工作人员的工牌，我们吃完饭或者下午工作厌烦的时候，就可以进去玩。第一次进去的时候刚好赶上九龙灌浴表演，喷出的水雾竟然出现了彩虹，从彩虹望大佛方向望去，更显的大佛庄严了，此佛极高，站在佛脚底下，我一米八的个子还不如一个脚趾头高，里面的景点还有好多个，也都模糊了，就不表了。还有个人不能不说，我们住的酒店离景区还有些远，7-10公里左右的样子吧，晚上下班无论多晚，我们都不怕回不去，因为有她，我们的杭阿姨[不知道姓写的对不，音译的]，杭阿姨告诉我们，无论多晚，你们只要下班要用车，给她打电话就好，她都会送我们回酒店。大冬天啊，这是什么精神，无锡对我的好感，杭阿姨的淳朴占一席。后来项目结束快要离开马山，杭阿姨在家做了很多地道的菜招待我们，她老公打了野味给我们，给我们送行，她老公也拿出了自家酿的米酒款待我们，那是我第一次喝自家酿的米酒，好烈，好冲，杭阿姨的热情就像这酒，就是这么猛烈却又让我们折服。感谢！</p>\n<p>有段时间不知道谁提议晚上去跑步，从酒店跑到太湖堤岸，距离没有概念，百度大概量了下，来回5公里多，结果那段时间，马山镇的街道上一到8点半就出现了几个外地的疯子，打打闹闹的在跑步。坚持跑了1个多月吧就搁浅了。</p>\n<p>那年的春节，是从无锡直接回去的。跟光哥先从无锡坐高铁去上海，在从上海飞回西安。上海，擦身而过，晚上在上海的街道上溜达，住的比较偏，街道很干净，晚上也不像深圳那样闹腾，也许是对比的对象不同，没看到川流不息的人群，也没看到只顾低头行路的年轻人。</p>\n<p>上海，比深圳有历史，深圳像什么呢，我感觉就是改革开放为中国经济快速发展而拼凑起来似得，这才30多年吧，一个渔村，想要什么历史想要什么底蕴想要什么文化呢？华强北，山寨的代名词，也许你逛过二线城市的赛格电脑城之类的地方，觉得已经很了不起了，那么多卖电脑的，我可以告诉你，华强北的壮观程度绝对可以让你瞠目，怎么形容呢，有次我去那边修手机，在肯德基的店里，一个中年妇女，背了一书包iPhone6的后盖，一个一个的擦拭，擦干净了就用一个一个塑料袋装好，后面的交易流程我们不清楚，也不知道这些壳流向了哪里，我就一形容而已。所以啊，一些不是从正规渠道买的iPhone啊，很可能就是这里组装起来的。深圳的创新程度有多高我不知道，但是创业程度真的很高，做软件的硬件的在这里不愁找不到工作的，大批的公司拔地而起，都打着要革命某一个传统行业的旗帜，冠冕堂皇的在这块地方滋生。深圳的青年人，上下班的路上，只顾走自己的路，要不就是低头玩手机，站在地铁上两脚之地，行尸走肉一样。站在留学生创业大厦上，高高的看着街上如蚂蚁般行走的人，想想自己，我何尝不是一只蚂蚁。</p>\n<p>当然我这太悲观了，深圳是中国经济发展不可缺少的一部分。就如我这第一家公司，让财务人员扔掉了算盘，革了财务行业的命。创造了企业的收入。也创造了税收，给国家做了贡献。如我这第一家的公司还有很多。略去不表。</p>\n<p>深圳抛去这些快节奏的和高的离谱的房价，其实是很适合生活的，毕竟是海边的城市，深南大道宝安大道的绿化程度很高。99.9%的时候没有雾霾，绿道到处都是，一辆自行车就够了，不用太紧张，轻轻的欣赏就好了。</p>\n<p>！！！！这思绪又跑到抒情上去了。继续流水账</p>\n<p>第一年的春节，过的有些紧张，因为没有买到初七票,到初十都没有票。在售票窗口，售票员告诉我，初五还有站票要不要，第一年工作的我傻不拉几的给买了。就这样，在初五晚上西安开往深圳的火车上，多了一个背着书包，拎了个马扎的小伙子，上车前我还想呢，不会有那么多人在 大初五的来挤火车吧，结果，真挤啊，30个小时啊，慢慢熬吧。从检票到挤上火车，衣服已经出汗湿了，这是我第二次坐火车去深圳。第一次是毕业入职，那时候是7月初，人不是很多，我买到了卧铺的票，而这次，这一对比，吐血了都。没办法，自己鼓励自己：还好，就30个小时，睡两觉再熬一白天就好。西安上车前买的小马扎，当天晚上就报废了，根本不经坐，完全是坑人的货。站票坐火车的都知道，火车上最讨厌就是“香烟瓜子火腿肠啤酒饮料矿泉水麻烦把腿收一下”了，这次我真是恨死这帮人了，哈哈。本来就在过道站着难受，还要给你让个道!大过年的，都不容易。当天晚上也不知道在哪里找了报纸还是啥东西，在中间的过道上铺开来，然后腿横着伸进到座位下面，躺在过道上，头枕书包靠在另一排的座位上，听着火车哐哐的声音往远方去了。虽然是冬天，车上还是有些热的。汗出了不少，记得上车前买了一瓶水，两个脉动，还有个烧鸡，呼呼哈哈。结果在火车上，一点点食欲都没有，只记得喝了大量的水。除了上火车时带的这三瓶，在火车上的这个香烟瓜子火腿肠上还买了好几瓶脉动，没买矿泉水，我想着还得补充些能量，不然抗不到下火车就悲剧了。喝了这么多水，奇怪的是，没上一次厕所。我想着这么多水都从汗孔里出去了啊。人还是很厉害啊。白天其实还好，第二天聊天时才知道，我伸腿的那桌也是富平的，我们白天就轮着坐，到了晚上，要休息的时候，我就自觉的继续了昨晚的姿势，因为确实很难受也不能去跟别人换着躺地上吧，哈哈。白天跟我换着坐的人叫冯凯，互换了手机号码，后来过年时都发一条拜年短信。谢谢你！</p>\n<p>第三天早上（初七凌晨5点）到达深圳的时候，还没有地铁，呼吸着南方海面吹来的温热的空气，有点点海的腥味。就像老家初春时候一场春雨，混合着干燥了一冬的浮尘，你既要喜欢这春雨的温润，又要享受这土的腥味。总之吧，与在火车上局促的环境对比起来，现在终于回到地面上的幸福就是这么简单。伸伸窝了30个小时腰，看着东方的天慢慢白了。初七，按说年还没有过完。又是一年的开始了。等到6点多，地铁口开门，进地铁的都是刚下火车的人，拖着疲惫的身躯，拉着或者背着行李，也都要开始为这一整年的生计打算了。</p>\n<p>回到住的地方，想想出了好几瓶水的汗量，不臭都难，与我合租的伙伴还没来，烧了热水洗了个澡，躺在床上就睡着了，脑袋里还是火车哐哐的声音，等起来都下午4、5点了，还是不想吃东西，仍是只喝水。果然，接下来的两三天，仍然没有食欲，有些轻微便血，尿也相当黄，等过了几天好些能吃东西的时候，第一次也就感觉是重生了。此后几年，哪怕飞机再贵，打死都不去挤火车了，除非是有卧铺。不过也又一次买了坐票在一个不是高峰期回去的。过年的时候其实这一路[西安到深圳的火车路]本身也没有啥可看的。13年开了高铁，把原本30个小时的路程缩短到10个小时。不过我现在不太喜欢高铁，太快！我说的太快啊，就是眼前的景色一晃就过去了，看到个景也就是个影子。那火车就不同了，远远的可以看到前面有一树花，你有足够的时间准备，有足够的时间送别。最主要的是，火车在上饶的时候，你可以下去买烤鸭腿吃，哈哈吃货本性尽显。不过前提是，要在舒适的火车环境里。像我上面说的那种，不要想了，太奢侈。</p>\n<p>这一路最好的时节应该是4月底，5月一整月吧，整个中国都是很舒服的季节，南方还没有热到冒汗，北方又刚刚过了初春的洗礼，所有的植物都在拼命的生长，各种花，各种叶子，拼了命的呼吸，北方也散了聚集一冬的雾霾，天也能达到深圳的蓝。反正就是吧，如果你这段时间有时间，那就买张卧铺票，带上水果和清爽的黄瓜(黄瓜是什么鬼，答:黄瓜是火车上的最爽口的食材)。无论是从南方到北方的那个城市，或者是从北方的哪个城市去南方，这个方案都是不错的选择。行一路，大江南北，一路春光，时间可以慢些，我也希望这火车不要太快，慢些最好。</p>\n<p>有时候我们就是走的太着急，忘了慢下来看看身上有没有落下的尘，轻轻佛去，继续前行。</p>\n<p>哎哟喂，骚年，又发……呃抒情了啊……</p>\n<p>上面讲了无锡出差时的村里人。回到大城市吧，再讲讲城市人。再回去时，部门里又来了几个新人，有个据说是被部门老大从客户甲方拉回来的，后来证实就是的，都结婚了。哈哈，我也都成了个老人了，其实还不能算作老人，因为部门里的老人们，除了口口叫我傻B，其他人都叫我小涛，所以啊，我借着这个小涛，享受了好几年部门里小辈的待遇，就是吧大家对我都很好，反正我最小，咋地吧！嘚瑟不？欠打不？</p>\n<p>先说说我师父吧，我们称作郑老师，我直接喊师傅，其实比我也就大一两岁吧，广东揭阳人，先前宫里招太监都不去这里招，为啥嘞，因为贵地的人把吃饭读作“驾崩”，皇上听到还不得吐一盆血啊。听同事们说，我还有个师哥，名字他们起先常说，后来说的少了，我就忘记了。6年多了吧，我一直都是师傅师傅喊，也不厌。师傅跟老肖一样，总是笑呵呵的。不像我，喜怒总挂在脸上，要不就是面无表情，很那接近的样子，还闷骚的要死。广东揭阳潮汕地区的人喜饮茶，师傅也不例外，每天早上上班前的第一件事，就是去洗杯子，泡茶。师傅的桌子上总是好几种茶，从无锡出差回来，特意给买了盏紫砂的茶壶。前面讲过了，EAS、BOS比较难搞，尤其是对刚毕业的人来说，那玩意就跟一团乱麻一样。启动个BOS要半个小时，启动下运行时环境要2、3分钟的样子，那时候有个调侃啊，就是点了启动EAS的时候，就去接个水啊上个厕所之类的，回来的时候差不多就好了，师傅对EAS和BOS那套东西玩的好溜，师傅比较聪明我比较笨，哈哈。但是师傅呢不嫌我笨，有时候同一个问题问到第三遍了，他就真烦了……哈哈。但是还是会告诉我怎么回事怎么解决云云，我个不长记性的家伙，也不知道记录下问题，现在想想，当时怎么那么懒，又笨又懒。哈哈。后来搬去跟师傅住在了一个城中村，住隔壁楼栋，这个村子住了我们部门好多同事，跟个部门根据地似得。起先的两年吧，师傅还是一个人，后来隐婚了，真的隐婚了，很突然的有了师娘，哈哈。自从有了师娘，师傅就很少出来跟我们活动了，师娘跟师傅是同一个地方的，由于住隔壁栋的原因。我是不是过去蹭饭，师傅师娘做的饭很好吃，是广东沿海地区特色的餐食风格，清淡却很有食材的原味，每次去我都吃到光盘子，我一点都不见外，哈哈。有直接煎的海鱼，还有广东人最喜欢煲的汤，还有次专门为我包了蒸饺，虽然吧整出来散了，不过真是我们三个，额不对，是四个，哈哈那个时候师娘已经是准妈妈了，这里再次恭喜师傅荣升爸比职称，哈哈。从师傅这里学会了煎鱼，有几次跟师傅去海鲜市场买食材，师傅常去的那家鱼档，后来我经常光顾，因为师傅常去，我也常去，没别的，就是因为信任我师傅，鱼档老板从来没坑过我，而且鱼也给我弄的很干净。因为老家深处内陆，小时候很少吃鱼。所以我很喜欢吃鱼，自从会做偷师学的煎海鱼之后，吃了个爽。</p>\n<p>师傅，后来很少联系了，不联系不代表忘记，有些记忆是忘不掉的，零售也永远不会忘记，这里的人都很好，对我好，让我个初涉世的毛头小子，感受到了大家庭的温暖。</p>\n<p>除过以上已经出现的同学们，喂现在开始点名了。</p>\n<p>成程哥，云南人，成程哥是个烟友，就是这么莫名其妙的认识，几根烟就可以很相熟，后来做了成程哥的几个项目，挣了些烟钱。另外成程哥也是个大厨，有次去了他那边，成程哥光着膀子给我们做水煮鱼还是什么来着，模糊了，那个假期我刚好在广州玩，成程哥给我打电话，在哪呢？能回来不？到了深圳直接从罗湖火车站过来哈！有饭吃我岂能推诿啊，我就屁颠屁颠的从广州回到了深圳，到了罗湖去了。其实成程哥我觉得一直都是个大哥一样的人，跟我有些像吧，但比我成熟的多。他也弹吉他，我是买了一把陪我寂寞的，到现在也是乱弹琴，成程哥已经会写弹唱了，一次我们在坪洲一个韩国烤肉的店里，点了两瓶真露，一人一瓶，这酒度数不高后劲挺大，喝着喝着聊着聊着不知不觉就晕了，两个人踉踉跄跄的，成程哥趁着酒劲抱着我那把吉他，就开始唱，唱的跟个流氓一样，哈哈。歌词我记住了两句:姑娘姑娘那个美啊，小伙小伙那个浪啊，云云。后来成程哥去澳洲待了一年左右，回来我们仍然联系。现在也少了。哦对了，成程哥也喊我师傅叫师傅，这么算下来我是你师哥啊。我这脑子，现在才反应过来……</p>\n<p>还有与我合租了半年多的老莫，也是广东人，眼神很深邃，很会做饭，我有好些菜都是跟他学的，此人极喜欢酱油，导致我后来做菜也都喜欢放酱油，广东人注重养生，比较清淡，反而这半年他被我带的口味重了些，我很喜欢吃广东的肠粉，他竟然在我住了1年多的村子里找到了地道的肠粉店，老板是广东人，只做早点，老头老太太两口子，只早上7点到10点之间出摊，肠粉是限量的，就那么三两桶米浆，卖完了就完了，老板娘的普通话不是很好，每次都用很奇怪的语调问我:要木要la(二声)jiu(三声)。其实在这店里吧，很能找到广东早茶的那种感觉，虽然很简陋，只有五六张桌子，老板家的茶很好喝，尤其是早上吃早点的时候，有甜甜的味道。肠粉很爽口，用老莫的话，就是很”滑”，好像是这个字吧，也模糊了。听着小摊对面大榕树上鸟的叫声，喝着清甜的茶，吃着爽口的肠粉，忽然觉得，深圳这座城还是挺美的。</p>\n<p>在深圳的时候，最喜欢的就是徒步了，只要不是城中村这种极其难治理的地方，主街道还是很干净的，不算有组织的那种徒步，我自己私下里走的，按我的话，已横穿了深圳，因为我对深圳的定义，就是罗湖火车站到机场，其他的地方都算郊区，因为我没去过，哈哈就这么任性。私下里的徒步分两次，第一次跟顺爷，我俩也不知道是谁最先提出来的，反正就是这么的臭味相投，一排即和，我们早上从白石洲开始走，先走到红树林，再沿着红树林往罗湖方向走，到了福田的时候，天就开始下雨了，俩傻B都没有伞，躲到福田某个立交桥下的桥洞里躲雨，我的手机还是安卓1.6系统的摩托罗拉里程碑，那时候已算是第一代智能手机了，也在这次雨中壮烈的暂时牺牲了(后来检查是屏幕进水了，自己在淘宝淘了块屏幕换上了)。雨停了，我们继续往罗湖走，在福田，我们俩已经累成了傻子，中午到饭点，我俩进了一家猪脚饭的店还是啥店来着，也模糊了。这时候我们已笑不出声了，相对而视，嘴角上扬，轻蔑的从喉咙里发出哼的一声，就代表我们笑过了，是对笑，俩傻逼，哈哈。吃完饭我们继续走，这时候腿估计已经麻木了，没有疼的感觉，只是觉得累，终于，在下午四点半左右的样子到达深圳罗湖口岸，于是就有了顺爷那张光脚、我跟个木鸡一样站在罗湖口岸门口的照片。罗湖口岸有地铁直达白石洲，这也是为啥选择徒步到罗湖口岸的原因。累成俩傻子。假期过后，又被同事们笑成俩傻子。不过，这次徒步，让我收获了我最喜欢的一张照片：扶桑花，长得那么傲人，又刚下过雨，展现出极强的生命力。第二次徒步我是自己走的，没叫顺爷，也没通知谁，就自己走。出发地仍然是白石洲，目标宝安国际机场[老机场]，这次的距离和去罗湖的距离差不多。但是是一个人了，出发时已经中午了，选了大冲地铁口的肯德基搞定了中午饭，满满的能量，预计12点的时候正式出发，沿深南大道上宝安大道，沿宝安大道直走就到机场了，就这么简单。这天的天是小阴天，有些风，很爽，走的出汗，风一吹，你自己体会下这种感觉。走到宝体的时候，由于鞋子的原因，脚上起了泡，幸亏我有准备，马上换上了包里带着换的一双新袜子，再在街道边上的商店买了双厚的棉垫子，舒服了些，水泡不在长大，踩了几公里之后竟然消失，也不知道是破了还是散了。走到宝安大道过了宝体的样子，其实脑袋已经开始放空了，开始注意宝安大道上的指路牌，机场10KM……开始骂自己傻，机场3.2KM……开始骂机场傻，建那么远，到了机场，下午16点19分，拍了张照。也真是没啥可看的，飞机起落也不是在宝安大道这边。绕道上天桥进机场东地铁站，腿已麻木。这次是个周末，没有像第一次那样是国庆，可以有好几天休息，这次惨了，第二天就要上班了，这两条腿哟，已经不是自己的了，从大冲地铁口走到公司，还有700米左右，是两条腿相互拖着，再加上一双手拽着走过的，从来没有觉得700米可以这么长。不用说，到了公司，又被同事们笑成傻子。可是傻的这两段记忆，已经钉在我的记忆里，对我来说，非常值得。后来参加了一次磨坊组织的深圳百公里徒步，只走了半程，虽然脑袋也放空了，但觉得太赶，大家只顾走路了，又是晚上，行至梧桐山山里时，志愿者一个一个的都是骗子，明明二签还有还有好几公里路，却在那边对我们喊：加油，快到了，拐了前面那个弯就到了！我们都大喊：骗子、骗子！！！然而心里却十分感激。到了梧桐山签到处，脚已经起水泡起的厉害，不能继续，就此结束吧。彼时凌晨4点，距离第一班公交发车还有2个小时。我们就捡了些红牛的箱子铺在地上躺在上面，望着还没落下的月亮和星辰，感受这空山的寂静。</p>\n<p>旅行是一场身体和思想都在路上的修行，眼睛看到的，未必是会深入脑海，但身体和眼睛同时感受到的，大多会留下来，成为一辈子的财富。</p>\n<p>我喜欢走到脑袋放空时的感觉。这时候我才能感觉到我是一个人而不是一只蚂蚁。</p>\n<p>额，扯的越来越多了，感觉要写不完了。零售就写到这里吧。接下来各位看官请随我走进第二个部门，BI(Business Intelligence)商业智能。不要被这牛哄哄的名字亮瞎，其实做的事情，远远挖掘不出啤酒和尿不湿的关系。说白了就是数字报表+好看的图表。</p>\n<p>先介绍下这个部门吧。入职的第一天，老戴[也是老大]领我到部部门，我坐在我的第一个办公位上，两个办公位的连接处放了一本公司画册，我就随手翻了翻。其中印象最深的就是乔昕明的介绍，胖胖的形态有些像高晓松[可百度搜索乔昕明第一个领英的照片]，2009年的时候他的扩展报表工具一举拿下了当年的一等奖。从此这个名字就在我的脑子里扎下了根。所以2013年零售部发生人事变动的时候，我有机会进入BI商业智能事业部(前身是扩展报表项目组)，于是我就放弃了可能会有N+1赔偿的裁员机会，进入了乔昕明领导下的BI事业部。有两方面原因：一个就是因为老乔的光环，一个是因为被BI这个名词给忽悠了。这里有必要介绍下老乔，资深的软件架构+资深的软件研发，总之就是神级的人物，我的印象了里，四楼中间的回忆室旁边，总能看到老乔的身影，一副森海塞尔的头戴式大耳机，一部苹果笔记本，还有些凌乱的稿纸，就是老乔的办公位了。其实老乔有办公位，就在BI部门的领导位上，可老乔很少过去，所以在BI部看来，老乔自从BI事业部成立空降了个产品经理之后，貌似已经是不再关心这个BI部了。也许他从一开始就知道新成立这个部门就是瞎胡闹吧。也有可能因为人，不表，不做长舌妇。</p>\n<p>BI事业部分离两个部门，一个是做BI分析解决方案，其实到底就完成了财务分析的方案。我就属于这个部门，做BI工具，具体是啥呢，就是把开源的kettle数据分析工具，包装成BI自己的产品，说白了就是换壳。这个组里，认识了大哥[*忠文，湖北土家族人，所以我也叫他土人。汽车4S事业部过来的，跟我一样的情况过来的。一脸的痘痘，夏天老穿的跟个归国华侨似得，冬天却又西装革履的，就差一条领带了.技术流，后来去了康拓普玩大数据]，宝哥[bruce，江苏人？模糊了，此部门的元老，研究僧毕业，瘦小精悍，技术好厉害，后来去了平安，让你给我要蔡学镛的签名都没要到]，阿甘[江西宜春人，资深测试，人不错，一脸胡髭，金蝶足球队的队长，会踢球的人缘一般都不会差，金蝶的员工我感觉他能认识一半吧，哈哈夸张了]，小龙[东北银，搞过扩展报表，后来搞前端，把报表的那坨东西又用js实现了一遍，BI内部后来发生组织变动的时候，有幸搭档做过一段时间portal，也是技术流的，后来去了腾讯].其实经常一起玩的是大哥，我们俩都是肉食动物，每次去找他玩，都是吃肉，时而喝点小酒。大哥是个无所不知的神人。你跟他聊什么都可以，他大学的专业是雷达与天线，厉害了我的哥。他大学在新疆上的，是个吃过手抓饭的，我们去的比较多的是他那边的巴依老爷，吃羊肉的地方。我是个饭桶，他是个吃货。我喜欢听他聊天，虽然有时候他天马行空的讲一些我听不懂的东西，他跟别人介绍自己的时候总是喜欢用明朝的大将李文忠开头。虽然大部分的人对李文忠是谁也不知道……他家里有茶树，清明谷雨过后，他爸会给他寄一些自己手工炒制的茶叶，我就沾个光，老去他那边蹭茶叶喝。这货喜欢喝啤酒，阳台上满满当当上百个啤酒瓶子。怪不得有啤酒肚。</p>\n<p>哦~说到大哥这些啤酒瓶我想起来了一件事，哈哈，顺便提一下，工作第二年的时候，喝可乐上瘾了，不要问我是怎么上瘾的，我也不知道。而且只喝香草口味的听装可乐，每次下班之后就去湾畔百货买4听，有时候打折我就买八听，那时候我没敢在公司喝，因为老戴也喝，我怕他跟我抢，哈哈。其实不是了，因为那时候有个段子说可乐杀精，问度娘，是谬论，当时做这个实验的是把精子直接泡在了可乐里，你这不是傻逼吗？你把青蛙腿打断了然后大喊吓青蛙，然后说青蛙没有耳朵听不到，因为对它大喊它没跳走。这都是啥实验环境啊？不过我也确实不敢再这样喝了，喝出病就麻烦了，而且接下来一年体检老检出高血压，是不是跟这个有关就无从可知了。半年下来，可乐的铝罐也攒了几百个。当时我住的地方楼下是个面馆，老板跟我是老乡，我去他那边吃饭，不为别的，就为讲几句陕西话，其实老板做的东西啊，确实不咋好吃，哈哈。我叫他哥，他跟他媳妇，还有两个儿子，一个已经上幼儿园，一个还在嗷嗷吃奶，他的老父亲也在那边，大叔抽的是旱烟。问题是他这个小儿子吧，放在推车里，就放在吃饭 的厅里，进进出出的人，孩子就老哭，一哭吧，他爷爷就去哄，他爷爷又是旱烟不离手，那个店朝北，本身就有些昏暗，再加上这样的环境，他家的生意也就不怎么样的感觉，反正我感觉就是有人去也是打包就走了。有次我去他那边吃饭，跟他聊天，他说他的大儿子捡瓶子自己挣钱花，哈哈，我就说我那里有好多的易拉罐，吃完饭跟我上去取去，他家的大儿子比较怕生，虽然我经常去跟他爸聊的也还不错，可这孩子挺羞涩的，也不跟我说句话，起先拿了个比较大的那种超市里的大塑料袋，我说太小了，哈哈。他爸爸又给他找了个好大的蛇皮袋子，我说差不多了便屁颠屁颠的跟我上楼去了，问题是等到上楼之后他看到这一堆的易拉罐也没有表现出很开心，还是羞羞涩涩的，我帮他装进袋子里，试着拎了下，有些小沉，就帮他一起提下去了，这些易拉罐估计可以换一个小玩具吧。小伙子，羞涩如我小时候啊，家里来人就躲进房间不出来啊。哈哈。后来我搬走了，还专门回去他那边吃了两次饭，聊聊天。</p>\n<p>我去……这段跑飞的严重了，回到BI吧。BI事业部的日常工作没有啥可讲的，能记住的还是出差。去的不远，在广东云浮。领导开车拉着我们四个过去的，忘记介绍这个领导了，叫学明，技术出身，对我们都很好，从开发和需求的两个角度看问题，不像有些领导，空降来的，天上掉落凡间的天屎吗？出差一行人：宝哥[坚强的技术后盾]、领导和阿甘[主要培训客户软件使用]、我[酱油]。学明和阿甘喜欢足球，那天晚上吃过晚饭，回到酒店，说有球赛，领导买了几瓶加几罐啤酒，买了酒鬼花生，瓜子。然后就开始看球了，我跟宝哥不怎么感兴趣，陪他们看，其实就是瞎看边聊天，出差的项目是温氏，几个农民合资起家的，整个县城估计都是仗着温氏吧，温氏总部的楼好气派，据说比他们县政府的还要气派，说的糙点：养鸡能养成这样，真是牛逼。临走时大家去当地买了土鸡蛋，我不记得我买了没，模糊了。</p>\n<p>写不出文字了，思绪已经被散乱的记忆打乱。这篇回忆录写了四年了，不想往下写了，或者说现在不想写了吧。接下来的两年有些起落，要写的东西太多，与前面这四年对比太强烈，风格也要完全不一样，再构思一下吧。先就此止笔。</p>\n<p>标题也不改了，也许空白几年也好。</p>\n<p>回忆越忆越漫长，如人生路，一个往前一个向后。毕业后的工作路是个极长期且没有毕业季的历程。</p>\n","sticky":0},{"title":"Ubuntu14.04.3LTS SSH登录乱码","date":"2016-03-08T06:35:25.000Z","_content":"ssh登陆后，执行：\n``` bash\nexport LANG=zh_CN.gb2312\n```\n就可以显示中文了。\n编辑/etc/sysconfig/i18n 将LANG=”zh_CN.UTF-8″ 改为 LANG=”zh_CN.GB18030″ 可永久显示中文\n\nubuntu14.04.3LTS中：\n``` bash\nvim /var/lib/locales/supported.d/local\n```\n#添加下面的中文字符集\nzh_CN.GBK GBK\nzh_CN.GB2312 GB2312\nzh_CN.GB18030 GB18030\n然后执行\n``` bash\n#dpkg-reconfigure locales\n```","source":"_posts/linux/2016-03-08-ubuntu-14.04.3LTS-ssh-unreadable-code.md","raw":"title: Ubuntu14.04.3LTS SSH登录乱码\ndate: 2016/03/08 14:35:25\ncategories:\n- Ubuntu Linux\ntags: [Linux,SSH]\n---\nssh登陆后，执行：\n``` bash\nexport LANG=zh_CN.gb2312\n```\n就可以显示中文了。\n编辑/etc/sysconfig/i18n 将LANG=”zh_CN.UTF-8″ 改为 LANG=”zh_CN.GB18030″ 可永久显示中文\n\nubuntu14.04.3LTS中：\n``` bash\nvim /var/lib/locales/supported.d/local\n```\n#添加下面的中文字符集\nzh_CN.GBK GBK\nzh_CN.GB2312 GB2312\nzh_CN.GB18030 GB18030\n然后执行\n``` bash\n#dpkg-reconfigure locales\n```","slug":"linux/2016-03-08-ubuntu-14.04.3LTS-ssh-unreadable-code","published":1,"updated":"2018-05-15T07:42:34.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8f9000o2wh5th7nwwku","content":"<p>ssh登陆后，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> LANG=zh_CN.gb2312</span><br></pre></td></tr></table></figure></p>\n<p>就可以显示中文了。<br>编辑/etc/sysconfig/i18n 将LANG=”zh_CN.UTF-8″ 改为 LANG=”zh_CN.GB18030″ 可永久显示中文</p>\n<p>ubuntu14.04.3LTS中：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /var/lib/locales/supported.d/<span class=\"built_in\">local</span></span><br></pre></td></tr></table></figure></p>\n<p>#添加下面的中文字符集<br>zh_CN.GBK GBK<br>zh_CN.GB2312 GB2312<br>zh_CN.GB18030 GB18030<br>然后执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#dpkg-reconfigure locales</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ssh登陆后，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> LANG=zh_CN.gb2312</span><br></pre></td></tr></table></figure></p>\n<p>就可以显示中文了。<br>编辑/etc/sysconfig/i18n 将LANG=”zh_CN.UTF-8″ 改为 LANG=”zh_CN.GB18030″ 可永久显示中文</p>\n<p>ubuntu14.04.3LTS中：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /var/lib/locales/supported.d/<span class=\"built_in\">local</span></span><br></pre></td></tr></table></figure></p>\n<p>#添加下面的中文字符集<br>zh_CN.GBK GBK<br>zh_CN.GB2312 GB2312<br>zh_CN.GB18030 GB18030<br>然后执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#dpkg-reconfigure locales</span></span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"cron表达式","date":"2016-03-22T10:54:25.000Z","_content":"# CronTrigger配置格式\n\n格式: 秒   分   时  日   月   周   年 \n\n| 序号 | 说明 | 是否必填 | 可填写的值 | 可用的通配符 |\n|:--|:--:|:--:|:--:|:------|\n|1|  秒  |   是    |   0-59   |  , – \\* /|\n|2|  分  |   是    |   0-59   |  , – \\* /|\n|3|  时  |   是    |   0-23   |  , – \\* /|\n|4|  日  |   是    |   1-31   |  , – \\* ? / L W|\n|5|  月  |   是    |   1-12 or JAN-DEC      \t|\t, – \\* /        \t|\n|6|  周  |   是    |   1-7 or SUN-SAT        |\t, – \\* ? / L #\t|\n|7|  年  |   否    |   empty 或 1970-2099\t|\t, – \\* /        \t|\n\n| 表达式 | 解释 |\n|:-----|:------|\n|`0 0 12 * * ?`|在天天中午12：00触发|\n|`0 15 10 ? * *`| 天天上午10:15 触发|\n|`0 15 10 * * ?`| 天天上午10:15 触发|\n|`0 15 10 * * ? *`| 天天上午10:15 触发|\n|`0 15 10 * * ? 2005`| 在2005年中的天天上午10:15 触发|\n|`0 * 14 * * ?`| 天天在下午2：00至2：59之间每分钟触发一次|\n|`0 0/5 14 * *?`| 天天在下午2：00至2：59之间每5分钟触发一次|\n|`0 0/5 14,18 * * ?`| 天天在下午2：00至2：59和6：00至6：59之间的每5分钟触发一次|\n|`0 0-5 14 * * ?`| 天天在下午2：00至2：05之间每分钟触发一次|\n|`0 10,44 14 ? 3 WED`| 每三月份的星期三在下午2：00和2：44时触发|\n|`0 15 10 ? * MON-FRI`| 从星期一至星期五的天天上午10：15触发|\n|`0 15 10 15 * ?`| 在每个月的每15天的上午10：15触发|\n|`0 15 10 L * ?`| 在每个月的最后一天的上午10：15触发|\n|`0 15 10 ? * 6L`| 在每个月的最后一个星期五的上午10：15触发|\n|`0 15 10 ? * 6L 2002-2005`| 在2002, 2003, 2004 and 2005年的每个月的最后一个星期五的上午10：15触发|\n|`0 15 10 ? * 6#3`| 在每个月的第三个星期五的上午10：15触发|\n|`0 0 12 1/5 * ?`| 从每月的第一天起每过5天的中午12：00时触发|\n|`0 11 11 11 11 ?`| 在每个11月11日的上午11：11时触发|\n\n","source":"_posts/linux/2016-03-22-cron-expression.md","raw":"title: cron表达式\ndate: 2016/03/22 18:54:25\ncategories:\n- Linux\ntags: [cron]\n---\n# CronTrigger配置格式\n\n格式: 秒   分   时  日   月   周   年 \n\n| 序号 | 说明 | 是否必填 | 可填写的值 | 可用的通配符 |\n|:--|:--:|:--:|:--:|:------|\n|1|  秒  |   是    |   0-59   |  , – \\* /|\n|2|  分  |   是    |   0-59   |  , – \\* /|\n|3|  时  |   是    |   0-23   |  , – \\* /|\n|4|  日  |   是    |   1-31   |  , – \\* ? / L W|\n|5|  月  |   是    |   1-12 or JAN-DEC      \t|\t, – \\* /        \t|\n|6|  周  |   是    |   1-7 or SUN-SAT        |\t, – \\* ? / L #\t|\n|7|  年  |   否    |   empty 或 1970-2099\t|\t, – \\* /        \t|\n\n| 表达式 | 解释 |\n|:-----|:------|\n|`0 0 12 * * ?`|在天天中午12：00触发|\n|`0 15 10 ? * *`| 天天上午10:15 触发|\n|`0 15 10 * * ?`| 天天上午10:15 触发|\n|`0 15 10 * * ? *`| 天天上午10:15 触发|\n|`0 15 10 * * ? 2005`| 在2005年中的天天上午10:15 触发|\n|`0 * 14 * * ?`| 天天在下午2：00至2：59之间每分钟触发一次|\n|`0 0/5 14 * *?`| 天天在下午2：00至2：59之间每5分钟触发一次|\n|`0 0/5 14,18 * * ?`| 天天在下午2：00至2：59和6：00至6：59之间的每5分钟触发一次|\n|`0 0-5 14 * * ?`| 天天在下午2：00至2：05之间每分钟触发一次|\n|`0 10,44 14 ? 3 WED`| 每三月份的星期三在下午2：00和2：44时触发|\n|`0 15 10 ? * MON-FRI`| 从星期一至星期五的天天上午10：15触发|\n|`0 15 10 15 * ?`| 在每个月的每15天的上午10：15触发|\n|`0 15 10 L * ?`| 在每个月的最后一天的上午10：15触发|\n|`0 15 10 ? * 6L`| 在每个月的最后一个星期五的上午10：15触发|\n|`0 15 10 ? * 6L 2002-2005`| 在2002, 2003, 2004 and 2005年的每个月的最后一个星期五的上午10：15触发|\n|`0 15 10 ? * 6#3`| 在每个月的第三个星期五的上午10：15触发|\n|`0 0 12 1/5 * ?`| 从每月的第一天起每过5天的中午12：00时触发|\n|`0 11 11 11 11 ?`| 在每个11月11日的上午11：11时触发|\n\n","slug":"linux/2016-03-22-cron-expression","published":1,"updated":"2018-05-15T07:42:34.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8fc000s2wh56k5iytub","content":"<h1 id=\"CronTrigger配置格式\"><a href=\"#CronTrigger配置格式\" class=\"headerlink\" title=\"CronTrigger配置格式\"></a>CronTrigger配置格式</h1><p>格式: 秒   分   时  日   月   周   年 </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:center\">说明</th>\n<th style=\"text-align:center\">是否必填</th>\n<th style=\"text-align:center\">可填写的值</th>\n<th style=\"text-align:left\">可用的通配符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:center\">秒</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:center\">分</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:center\">时</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">0-23</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:center\">日</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">1-31</td>\n<td style=\"text-align:left\">, – * ? / L W</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:center\">月</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">1-12 or JAN-DEC</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:center\">周</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">1-7 or SUN-SAT</td>\n<td style=\"text-align:left\">, – * ? / L #</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:center\">年</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">empty 或 1970-2099</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">表达式</th>\n<th style=\"text-align:left\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>0 0 12 * * ?</code></td>\n<td style=\"text-align:left\">在天天中午12：00触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * *</code></td>\n<td style=\"text-align:left\">天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 * * ?</code></td>\n<td style=\"text-align:left\">天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 * * ? *</code></td>\n<td style=\"text-align:left\">天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 * * ? 2005</code></td>\n<td style=\"text-align:left\">在2005年中的天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 * 14 * * ?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：59之间每分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0/5 14 * *?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：59之间每5分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0/5 14,18 * * ?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：59和6：00至6：59之间的每5分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0-5 14 * * ?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：05之间每分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 10,44 14 ? 3 WED</code></td>\n<td style=\"text-align:left\">每三月份的星期三在下午2：00和2：44时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * MON-FRI</code></td>\n<td style=\"text-align:left\">从星期一至星期五的天天上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 15 * ?</code></td>\n<td style=\"text-align:left\">在每个月的每15天的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 L * ?</code></td>\n<td style=\"text-align:left\">在每个月的最后一天的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * 6L</code></td>\n<td style=\"text-align:left\">在每个月的最后一个星期五的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * 6L 2002-2005</code></td>\n<td style=\"text-align:left\">在2002, 2003, 2004 and 2005年的每个月的最后一个星期五的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * 6#3</code></td>\n<td style=\"text-align:left\">在每个月的第三个星期五的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0 12 1/5 * ?</code></td>\n<td style=\"text-align:left\">从每月的第一天起每过5天的中午12：00时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 11 11 11 11 ?</code></td>\n<td style=\"text-align:left\">在每个11月11日的上午11：11时触发</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"CronTrigger配置格式\"><a href=\"#CronTrigger配置格式\" class=\"headerlink\" title=\"CronTrigger配置格式\"></a>CronTrigger配置格式</h1><p>格式: 秒   分   时  日   月   周   年 </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:center\">说明</th>\n<th style=\"text-align:center\">是否必填</th>\n<th style=\"text-align:center\">可填写的值</th>\n<th style=\"text-align:left\">可用的通配符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:center\">秒</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:center\">分</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:center\">时</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">0-23</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:center\">日</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">1-31</td>\n<td style=\"text-align:left\">, – * ? / L W</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:center\">月</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">1-12 or JAN-DEC</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:center\">周</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">1-7 or SUN-SAT</td>\n<td style=\"text-align:left\">, – * ? / L #</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:center\">年</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">empty 或 1970-2099</td>\n<td style=\"text-align:left\">, – * /</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">表达式</th>\n<th style=\"text-align:left\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>0 0 12 * * ?</code></td>\n<td style=\"text-align:left\">在天天中午12：00触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * *</code></td>\n<td style=\"text-align:left\">天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 * * ?</code></td>\n<td style=\"text-align:left\">天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 * * ? *</code></td>\n<td style=\"text-align:left\">天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 * * ? 2005</code></td>\n<td style=\"text-align:left\">在2005年中的天天上午10:15 触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 * 14 * * ?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：59之间每分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0/5 14 * *?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：59之间每5分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0/5 14,18 * * ?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：59和6：00至6：59之间的每5分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0-5 14 * * ?</code></td>\n<td style=\"text-align:left\">天天在下午2：00至2：05之间每分钟触发一次</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 10,44 14 ? 3 WED</code></td>\n<td style=\"text-align:left\">每三月份的星期三在下午2：00和2：44时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * MON-FRI</code></td>\n<td style=\"text-align:left\">从星期一至星期五的天天上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 15 * ?</code></td>\n<td style=\"text-align:left\">在每个月的每15天的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 L * ?</code></td>\n<td style=\"text-align:left\">在每个月的最后一天的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * 6L</code></td>\n<td style=\"text-align:left\">在每个月的最后一个星期五的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * 6L 2002-2005</code></td>\n<td style=\"text-align:left\">在2002, 2003, 2004 and 2005年的每个月的最后一个星期五的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 15 10 ? * 6#3</code></td>\n<td style=\"text-align:left\">在每个月的第三个星期五的上午10：15触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 0 12 1/5 * ?</code></td>\n<td style=\"text-align:left\">从每月的第一天起每过5天的中午12：00时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>0 11 11 11 11 ?</code></td>\n<td style=\"text-align:left\">在每个11月11日的上午11：11时触发</td>\n</tr>\n</tbody>\n</table>\n","sticky":0},{"title":"ubuntu将字符集设置为英文","date":"2016-06-13T02:00:25.000Z","_content":"\nubuntu安装时选择了中文安装环境，安装结束后字符集变为乱码，以下设置将会将终端字符集设置为英文\n```\n#sudo vim /etc/default/locale\n中文设置为：\nLANG=\"zh_CN.UTF-8\"\nLANGUAGE=\"zh_CN:zh\"\nLANG=\"zh_CN.UTF-8\"\nLANGUAGE=\"zh_CN:zh\"\n修改为：\nLANG=\"en_US.UTF-8\"\nLANGUAGE=\"en_US:en\"\nLANG=\"en_US.UTF-8\"\nLANGUAGE=\"en_US:en\"\n```\n\n","source":"_posts/linux/2016-06-13-ubuntu14-04-change-charset-from-cn-to-en.md","raw":"title: ubuntu将字符集设置为英文\ndate: 2016/06/13 10:00:25\ncategories:\n- Ubuntu Linux\ntags: [ubuntu,charset]\n---\n\nubuntu安装时选择了中文安装环境，安装结束后字符集变为乱码，以下设置将会将终端字符集设置为英文\n```\n#sudo vim /etc/default/locale\n中文设置为：\nLANG=\"zh_CN.UTF-8\"\nLANGUAGE=\"zh_CN:zh\"\nLANG=\"zh_CN.UTF-8\"\nLANGUAGE=\"zh_CN:zh\"\n修改为：\nLANG=\"en_US.UTF-8\"\nLANGUAGE=\"en_US:en\"\nLANG=\"en_US.UTF-8\"\nLANGUAGE=\"en_US:en\"\n```\n\n","slug":"linux/2016-06-13-ubuntu14-04-change-charset-from-cn-to-en","published":1,"updated":"2018-05-15T07:42:34.222Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8fd000u2wh5b8s2cg3a","content":"<p>ubuntu安装时选择了中文安装环境，安装结束后字符集变为乱码，以下设置将会将终端字符集设置为英文<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#sudo vim /etc/default/locale</span></span><br><span class=\"line\">中文设置为：</span><br><span class=\"line\">LANG=<span class=\"string\">\"zh_CN.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"zh_CN:zh\"</span></span><br><span class=\"line\">LANG=<span class=\"string\">\"zh_CN.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"zh_CN:zh\"</span></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">LANG=<span class=\"string\">\"en_US.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"en_US:en\"</span></span><br><span class=\"line\">LANG=<span class=\"string\">\"en_US.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"en_US:en\"</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ubuntu安装时选择了中文安装环境，安装结束后字符集变为乱码，以下设置将会将终端字符集设置为英文<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#sudo vim /etc/default/locale</span></span><br><span class=\"line\">中文设置为：</span><br><span class=\"line\">LANG=<span class=\"string\">\"zh_CN.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"zh_CN:zh\"</span></span><br><span class=\"line\">LANG=<span class=\"string\">\"zh_CN.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"zh_CN:zh\"</span></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">LANG=<span class=\"string\">\"en_US.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"en_US:en\"</span></span><br><span class=\"line\">LANG=<span class=\"string\">\"en_US.UTF-8\"</span></span><br><span class=\"line\">LANGUAGE=<span class=\"string\">\"en_US:en\"</span></span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"Ubuntu基础设置","date":"2016-08-01T06:10:25.000Z","_content":"\n## ssh\n1.检查是否启动\n```\nsudo ps -e |grep ssh\n```\n2.修改配置允许root登陆：\n```\nvim /etc/ssh/sshd_confg\n```\n找到：修改PermitRootLogin 为 PermitRootLogin yes\n```\nservice ssh stop\nservice ssh start\n```\n\n## 固定IP\n```\nvim /etc/network/interfaces\n```\n添加如下信息\n```\n# The primary network interface\nauto eth0\niface eth0 inet static\naddress 192.168.8.150\nnetmask 255.255.255.0\ngateway 192.168.8.1\n```\nDNS\n```\nvim /etc/resolv.conf  && vim /etc/resolvconf/resolv.conf.d/base\n```\n写入相同的内容:\n```\nnameserver 192.168.8.1\nnameserver 8.8.8.8\n```\n\n## 设置主机名\n```\necho nginx.master >/etc/hostname\n```\n\n## 设置时区\n```\ntzselect\nntpdate time.windows.com\n```\n\n","source":"_posts/linux/2016-08-01-ubuntu-base-setting.md","raw":"title: Ubuntu基础设置\ndate: 2016/08/01 14:10:25\ncategories:\n- Ubuntu Linux\ntags: [Linux,Ubuntu]\n---\n\n## ssh\n1.检查是否启动\n```\nsudo ps -e |grep ssh\n```\n2.修改配置允许root登陆：\n```\nvim /etc/ssh/sshd_confg\n```\n找到：修改PermitRootLogin 为 PermitRootLogin yes\n```\nservice ssh stop\nservice ssh start\n```\n\n## 固定IP\n```\nvim /etc/network/interfaces\n```\n添加如下信息\n```\n# The primary network interface\nauto eth0\niface eth0 inet static\naddress 192.168.8.150\nnetmask 255.255.255.0\ngateway 192.168.8.1\n```\nDNS\n```\nvim /etc/resolv.conf  && vim /etc/resolvconf/resolv.conf.d/base\n```\n写入相同的内容:\n```\nnameserver 192.168.8.1\nnameserver 8.8.8.8\n```\n\n## 设置主机名\n```\necho nginx.master >/etc/hostname\n```\n\n## 设置时区\n```\ntzselect\nntpdate time.windows.com\n```\n\n","slug":"linux/2016-08-01-ubuntu-base-setting","published":1,"updated":"2018-05-15T07:42:34.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8fe000y2wh5hrc0mbj0","content":"<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><p>1.检查是否启动<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"keyword\">ps</span> -<span class=\"keyword\">e</span> |<span class=\"keyword\">grep</span> ssh</span><br></pre></td></tr></table></figure></p>\n<p>2.修改配置允许root登陆：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>ssh<span class=\"regexp\">/sshd_confg</span></span><br></pre></td></tr></table></figure></p>\n<p>找到：修改PermitRootLogin 为 PermitRootLogin yes<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ssh stop</span><br><span class=\"line\">service ssh start</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"固定IP\"><a href=\"#固定IP\" class=\"headerlink\" title=\"固定IP\"></a>固定IP</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>network<span class=\"regexp\">/interfaces</span></span><br></pre></td></tr></table></figure>\n<p>添加如下信息<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The primary network interface</span></span><br><span class=\"line\">auto eth0</span><br><span class=\"line\">iface eth0 inet static</span><br><span class=\"line\">address 192.168.8.150</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\">gateway 192.168.8.1</span><br></pre></td></tr></table></figure></p>\n<p>DNS<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/resolv<span class=\"selector-class\">.conf</span>  &amp;&amp; vim /etc/resolvconf/resolv<span class=\"selector-class\">.conf</span><span class=\"selector-class\">.d</span>/base</span><br></pre></td></tr></table></figure></p>\n<p>写入相同的内容:<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nameserver</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"><span class=\"selector-tag\">nameserver</span> 8<span class=\"selector-class\">.8</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.8</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"设置主机名\"><a href=\"#设置主机名\" class=\"headerlink\" title=\"设置主机名\"></a>设置主机名</h2><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo nginx.<span class=\"keyword\">master</span> <span class=\"title\">&gt;/etc</span>/hostname</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置时区\"><a href=\"#设置时区\" class=\"headerlink\" title=\"设置时区\"></a>设置时区</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tzselect</span><br><span class=\"line\">ntpdate <span class=\"selector-tag\">time</span><span class=\"selector-class\">.windows</span><span class=\"selector-class\">.com</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><p>1.检查是否启动<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"keyword\">ps</span> -<span class=\"keyword\">e</span> |<span class=\"keyword\">grep</span> ssh</span><br></pre></td></tr></table></figure></p>\n<p>2.修改配置允许root登陆：<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>ssh<span class=\"regexp\">/sshd_confg</span></span><br></pre></td></tr></table></figure></p>\n<p>找到：修改PermitRootLogin 为 PermitRootLogin yes<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ssh stop</span><br><span class=\"line\">service ssh start</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"固定IP\"><a href=\"#固定IP\" class=\"headerlink\" title=\"固定IP\"></a>固定IP</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>network<span class=\"regexp\">/interfaces</span></span><br></pre></td></tr></table></figure>\n<p>添加如下信息<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The primary network interface</span></span><br><span class=\"line\">auto eth0</span><br><span class=\"line\">iface eth0 inet static</span><br><span class=\"line\">address 192.168.8.150</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\">gateway 192.168.8.1</span><br></pre></td></tr></table></figure></p>\n<p>DNS<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/resolv<span class=\"selector-class\">.conf</span>  &amp;&amp; vim /etc/resolvconf/resolv<span class=\"selector-class\">.conf</span><span class=\"selector-class\">.d</span>/base</span><br></pre></td></tr></table></figure></p>\n<p>写入相同的内容:<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nameserver</span> 192<span class=\"selector-class\">.168</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.1</span></span><br><span class=\"line\"><span class=\"selector-tag\">nameserver</span> 8<span class=\"selector-class\">.8</span><span class=\"selector-class\">.8</span><span class=\"selector-class\">.8</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"设置主机名\"><a href=\"#设置主机名\" class=\"headerlink\" title=\"设置主机名\"></a>设置主机名</h2><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo nginx.<span class=\"keyword\">master</span> <span class=\"title\">&gt;/etc</span>/hostname</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置时区\"><a href=\"#设置时区\" class=\"headerlink\" title=\"设置时区\"></a>设置时区</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tzselect</span><br><span class=\"line\">ntpdate <span class=\"selector-tag\">time</span><span class=\"selector-class\">.windows</span><span class=\"selector-class\">.com</span></span><br></pre></td></tr></table></figure>\n","sticky":0},{"title":"VBS发送邮件","date":"2016-03-22T10:38:25.000Z","_content":"没啥说的，直接代码 注意Textbody的编码\n```\nNameSpace = \"http://schemas.microsoft.com/cdo/configuration/\"\nSet Email = CreateObject(\"CDO.Message\")\nEmail.From = \"360**492*@qq.com\"\nEmail.To = \"chang*****@126.com\"\nEmail.Subject = \"主题\"\nEmail.Textbody = \"内容\"\nWith Email.Configuration.Fields\n.Item(NameSpace&\"sendusing\") = 2\n.Item(NameSpace&\"smtpserver\") = \"smtp.qq.com\"\n.Item(NameSpace&\"smtpserverport\") = 25\n.Item(NameSpace&\"smtpauthenticate\") = 1\n.Item(NameSpace&\"sendusername\") = \"36**8492*\"\n.Item(NameSpace&\"sendpassword\") = \"********\"\n.Update\nEnd With\nEmail.Send\n```","source":"_posts/system/2016-03-22-vbs-send-email.md","raw":"title: VBS发送邮件\ndate: 2016/03/22 18:38:25\ncategories:\n- windows\ntags: [vbs,email]\n---\n没啥说的，直接代码 注意Textbody的编码\n```\nNameSpace = \"http://schemas.microsoft.com/cdo/configuration/\"\nSet Email = CreateObject(\"CDO.Message\")\nEmail.From = \"360**492*@qq.com\"\nEmail.To = \"chang*****@126.com\"\nEmail.Subject = \"主题\"\nEmail.Textbody = \"内容\"\nWith Email.Configuration.Fields\n.Item(NameSpace&\"sendusing\") = 2\n.Item(NameSpace&\"smtpserver\") = \"smtp.qq.com\"\n.Item(NameSpace&\"smtpserverport\") = 25\n.Item(NameSpace&\"smtpauthenticate\") = 1\n.Item(NameSpace&\"sendusername\") = \"36**8492*\"\n.Item(NameSpace&\"sendpassword\") = \"********\"\n.Update\nEnd With\nEmail.Send\n```","slug":"system/2016-03-22-vbs-send-email","published":1,"updated":"2018-05-15T07:42:34.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8fh00112wh53dvr17er","content":"<p>没啥说的，直接代码 注意Textbody的编码<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">NameSpace</span> = <span class=\"string\">\"http://schemas.microsoft.com/cdo/configuration/\"</span></span><br><span class=\"line\"><span class=\"keyword\">Set</span> Email = CreateObject(<span class=\"string\">\"CDO.Message\"</span>)</span><br><span class=\"line\">Email.<span class=\"keyword\">From</span> = <span class=\"string\">\"360**492*@qq.com\"</span></span><br><span class=\"line\">Email.<span class=\"keyword\">To</span> = <span class=\"string\">\"chang*****@126.com\"</span></span><br><span class=\"line\">Email.Subject = <span class=\"string\">\"主题\"</span></span><br><span class=\"line\">Email.Textbody = <span class=\"string\">\"内容\"</span></span><br><span class=\"line\"><span class=\"keyword\">With</span> Email.Configuration.Fields</span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"sendusing\"</span>) = <span class=\"number\">2</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"smtpserver\"</span>) = <span class=\"string\">\"smtp.qq.com\"</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"smtpserverport\"</span>) = <span class=\"number\">25</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"smtpauthenticate\"</span>) = <span class=\"number\">1</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"sendusername\"</span>) = <span class=\"string\">\"36**8492*\"</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"sendpassword\"</span>) = <span class=\"string\">\"********\"</span></span><br><span class=\"line\">.Update</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br><span class=\"line\">Email.Send</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>没啥说的，直接代码 注意Textbody的编码<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">NameSpace</span> = <span class=\"string\">\"http://schemas.microsoft.com/cdo/configuration/\"</span></span><br><span class=\"line\"><span class=\"keyword\">Set</span> Email = CreateObject(<span class=\"string\">\"CDO.Message\"</span>)</span><br><span class=\"line\">Email.<span class=\"keyword\">From</span> = <span class=\"string\">\"360**492*@qq.com\"</span></span><br><span class=\"line\">Email.<span class=\"keyword\">To</span> = <span class=\"string\">\"chang*****@126.com\"</span></span><br><span class=\"line\">Email.Subject = <span class=\"string\">\"主题\"</span></span><br><span class=\"line\">Email.Textbody = <span class=\"string\">\"内容\"</span></span><br><span class=\"line\"><span class=\"keyword\">With</span> Email.Configuration.Fields</span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"sendusing\"</span>) = <span class=\"number\">2</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"smtpserver\"</span>) = <span class=\"string\">\"smtp.qq.com\"</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"smtpserverport\"</span>) = <span class=\"number\">25</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"smtpauthenticate\"</span>) = <span class=\"number\">1</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"sendusername\"</span>) = <span class=\"string\">\"36**8492*\"</span></span><br><span class=\"line\">.Item(<span class=\"keyword\">NameSpace</span>&amp;<span class=\"string\">\"sendpassword\"</span>) = <span class=\"string\">\"********\"</span></span><br><span class=\"line\">.Update</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">With</span></span><br><span class=\"line\">Email.Send</span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"VMware虚拟机关闭不掉的解决办法","date":"2016-03-22T10:50:25.000Z","_content":"杀进程是最终的解决方法，问题是怎么找到这个虚拟机进程\n\n每个虚拟机启动之后，都会产生两个进程，一个主进程vmware-vmx，另一个是代理进程vprintproxy\n\n打开任务管理器，显示出列“命令行”，vmware-vmx的命令行最后面参数就是每个虚拟机的唯一标示，然后去你要杀的虚拟机的文件夹找到vmware.log，找pipe然后找类似 \\\\.\\pipe\\vmxb6467e48d864ad84′ 然后在进程中找到这段类似的vmware-vmx进程，杀掉后vprintproxy会自己退出","source":"_posts/system/2016-03-22-vmware-cannot-shudown.md","raw":"title: VMware虚拟机关闭不掉的解决办法\ndate: 2016/03/22 18:50:25\ncategories:\n- VMware\ntags: [VMware]\n---\n杀进程是最终的解决方法，问题是怎么找到这个虚拟机进程\n\n每个虚拟机启动之后，都会产生两个进程，一个主进程vmware-vmx，另一个是代理进程vprintproxy\n\n打开任务管理器，显示出列“命令行”，vmware-vmx的命令行最后面参数就是每个虚拟机的唯一标示，然后去你要杀的虚拟机的文件夹找到vmware.log，找pipe然后找类似 \\\\.\\pipe\\vmxb6467e48d864ad84′ 然后在进程中找到这段类似的vmware-vmx进程，杀掉后vprintproxy会自己退出","slug":"system/2016-03-22-vmware-cannot-shudown","published":1,"updated":"2018-05-15T07:42:34.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8fj00132wh5bvv9ovak","content":"<p>杀进程是最终的解决方法，问题是怎么找到这个虚拟机进程</p>\n<p>每个虚拟机启动之后，都会产生两个进程，一个主进程vmware-vmx，另一个是代理进程vprintproxy</p>\n<p>打开任务管理器，显示出列“命令行”，vmware-vmx的命令行最后面参数就是每个虚拟机的唯一标示，然后去你要杀的虚拟机的文件夹找到vmware.log，找pipe然后找类似 \\.\\pipe\\vmxb6467e48d864ad84′ 然后在进程中找到这段类似的vmware-vmx进程，杀掉后vprintproxy会自己退出</p>\n","site":{"data":{}},"excerpt":"","more":"<p>杀进程是最终的解决方法，问题是怎么找到这个虚拟机进程</p>\n<p>每个虚拟机启动之后，都会产生两个进程，一个主进程vmware-vmx，另一个是代理进程vprintproxy</p>\n<p>打开任务管理器，显示出列“命令行”，vmware-vmx的命令行最后面参数就是每个虚拟机的唯一标示，然后去你要杀的虚拟机的文件夹找到vmware.log，找pipe然后找类似 \\.\\pipe\\vmxb6467e48d864ad84′ 然后在进程中找到这段类似的vmware-vmx进程，杀掉后vprintproxy会自己退出</p>\n","sticky":0},{"title":"Maven学习","date":"2016-08-01T03:10:25.000Z","_content":"\n# 基础命令\n### 拷贝依赖的jar\n拷贝依赖的jar包到`target-dependencies`  可指定目录`-DoutputDirectory=lib`\n```\n#scope \n#runtime : scope gives runtime and compile dependencies,\n#compile : scope gives compile, provided, and system dependencies,\n#test (default) : scope gives all dependencies,\n#provided : scope just gives provided dependencies,\n#system : \tscope just gives system dependencies.\n\nmvn dependency:copy-dependencies   -DincludeScope=compile -DoutputDirectory=lib\n```\n\n","source":"_posts/architecture/maven/2016-08-01-maven-learning.md","raw":"title: Maven学习\ndate: 2016/08/01 11:10:25\ncategories:\n- Maven\ntags: [Maven]\n---\n\n# 基础命令\n### 拷贝依赖的jar\n拷贝依赖的jar包到`target-dependencies`  可指定目录`-DoutputDirectory=lib`\n```\n#scope \n#runtime : scope gives runtime and compile dependencies,\n#compile : scope gives compile, provided, and system dependencies,\n#test (default) : scope gives all dependencies,\n#provided : scope just gives provided dependencies,\n#system : \tscope just gives system dependencies.\n\nmvn dependency:copy-dependencies   -DincludeScope=compile -DoutputDirectory=lib\n```\n\n","slug":"architecture/maven/2016-08-01-maven-learning","published":1,"updated":"2018-05-15T07:42:34.193Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8gq002w2wh5r04w9cnx","content":"<h1 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h1><h3 id=\"拷贝依赖的jar\"><a href=\"#拷贝依赖的jar\" class=\"headerlink\" title=\"拷贝依赖的jar\"></a>拷贝依赖的jar</h3><p>拷贝依赖的jar包到<code>target-dependencies</code>  可指定目录<code>-DoutputDirectory=lib</code><br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#scope </span></span><br><span class=\"line\"><span class=\"comment\">#runtime : scope gives runtime and compile dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#compile : scope gives compile, provided, and system dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#test (default) : scope gives all dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#provided : scope just gives provided dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#system : \tscope just gives system dependencies.</span></span><br><span class=\"line\"></span><br><span class=\"line\">mvn <span class=\"symbol\">dependency:</span>copy-dependencies   -DincludeScope=compile -DoutputDirectory=<span class=\"class\"><span class=\"keyword\">lib</span></span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h1><h3 id=\"拷贝依赖的jar\"><a href=\"#拷贝依赖的jar\" class=\"headerlink\" title=\"拷贝依赖的jar\"></a>拷贝依赖的jar</h3><p>拷贝依赖的jar包到<code>target-dependencies</code>  可指定目录<code>-DoutputDirectory=lib</code><br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#scope </span></span><br><span class=\"line\"><span class=\"comment\">#runtime : scope gives runtime and compile dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#compile : scope gives compile, provided, and system dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#test (default) : scope gives all dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#provided : scope just gives provided dependencies,</span></span><br><span class=\"line\"><span class=\"comment\">#system : \tscope just gives system dependencies.</span></span><br><span class=\"line\"></span><br><span class=\"line\">mvn <span class=\"symbol\">dependency:</span>copy-dependencies   -DincludeScope=compile -DoutputDirectory=<span class=\"class\"><span class=\"keyword\">lib</span></span></span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"安装rabbitmq","date":"2016-08-01T05:00:25.000Z","_content":"AMQP当中有四个概念非常重要\nvirtual host：虚拟主机\nexchange：交换机\nqueue：队列\nbinding：绑定\n\n## 持久化\n\n当你将消息发布到交换机的时候，可以指定一个标志“Delivery Mode”（投递模式）。根据你使用的AMQP的库不同，指定这个标志的方法可能不太一样。简单的说，就是将Delivery Mode设置成2，也就是持久的（persistent）即可。一般的AMQP库都是将Delivery Mode设置成1，也就是非持久的。所以要持久化消息的步骤如下：\n1、将交换机设成 durable。\n2、将队列设成 durable。\n3、将消息的 Delivery Mode 设置成2 。\n\n```\necho 'deb http://www.rabbitmq.com/debian/ testing main' | \\\n\t\tsudo tee /etc/apt/sources.list.d/rabbitmq.list\nwget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | \\\n\t\tsudo apt-key add -\napt-get install rabbitmq-server\nrabbitmq-plugins enable rabbitmq_management\ncd /etc/rabbitmq/\nvim rabbitmq.config  <-<--[{rabbit, [{loopback_users, []}]}].\nservice rabbitmq-server restart\n```","source":"_posts/architecture/mq/2016-08-01-install-rabbit-mq.md","raw":"title: 安装rabbitmq\ndate: 2016/08/01 13:00:25\ncategories:\n- MQ\ntags: [rabbitmq]\n---\nAMQP当中有四个概念非常重要\nvirtual host：虚拟主机\nexchange：交换机\nqueue：队列\nbinding：绑定\n\n## 持久化\n\n当你将消息发布到交换机的时候，可以指定一个标志“Delivery Mode”（投递模式）。根据你使用的AMQP的库不同，指定这个标志的方法可能不太一样。简单的说，就是将Delivery Mode设置成2，也就是持久的（persistent）即可。一般的AMQP库都是将Delivery Mode设置成1，也就是非持久的。所以要持久化消息的步骤如下：\n1、将交换机设成 durable。\n2、将队列设成 durable。\n3、将消息的 Delivery Mode 设置成2 。\n\n```\necho 'deb http://www.rabbitmq.com/debian/ testing main' | \\\n\t\tsudo tee /etc/apt/sources.list.d/rabbitmq.list\nwget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | \\\n\t\tsudo apt-key add -\napt-get install rabbitmq-server\nrabbitmq-plugins enable rabbitmq_management\ncd /etc/rabbitmq/\nvim rabbitmq.config  <-<--[{rabbit, [{loopback_users, []}]}].\nservice rabbitmq-server restart\n```","slug":"architecture/mq/2016-08-01-install-rabbit-mq","published":1,"updated":"2018-05-15T07:42:34.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8gs002x2wh5cjhkfh0i","content":"<p>AMQP当中有四个概念非常重要<br>virtual host：虚拟主机<br>exchange：交换机<br>queue：队列<br>binding：绑定</p>\n<h2 id=\"持久化\"><a href=\"#持久化\" class=\"headerlink\" title=\"持久化\"></a>持久化</h2><p>当你将消息发布到交换机的时候，可以指定一个标志“Delivery Mode”（投递模式）。根据你使用的AMQP的库不同，指定这个标志的方法可能不太一样。简单的说，就是将Delivery Mode设置成2，也就是持久的（persistent）即可。一般的AMQP库都是将Delivery Mode设置成1，也就是非持久的。所以要持久化消息的步骤如下：<br>1、将交换机设成 durable。<br>2、将队列设成 durable。<br>3、将消息的 Delivery Mode 设置成2 。</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'deb http://www.rabbitmq.com/debian/ testing main'</span> | \\</span><br><span class=\"line\">\t\tsudo tee /etc/apt/sources.<span class=\"keyword\">list</span>.d/rabbitmq.<span class=\"keyword\">list</span></span><br><span class=\"line\">wget -O- http<span class=\"variable\">s:</span>//www.rabbitmq.<span class=\"keyword\">com</span>/rabbitmq-release-signing-key.asc | \\</span><br><span class=\"line\">\t\tsudo apt-key <span class=\"built_in\">add</span> -</span><br><span class=\"line\">apt-<span class=\"built_in\">get</span> install rabbitmq-server</span><br><span class=\"line\">rabbitmq-plugins enable rabbitmq_management</span><br><span class=\"line\"><span class=\"keyword\">cd</span> /etc/rabbitmq/</span><br><span class=\"line\"><span class=\"keyword\">vim</span> rabbitmq.config  &lt;-&lt;--[&#123;rabbit, [&#123;loopback_users, []&#125;]&#125;].</span><br><span class=\"line\">service rabbitmq-server restart</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>AMQP当中有四个概念非常重要<br>virtual host：虚拟主机<br>exchange：交换机<br>queue：队列<br>binding：绑定</p>\n<h2 id=\"持久化\"><a href=\"#持久化\" class=\"headerlink\" title=\"持久化\"></a>持久化</h2><p>当你将消息发布到交换机的时候，可以指定一个标志“Delivery Mode”（投递模式）。根据你使用的AMQP的库不同，指定这个标志的方法可能不太一样。简单的说，就是将Delivery Mode设置成2，也就是持久的（persistent）即可。一般的AMQP库都是将Delivery Mode设置成1，也就是非持久的。所以要持久化消息的步骤如下：<br>1、将交换机设成 durable。<br>2、将队列设成 durable。<br>3、将消息的 Delivery Mode 设置成2 。</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'deb http://www.rabbitmq.com/debian/ testing main'</span> | \\</span><br><span class=\"line\">\t\tsudo tee /etc/apt/sources.<span class=\"keyword\">list</span>.d/rabbitmq.<span class=\"keyword\">list</span></span><br><span class=\"line\">wget -O- http<span class=\"variable\">s:</span>//www.rabbitmq.<span class=\"keyword\">com</span>/rabbitmq-release-signing-key.asc | \\</span><br><span class=\"line\">\t\tsudo apt-key <span class=\"built_in\">add</span> -</span><br><span class=\"line\">apt-<span class=\"built_in\">get</span> install rabbitmq-server</span><br><span class=\"line\">rabbitmq-plugins enable rabbitmq_management</span><br><span class=\"line\"><span class=\"keyword\">cd</span> /etc/rabbitmq/</span><br><span class=\"line\"><span class=\"keyword\">vim</span> rabbitmq.config  &lt;-&lt;--[&#123;rabbit, [&#123;loopback_users, []&#125;]&#125;].</span><br><span class=\"line\">service rabbitmq-server restart</span><br></pre></td></tr></table></figure>","sticky":0},{"title":"SpringBoot的单元测试","date":"2017-01-03T07:05:25.000Z","_content":"项目正式使用SpringBoot,之前也只是自己边玩边学习，封装了一些单元测试的底层类以及一些常用的技巧\n# 引入依赖\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-test</artifactId>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <scope>test</scope>\n</dependency>\n```\n# Service层测试的基类\n```\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringBootTest(classes = Application.class)\n@Transactional\n@Rollback\npublic class BasicServiceTest {\n    public Logger logger = Logger.getLogger(this.getClass());\n\n    public BasicServiceTest(){\n\n    }\n}\n```\n注解介绍：\n@RunWith：单元测试的执行类，主要提供Spring运行时的环境\n@SpringBootTest:执行SpringBoot的入口类\n@Transactional：配置事务，在单元测试用控制事务\n@Rollback：回滚方式执行单元测试\n\n\n# Controller层单元测试基类\n```\n@RunWith(SpringRunner.class)\n@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, classes = Application.class)\n@Transactional\n@Rollback\nabstract public class BasicWebTest   {\n\tprotected MockMvc mvc;\n\n\tprotected List<Object> controllers = new ArrayList<>();\n\n\t@Autowired\n\tprotected TestRestTemplate restTemplate;\n\n\tpublic void setUp() {\n\t\tcontrollers.add(new Context());\n\t\tsetMvc(MockMvcBuilders.standaloneSetup(controllers).build());\n\t}\n\n\tpublic MockMvc getMvc() {\n\t\treturn mvc;\n\t}\n\n\tpublic void setMvc(MockMvc mvc) {\n\t\tthis.mvc = mvc;\n\t}\n\n\tpublic TestRestTemplate getRestTemplate() {\n\t\treturn restTemplate;\n\t}\n\n\tpublic void setRestTemplate(TestRestTemplate restTemplate) {\n\t\tthis.restTemplate = restTemplate;\n\t}\n\n}\n```\n\n子类继承BasicWebTest并在@Before的方法中给controllers添加需要测试的controller,然后调用super.setUp()方法\n例：\n```\n\npublic class ExampleWebTest extends BasicWebTest {\n\n\t@Before\n\tpublic void setUp() {\n\t\t// 添加需要测试的Controller\n\t\tcontrollers.add(new MainController());\n\t\tsuper.setUp();\n\t}\n\n\t@Test\n\tpublic void exampleTest() throws Exception {\n\t\t// 1.get请求URL参数\n\t\t/*\n\t\t * @RequestMapping(\"/api/v1/context/{id}\")\n\t\t *\n\t\t * @ResponseBody Map<String, Object> context(@RequestParam String\n\t\t * param,@PathVariable String id) { Map<String, Object> map = new\n\t\t * HashMap<>(); map.put(\"context\", \"/api/v1/context\"); map.put(\"param\",\n\t\t * param); return map; }\n\t\t */\n\t\tString uri = \"/api/v1/context/{id}?param=1234\";\n\n\t\tMap<String, String> param = new HashMap<String, String>();\n\t\tparam.put(\"id\", \"123\");\n\n\t\tResponseEntity<String> exchange = restTemplate.getForEntity(uri, String.class, param);\n\t\tAssert.assertEquals(exchange.getStatusCode(), HttpStatus.NOT_FOUND);\n\t\tSystem.out.println(exchange.getBody());\n\n\t\t// 2.post提交对象\n\t\t/*\n\t\t * @RequestMapping(\"/api/v1/context1\")\n\t\t *\n\t\t * @ResponseBody Map<String, Object> context1(@RequestBody User user) {\n\t\t * Map<String, Object> map = new HashMap<>(); map.put(\"context\",\n\t\t * \"/api/v1/context\"); return map; }\n\t\t */\n\t\tString uri_post = \"/api/v1/context1\";\n\t\tHttpHeaders headers = new HttpHeaders();\n\t\tMediaType type = MediaType.parseMediaType(\"application/json; charset=UTF-8\");\n\t\theaders.setContentType(type);\n\t\theaders.add(\"Accept\", MediaType.APPLICATION_JSON.toString());\n\n\t\tMap<String, String> params = new HashMap<>();\n\t\tparams.put(\"id\", \"1\");\n\t\tparams.put(\"name\", \"username\");\n\n\t\tJSONObject jsonObj = new JSONObject(params);\n\n\t\tHttpEntity<String> formEntity = new HttpEntity<String>(jsonObj.toString(), headers);\n\n\t\tString result = restTemplate.postForObject(uri_post, formEntity, String.class);\n\t\tSystem.out.println(result);\n\t}\n}\n```\n","source":"_posts/java/springboot/2017-01-03-springboot-test.md","raw":"title: SpringBoot的单元测试\ndate: 2017/01/03 15:05:25\ncategories:\n- SpringBoot\ntags: [SpringBoot,单元测试]\n---\n项目正式使用SpringBoot,之前也只是自己边玩边学习，封装了一些单元测试的底层类以及一些常用的技巧\n# 引入依赖\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-test</artifactId>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <scope>test</scope>\n</dependency>\n```\n# Service层测试的基类\n```\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringBootTest(classes = Application.class)\n@Transactional\n@Rollback\npublic class BasicServiceTest {\n    public Logger logger = Logger.getLogger(this.getClass());\n\n    public BasicServiceTest(){\n\n    }\n}\n```\n注解介绍：\n@RunWith：单元测试的执行类，主要提供Spring运行时的环境\n@SpringBootTest:执行SpringBoot的入口类\n@Transactional：配置事务，在单元测试用控制事务\n@Rollback：回滚方式执行单元测试\n\n\n# Controller层单元测试基类\n```\n@RunWith(SpringRunner.class)\n@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, classes = Application.class)\n@Transactional\n@Rollback\nabstract public class BasicWebTest   {\n\tprotected MockMvc mvc;\n\n\tprotected List<Object> controllers = new ArrayList<>();\n\n\t@Autowired\n\tprotected TestRestTemplate restTemplate;\n\n\tpublic void setUp() {\n\t\tcontrollers.add(new Context());\n\t\tsetMvc(MockMvcBuilders.standaloneSetup(controllers).build());\n\t}\n\n\tpublic MockMvc getMvc() {\n\t\treturn mvc;\n\t}\n\n\tpublic void setMvc(MockMvc mvc) {\n\t\tthis.mvc = mvc;\n\t}\n\n\tpublic TestRestTemplate getRestTemplate() {\n\t\treturn restTemplate;\n\t}\n\n\tpublic void setRestTemplate(TestRestTemplate restTemplate) {\n\t\tthis.restTemplate = restTemplate;\n\t}\n\n}\n```\n\n子类继承BasicWebTest并在@Before的方法中给controllers添加需要测试的controller,然后调用super.setUp()方法\n例：\n```\n\npublic class ExampleWebTest extends BasicWebTest {\n\n\t@Before\n\tpublic void setUp() {\n\t\t// 添加需要测试的Controller\n\t\tcontrollers.add(new MainController());\n\t\tsuper.setUp();\n\t}\n\n\t@Test\n\tpublic void exampleTest() throws Exception {\n\t\t// 1.get请求URL参数\n\t\t/*\n\t\t * @RequestMapping(\"/api/v1/context/{id}\")\n\t\t *\n\t\t * @ResponseBody Map<String, Object> context(@RequestParam String\n\t\t * param,@PathVariable String id) { Map<String, Object> map = new\n\t\t * HashMap<>(); map.put(\"context\", \"/api/v1/context\"); map.put(\"param\",\n\t\t * param); return map; }\n\t\t */\n\t\tString uri = \"/api/v1/context/{id}?param=1234\";\n\n\t\tMap<String, String> param = new HashMap<String, String>();\n\t\tparam.put(\"id\", \"123\");\n\n\t\tResponseEntity<String> exchange = restTemplate.getForEntity(uri, String.class, param);\n\t\tAssert.assertEquals(exchange.getStatusCode(), HttpStatus.NOT_FOUND);\n\t\tSystem.out.println(exchange.getBody());\n\n\t\t// 2.post提交对象\n\t\t/*\n\t\t * @RequestMapping(\"/api/v1/context1\")\n\t\t *\n\t\t * @ResponseBody Map<String, Object> context1(@RequestBody User user) {\n\t\t * Map<String, Object> map = new HashMap<>(); map.put(\"context\",\n\t\t * \"/api/v1/context\"); return map; }\n\t\t */\n\t\tString uri_post = \"/api/v1/context1\";\n\t\tHttpHeaders headers = new HttpHeaders();\n\t\tMediaType type = MediaType.parseMediaType(\"application/json; charset=UTF-8\");\n\t\theaders.setContentType(type);\n\t\theaders.add(\"Accept\", MediaType.APPLICATION_JSON.toString());\n\n\t\tMap<String, String> params = new HashMap<>();\n\t\tparams.put(\"id\", \"1\");\n\t\tparams.put(\"name\", \"username\");\n\n\t\tJSONObject jsonObj = new JSONObject(params);\n\n\t\tHttpEntity<String> formEntity = new HttpEntity<String>(jsonObj.toString(), headers);\n\n\t\tString result = restTemplate.postForObject(uri_post, formEntity, String.class);\n\t\tSystem.out.println(result);\n\t}\n}\n```\n","slug":"java/springboot/2017-01-03-springboot-test","published":1,"updated":"2018-05-15T07:42:34.207Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8gt00302wh54yo38zl4","content":"<p>项目正式使用SpringBoot,之前也只是自己边玩边学习，封装了一些单元测试的底层类以及一些常用的技巧</p>\n<h1 id=\"引入依赖\"><a href=\"#引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Service层测试的基类\"><a href=\"#Service层测试的基类\" class=\"headerlink\" title=\"Service层测试的基类\"></a>Service层测试的基类</h1><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest(classes = Application.class)</span></span><br><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"meta\">@Rollback</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BasicServiceTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Logger logger = Logger.getLogger(<span class=\"keyword\">this</span>.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> BasicServiceTest()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注解介绍：<br>@RunWith：单元测试的执行类，主要提供Spring运行时的环境<br>@SpringBootTest:执行SpringBoot的入口类<br>@Transactional：配置事务，在单元测试用控制事务<br>@Rollback：回滚方式执行单元测试</p>\n<h1 id=\"Controller层单元测试基类\"><a href=\"#Controller层单元测试基类\" class=\"headerlink\" title=\"Controller层单元测试基类\"></a>Controller层单元测试基类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(webEnvironment = WebEnvironment.RANDOM_PORT, classes = Application.class)</span><br><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"meta\">@Rollback</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BasicWebTest</span>   </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> MockMvc mvc;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> List&lt;Object&gt; controllers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Autowired</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> TestRestTemplate restTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tcontrollers.add(<span class=\"keyword\">new</span> Context());</span><br><span class=\"line\">\t\tsetMvc(MockMvcBuilders.standaloneSetup(controllers).build());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> MockMvc <span class=\"title\">getMvc</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mvc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMvc</span><span class=\"params\">(MockMvc mvc)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mvc = mvc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TestRestTemplate <span class=\"title\">getRestTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> restTemplate;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRestTemplate</span><span class=\"params\">(TestRestTemplate restTemplate)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.restTemplate = restTemplate;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>子类继承BasicWebTest并在@Before的方法中给controllers添加需要测试的controller,然后调用super.setUp()方法<br>例：<br><figure class=\"highlight julia\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">public class ExampleWebTest extends BasicWebTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Before</span></span><br><span class=\"line\">\tpublic void setUp() &#123;</span><br><span class=\"line\">\t\t// 添加需要测试的Controller</span><br><span class=\"line\">\t\tcontrollers.add(new MainController());</span><br><span class=\"line\">\t\tsuper.setUp();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Test</span></span><br><span class=\"line\">\tpublic void exampleTest() throws <span class=\"built_in\">Exception</span> &#123;</span><br><span class=\"line\">\t\t// <span class=\"number\">1.</span>get请求URL参数</span><br><span class=\"line\">\t\t/*</span><br><span class=\"line\">\t\t * <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/api/v1/context/&#123;id&#125;\"</span>)</span><br><span class=\"line\">\t\t *</span><br><span class=\"line\">\t\t * <span class=\"meta\">@ResponseBody</span> Map&lt;<span class=\"built_in\">String</span>, Object&gt; context(<span class=\"meta\">@RequestParam</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">\t\t * param,<span class=\"meta\">@PathVariable</span> <span class=\"built_in\">String</span> id) &#123; Map&lt;<span class=\"built_in\">String</span>, Object&gt; map = new</span><br><span class=\"line\">\t\t * HashMap&lt;&gt;(); map.put(<span class=\"string\">\"context\"</span>, <span class=\"string\">\"/api/v1/context\"</span>); map.put(<span class=\"string\">\"param\"</span>,</span><br><span class=\"line\">\t\t * param); <span class=\"keyword\">return</span> map; &#125;</span><br><span class=\"line\">\t\t */</span><br><span class=\"line\">\t\t<span class=\"built_in\">String</span> uri = <span class=\"string\">\"/api/v1/context/&#123;id&#125;?param=1234\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt; param = new HashMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">\t\tparam.put(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"123\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tResponseEntity&lt;<span class=\"built_in\">String</span>&gt; exchange = restTemplate.getForEntity(uri, <span class=\"built_in\">String</span>.class, param);</span><br><span class=\"line\">\t\tAssert.assertEquals(exchange.getStatusCode(), HttpStatus.NOT_FOUND);</span><br><span class=\"line\">\t\tSystem.out.println(exchange.getBody());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// <span class=\"number\">2.</span>post提交对象</span><br><span class=\"line\">\t\t/*</span><br><span class=\"line\">\t\t * <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/api/v1/context1\"</span>)</span><br><span class=\"line\">\t\t *</span><br><span class=\"line\">\t\t * <span class=\"meta\">@ResponseBody</span> Map&lt;<span class=\"built_in\">String</span>, Object&gt; context1(<span class=\"meta\">@RequestBody</span> User user) &#123;</span><br><span class=\"line\">\t\t * Map&lt;<span class=\"built_in\">String</span>, Object&gt; map = new HashMap&lt;&gt;(); map.put(<span class=\"string\">\"context\"</span>,</span><br><span class=\"line\">\t\t * <span class=\"string\">\"/api/v1/context\"</span>); <span class=\"keyword\">return</span> map; &#125;</span><br><span class=\"line\">\t\t */</span><br><span class=\"line\">\t\t<span class=\"built_in\">String</span> uri_post = <span class=\"string\">\"/api/v1/context1\"</span>;</span><br><span class=\"line\">\t\tHttpHeaders headers = new HttpHeaders();</span><br><span class=\"line\">\t\tMediaType <span class=\"keyword\">type</span> = MediaType.parseMediaType(<span class=\"string\">\"application/json; charset=UTF-8\"</span>);</span><br><span class=\"line\">\t\theaders.setContentType(<span class=\"keyword\">type</span>);</span><br><span class=\"line\">\t\theaders.add(<span class=\"string\">\"Accept\"</span>, MediaType.APPLICATION_JSON.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt; params = new HashMap&lt;&gt;();</span><br><span class=\"line\">\t\tparams.put(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">\t\tparams.put(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"username\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tJSONObject jsonObj = new JSONObject(params);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tHttpEntity&lt;<span class=\"built_in\">String</span>&gt; formEntity = new HttpEntity&lt;<span class=\"built_in\">String</span>&gt;(jsonObj.toString(), headers);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"built_in\">String</span> result = restTemplate.postForObject(uri_post, formEntity, <span class=\"built_in\">String</span>.class);</span><br><span class=\"line\">\t\tSystem.out.println(result);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>项目正式使用SpringBoot,之前也只是自己边玩边学习，封装了一些单元测试的底层类以及一些常用的技巧</p>\n<h1 id=\"引入依赖\"><a href=\"#引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Service层测试的基类\"><a href=\"#Service层测试的基类\" class=\"headerlink\" title=\"Service层测试的基类\"></a>Service层测试的基类</h1><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest(classes = Application.class)</span></span><br><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"meta\">@Rollback</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BasicServiceTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Logger logger = Logger.getLogger(<span class=\"keyword\">this</span>.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> BasicServiceTest()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注解介绍：<br>@RunWith：单元测试的执行类，主要提供Spring运行时的环境<br>@SpringBootTest:执行SpringBoot的入口类<br>@Transactional：配置事务，在单元测试用控制事务<br>@Rollback：回滚方式执行单元测试</p>\n<h1 id=\"Controller层单元测试基类\"><a href=\"#Controller层单元测试基类\" class=\"headerlink\" title=\"Controller层单元测试基类\"></a>Controller层单元测试基类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(webEnvironment = WebEnvironment.RANDOM_PORT, classes = Application.class)</span><br><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"meta\">@Rollback</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BasicWebTest</span>   </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> MockMvc mvc;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> List&lt;Object&gt; controllers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Autowired</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> TestRestTemplate restTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tcontrollers.add(<span class=\"keyword\">new</span> Context());</span><br><span class=\"line\">\t\tsetMvc(MockMvcBuilders.standaloneSetup(controllers).build());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> MockMvc <span class=\"title\">getMvc</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mvc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMvc</span><span class=\"params\">(MockMvc mvc)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mvc = mvc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TestRestTemplate <span class=\"title\">getRestTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> restTemplate;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRestTemplate</span><span class=\"params\">(TestRestTemplate restTemplate)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.restTemplate = restTemplate;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>子类继承BasicWebTest并在@Before的方法中给controllers添加需要测试的controller,然后调用super.setUp()方法<br>例：<br><figure class=\"highlight julia\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">public class ExampleWebTest extends BasicWebTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Before</span></span><br><span class=\"line\">\tpublic void setUp() &#123;</span><br><span class=\"line\">\t\t// 添加需要测试的Controller</span><br><span class=\"line\">\t\tcontrollers.add(new MainController());</span><br><span class=\"line\">\t\tsuper.setUp();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Test</span></span><br><span class=\"line\">\tpublic void exampleTest() throws <span class=\"built_in\">Exception</span> &#123;</span><br><span class=\"line\">\t\t// <span class=\"number\">1.</span>get请求URL参数</span><br><span class=\"line\">\t\t/*</span><br><span class=\"line\">\t\t * <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/api/v1/context/&#123;id&#125;\"</span>)</span><br><span class=\"line\">\t\t *</span><br><span class=\"line\">\t\t * <span class=\"meta\">@ResponseBody</span> Map&lt;<span class=\"built_in\">String</span>, Object&gt; context(<span class=\"meta\">@RequestParam</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">\t\t * param,<span class=\"meta\">@PathVariable</span> <span class=\"built_in\">String</span> id) &#123; Map&lt;<span class=\"built_in\">String</span>, Object&gt; map = new</span><br><span class=\"line\">\t\t * HashMap&lt;&gt;(); map.put(<span class=\"string\">\"context\"</span>, <span class=\"string\">\"/api/v1/context\"</span>); map.put(<span class=\"string\">\"param\"</span>,</span><br><span class=\"line\">\t\t * param); <span class=\"keyword\">return</span> map; &#125;</span><br><span class=\"line\">\t\t */</span><br><span class=\"line\">\t\t<span class=\"built_in\">String</span> uri = <span class=\"string\">\"/api/v1/context/&#123;id&#125;?param=1234\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt; param = new HashMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">\t\tparam.put(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"123\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tResponseEntity&lt;<span class=\"built_in\">String</span>&gt; exchange = restTemplate.getForEntity(uri, <span class=\"built_in\">String</span>.class, param);</span><br><span class=\"line\">\t\tAssert.assertEquals(exchange.getStatusCode(), HttpStatus.NOT_FOUND);</span><br><span class=\"line\">\t\tSystem.out.println(exchange.getBody());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// <span class=\"number\">2.</span>post提交对象</span><br><span class=\"line\">\t\t/*</span><br><span class=\"line\">\t\t * <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/api/v1/context1\"</span>)</span><br><span class=\"line\">\t\t *</span><br><span class=\"line\">\t\t * <span class=\"meta\">@ResponseBody</span> Map&lt;<span class=\"built_in\">String</span>, Object&gt; context1(<span class=\"meta\">@RequestBody</span> User user) &#123;</span><br><span class=\"line\">\t\t * Map&lt;<span class=\"built_in\">String</span>, Object&gt; map = new HashMap&lt;&gt;(); map.put(<span class=\"string\">\"context\"</span>,</span><br><span class=\"line\">\t\t * <span class=\"string\">\"/api/v1/context\"</span>); <span class=\"keyword\">return</span> map; &#125;</span><br><span class=\"line\">\t\t */</span><br><span class=\"line\">\t\t<span class=\"built_in\">String</span> uri_post = <span class=\"string\">\"/api/v1/context1\"</span>;</span><br><span class=\"line\">\t\tHttpHeaders headers = new HttpHeaders();</span><br><span class=\"line\">\t\tMediaType <span class=\"keyword\">type</span> = MediaType.parseMediaType(<span class=\"string\">\"application/json; charset=UTF-8\"</span>);</span><br><span class=\"line\">\t\theaders.setContentType(<span class=\"keyword\">type</span>);</span><br><span class=\"line\">\t\theaders.add(<span class=\"string\">\"Accept\"</span>, MediaType.APPLICATION_JSON.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt; params = new HashMap&lt;&gt;();</span><br><span class=\"line\">\t\tparams.put(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">\t\tparams.put(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"username\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tJSONObject jsonObj = new JSONObject(params);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tHttpEntity&lt;<span class=\"built_in\">String</span>&gt; formEntity = new HttpEntity&lt;<span class=\"built_in\">String</span>&gt;(jsonObj.toString(), headers);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"built_in\">String</span> result = restTemplate.postForObject(uri_post, formEntity, <span class=\"built_in\">String</span>.class);</span><br><span class=\"line\">\t\tSystem.out.println(result);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"js控制checkbox选中","date":"2016-03-08T06:49:25.000Z","_content":"jquery使用attr('checked','checked') 设置`checkbox`后，第一次是成功的，后面清空掉再使用，就会出现有checked属性，但是勾没有显示\ncheckbox设置应换成 prop('checked',true)\njquery检查一个checkbox是否是选中状态\n$(\"input[type='checkbox']\").is(\":checked\")","source":"_posts/language/javascript/2016-03-08-js-control-checkbox.md","raw":"title: js控制checkbox选中\ndate: 2016/03/08 14:49:25\ncategories:\n- javascript\ntags: [javascript,html,checkbox]\n---\njquery使用attr('checked','checked') 设置`checkbox`后，第一次是成功的，后面清空掉再使用，就会出现有checked属性，但是勾没有显示\ncheckbox设置应换成 prop('checked',true)\njquery检查一个checkbox是否是选中状态\n$(\"input[type='checkbox']\").is(\":checked\")","slug":"language/javascript/2016-03-08-js-control-checkbox","published":1,"updated":"2018-05-15T07:42:34.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8gv00312wh5boxy1ulb","content":"<p>jquery使用attr(‘checked’,’checked’) 设置<code>checkbox</code>后，第一次是成功的，后面清空掉再使用，就会出现有checked属性，但是勾没有显示<br>checkbox设置应换成 prop(‘checked’,true)<br>jquery检查一个checkbox是否是选中状态<br>$(“input[type=’checkbox’]”).is(“:checked”)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>jquery使用attr(‘checked’,’checked’) 设置<code>checkbox</code>后，第一次是成功的，后面清空掉再使用，就会出现有checked属性，但是勾没有显示<br>checkbox设置应换成 prop(‘checked’,true)<br>jquery检查一个checkbox是否是选中状态<br>$(“input[type=’checkbox’]”).is(“:checked”)</p>\n","sticky":0},{"title":"纯前端控制不同时区服务器时间的逻辑","date":"2017-04-13T08:49:25.000Z","_content":"对于不同地区的人，对一个时间的理解存在时区的差异。\n\n比如中国+8时区的8点，与+0时区的0点是一致的\n\n所以存在：2017-04-11 08:00:00+0800  ==  2017-04-11 00:00:00+0000\n\n解决方法：\n\n1.服务器全部采用+8时区，无论部署在全球的任何地方\n\n2.浏览器使用js获取到客户端的时区之后，将时间选择框中的时间加上与+8时区的差值传到后端，后端认为传递过来的总是+8时区的时间。\n\n3.浏览器显示时，同样要处理时区的显示，服务器传到前端的时间总是+8时区的。\n\n例如：\n\n-->提交数据\n\n价格的生效时间是在+0时区的电脑上新建的，生效时间选择2017-04-11 00:00:00，那么传递到服务端的时间应该加（(当前时区+00时区offset=0)-(服务器+08时区offset=-8)=8）是2017-04-11 08:00:00\n\n-->获取数据\n\n服务端传递到前端的时间仍然是2017-04-11 08:00:00，但是是+8时区的，所以\n\na.+0时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+00时区offset=0))=8小时操作，即为2017-04-11 00:00:00，显示正确\nb.+8时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+08时区offset=-8))=0小时操作，即为2017-04-11 08:00:00，显示正确\nc.+9时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+09时区offset=-9))=1小时操作，即为2017-04-11 07:00:00，显示正确\nc.-1时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区-01时区offset=1))=-9小时操作，即为2017-04-10 23:00:00，显示正确\n\n\n对应的js代码\n```\nvar d = new Date();\n//本地时间与GMT时间的时间偏移差\nvar offset = d.getTimezoneOffset() / 60;\n例：\n-12时区：offset = 12\n-08时区：offset = 8\n-01时区：offset = 1\n 00时区：offset = 8\n+01时区：offset = -1\n+08时区：offset = -8\n+12时区：offset = -12\n+14时区：offset = -14\n```","source":"_posts/language/javascript/2017-04-13-js-control-different-timezone.md","raw":"title: 纯前端控制不同时区服务器时间的逻辑\ndate: 2017/04/13 16:49:25\ncategories:\n- timezone\ntags: [javascript,timezone]\n---\n对于不同地区的人，对一个时间的理解存在时区的差异。\n\n比如中国+8时区的8点，与+0时区的0点是一致的\n\n所以存在：2017-04-11 08:00:00+0800  ==  2017-04-11 00:00:00+0000\n\n解决方法：\n\n1.服务器全部采用+8时区，无论部署在全球的任何地方\n\n2.浏览器使用js获取到客户端的时区之后，将时间选择框中的时间加上与+8时区的差值传到后端，后端认为传递过来的总是+8时区的时间。\n\n3.浏览器显示时，同样要处理时区的显示，服务器传到前端的时间总是+8时区的。\n\n例如：\n\n-->提交数据\n\n价格的生效时间是在+0时区的电脑上新建的，生效时间选择2017-04-11 00:00:00，那么传递到服务端的时间应该加（(当前时区+00时区offset=0)-(服务器+08时区offset=-8)=8）是2017-04-11 08:00:00\n\n-->获取数据\n\n服务端传递到前端的时间仍然是2017-04-11 08:00:00，但是是+8时区的，所以\n\na.+0时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+00时区offset=0))=8小时操作，即为2017-04-11 00:00:00，显示正确\nb.+8时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+08时区offset=-8))=0小时操作，即为2017-04-11 08:00:00，显示正确\nc.+9时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+09时区offset=-9))=1小时操作，即为2017-04-11 07:00:00，显示正确\nc.-1时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区-01时区offset=1))=-9小时操作，即为2017-04-10 23:00:00，显示正确\n\n\n对应的js代码\n```\nvar d = new Date();\n//本地时间与GMT时间的时间偏移差\nvar offset = d.getTimezoneOffset() / 60;\n例：\n-12时区：offset = 12\n-08时区：offset = 8\n-01时区：offset = 1\n 00时区：offset = 8\n+01时区：offset = -1\n+08时区：offset = -8\n+12时区：offset = -12\n+14时区：offset = -14\n```","slug":"language/javascript/2017-04-13-js-control-different-timezone","published":1,"updated":"2018-05-15T07:42:34.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8gw00322wh5vfq22r58","content":"<p>对于不同地区的人，对一个时间的理解存在时区的差异。</p>\n<p>比如中国+8时区的8点，与+0时区的0点是一致的</p>\n<p>所以存在：2017-04-11 08:00:00+0800  ==  2017-04-11 00:00:00+0000</p>\n<p>解决方法：</p>\n<p>1.服务器全部采用+8时区，无论部署在全球的任何地方</p>\n<p>2.浏览器使用js获取到客户端的时区之后，将时间选择框中的时间加上与+8时区的差值传到后端，后端认为传递过来的总是+8时区的时间。</p>\n<p>3.浏览器显示时，同样要处理时区的显示，服务器传到前端的时间总是+8时区的。</p>\n<p>例如：</p>\n<p>–&gt;提交数据</p>\n<p>价格的生效时间是在+0时区的电脑上新建的，生效时间选择2017-04-11 00:00:00，那么传递到服务端的时间应该加（(当前时区+00时区offset=0)-(服务器+08时区offset=-8)=8）是2017-04-11 08:00:00</p>\n<p>–&gt;获取数据</p>\n<p>服务端传递到前端的时间仍然是2017-04-11 08:00:00，但是是+8时区的，所以</p>\n<p>a.+0时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+00时区offset=0))=8小时操作，即为2017-04-11 00:00:00，显示正确<br>b.+8时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+08时区offset=-8))=0小时操作，即为2017-04-11 08:00:00，显示正确<br>c.+9时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+09时区offset=-9))=1小时操作，即为2017-04-11 07:00:00，显示正确<br>c.-1时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区-01时区offset=1))=-9小时操作，即为2017-04-10 23:00:00，显示正确</p>\n<p>对应的js代码<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var d = new Date();</span><br><span class=\"line\"><span class=\"comment\">//本地时间与GMT时间的时间偏移差</span></span><br><span class=\"line\">var offset = d.getTimezoneOffset() / <span class=\"number\">60</span>;</span><br><span class=\"line\">例：</span><br><span class=\"line\"><span class=\"number\">-12</span>时区：offset = <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"number\">-08</span>时区：offset = <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"number\">-01</span>时区：offset = <span class=\"number\">1</span></span><br><span class=\"line\"> <span class=\"number\">00</span>时区：offset = <span class=\"number\">8</span></span><br><span class=\"line\">+<span class=\"number\">01</span>时区：offset = <span class=\"number\">-1</span></span><br><span class=\"line\">+<span class=\"number\">08</span>时区：offset = <span class=\"number\">-8</span></span><br><span class=\"line\">+<span class=\"number\">12</span>时区：offset = <span class=\"number\">-12</span></span><br><span class=\"line\">+<span class=\"number\">14</span>时区：offset = <span class=\"number\">-14</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>对于不同地区的人，对一个时间的理解存在时区的差异。</p>\n<p>比如中国+8时区的8点，与+0时区的0点是一致的</p>\n<p>所以存在：2017-04-11 08:00:00+0800  ==  2017-04-11 00:00:00+0000</p>\n<p>解决方法：</p>\n<p>1.服务器全部采用+8时区，无论部署在全球的任何地方</p>\n<p>2.浏览器使用js获取到客户端的时区之后，将时间选择框中的时间加上与+8时区的差值传到后端，后端认为传递过来的总是+8时区的时间。</p>\n<p>3.浏览器显示时，同样要处理时区的显示，服务器传到前端的时间总是+8时区的。</p>\n<p>例如：</p>\n<p>–&gt;提交数据</p>\n<p>价格的生效时间是在+0时区的电脑上新建的，生效时间选择2017-04-11 00:00:00，那么传递到服务端的时间应该加（(当前时区+00时区offset=0)-(服务器+08时区offset=-8)=8）是2017-04-11 08:00:00</p>\n<p>–&gt;获取数据</p>\n<p>服务端传递到前端的时间仍然是2017-04-11 08:00:00，但是是+8时区的，所以</p>\n<p>a.+0时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+00时区offset=0))=8小时操作，即为2017-04-11 00:00:00，显示正确<br>b.+8时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+08时区offset=-8))=0小时操作，即为2017-04-11 08:00:00，显示正确<br>c.+9时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区+09时区offset=-9))=1小时操作，即为2017-04-11 07:00:00，显示正确<br>c.-1时区电脑的浏览器应该对这个时间做减((服务器+08时区offset=-8)-(当前时区-01时区offset=1))=-9小时操作，即为2017-04-10 23:00:00，显示正确</p>\n<p>对应的js代码<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var d = new Date();</span><br><span class=\"line\"><span class=\"comment\">//本地时间与GMT时间的时间偏移差</span></span><br><span class=\"line\">var offset = d.getTimezoneOffset() / <span class=\"number\">60</span>;</span><br><span class=\"line\">例：</span><br><span class=\"line\"><span class=\"number\">-12</span>时区：offset = <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"number\">-08</span>时区：offset = <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"number\">-01</span>时区：offset = <span class=\"number\">1</span></span><br><span class=\"line\"> <span class=\"number\">00</span>时区：offset = <span class=\"number\">8</span></span><br><span class=\"line\">+<span class=\"number\">01</span>时区：offset = <span class=\"number\">-1</span></span><br><span class=\"line\">+<span class=\"number\">08</span>时区：offset = <span class=\"number\">-8</span></span><br><span class=\"line\">+<span class=\"number\">12</span>时区：offset = <span class=\"number\">-12</span></span><br><span class=\"line\">+<span class=\"number\">14</span>时区：offset = <span class=\"number\">-14</span></span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"从9600+家公司的简介以及产品说明，能看出来什么","date":"2018-07-18T08:49:25.000Z","_content":"\n最近工作有空闲，树莓派上跑了个Node服务器，爬了几天拉勾上的公司，爬取的网址类似下面的格式：\n\nhttps://www.lagou.com/gongsi/200562.html\n\n源码如下\n```\nvar fetch_url = '/gongsi/${index}.html';\n\nexports.runner = function fetchPage(index) {\n    startRequest(index);\n};\n\n\nfunction startRequest(index) {\n    CompanysModel.findOne({index: index}, '_id', function (err, _company) {\n        if (err || _company) {\n            console.log(index + '-------  got');\n            incrAndReget(index);\n            return;\n        }\n        handlerContent(index);\n    });\n}\n\nfunction handlerContent(index) {\n    //采用http模块向服务器发起一次get请求\n    var url = fetch_url.replace('${index}', index);\n\n    var options = {\n        hostname: 'www.lagou.com',\n        port: '443',\n        path: url,\n        method: 'GET',\n        headers: {\n            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n            'Accept-Encoding': 'deflate, br',\n            'Accept-Language': 'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4',\n            'Connection': 'keep-alive',\n            'Cookie': 'user_trace_token=20171019112945-24a9d09c-bcfe-47d7-8d27-3bf53bfdb347; LGUID=20171019112947-c1eabc85-b47d-11e7-9c7e-525400f775ce; JSESSIONID=ABAAABAACDBAAIAC9A9B32CD990D08ED4BAEFDDAB14C879; TG-TRACK-CODE=index_campus; _gid=GA1.2.705151711.1508383779; _ga=GA1.2.1181508252.1508383779; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508383779,1508383891,1508384000; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508392375; LGSID=20171019125706-f472e429-b489-11e7-9ca5-525400f775ce; LGRID=20171019135302-c509ee47-b491-11e7-9cac-525400f775ce',\n            'Host': 'www.lagou.com',\n            'Origin': 'http://www.lagou.com',\n            'Referer': 'http://www.lagou.com/',\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36'\n\n        }\n    }\n    http.get(options, function (res) {\n        console.log(url + '-------' + res.statusCode);\n        if (res.statusCode == 303) {\n            incrAndReget(index);\n            return;\n        }\n\n        if (res.statusCode == 302) {\n            setTimeout(function () {\n                if (retryCount == RETRYTIMES) {\n                    retryCount = 1;\n                    incrAndReget(index);\n                } else {\n                    retryCount++;\n                    handlerContent(index);\n                }\n            }, 1000 * 5);\n            return;\n        }\n        var html = '';        //用来存储请求网页的整个html内容\n        //监听data事件，每次取一块数据\n        res.on('data', function (chunk) {\n            html += chunk;\n        });\n        //监听end事件，如果整个网页内容的html都获取完毕，就执行回调函数\n        res.on('end', function () {\n\n            var $ = cheerio.load(html); //采用cheerio模块解析html\n\n            var company = {\n                index: index,\n                //公司简称\n                simpleName: $('a.hovertips').text().trim(),\n                //公司名称\n                name: $('a.hovertips').attr('title') ? $('a.hovertips').attr('title').trim() : '',\n                //公司url\n                urlLink: $('a.hovertips').attr('href') ? $('a.hovertips').attr('href').trim() : '',\n                //公司简介\n                companyDesc: $('span.company_content').text().trim(),\n                //产品名\n                productName: $('.url_valid').text().trim(),\n                //产品类型\n                productType: $('.product_details ul').text().trim(),\n                //产品描述\n                productDesc: $('.product_profile').text().trim(),\n                //产品链接地址\n                productLink: $('.url_valid').attr('href') ? $('.url_valid').attr('href').trim() : '',\n                //管理者\n                manager: $(\"#company_managers .item_manager_name\").text().trim(),\n                //管理者简介\n                managerDesc: $(\"#company_managers .item_manager_content\").text().trim(),\n                //公司类型\n                type: $($(\"#basic_container li\")[0]).text().trim(),\n                //融资进度\n                process: $($(\"#basic_container li\")[1]).text().trim(),\n                //人数\n                number: $($(\"#basic_container li\")[2]).text().trim(),\n                //坐标\n                address: $($(\"#basic_container li\")[3]).text().trim(),\n                //评分\n                score: $('#interview_container .comprehensive-review .score').text().trim(),\n                //样本\n                count: $('#interview_container .comprehensive-review .count').text().trim().replace(\"（ 来自 \", \"\").replace(\" 份评价 ）\", \"\")\n            }\n            var companysModel = new CompanysModel(company);\n            companysModel.save();\n        });\n        incrAndReget(index);\n    }).on('error', function (err) {\n        console.log(err);\n        setTimeout(function () {\n            handlerContent(index);\n        }, 1000 * 10);\n    });\n}\n\nfunction incrAndReget(index) {\n    index++;\n    startRequest(index);\n}\n```\n\n效率不是很高，可自行抓取或者优化抓取过程。抓取来的数据，放在了MongoDb中。\n\n接下来使用结巴分词进行词频的抓取，整个python使用3.6的32位，需要安装的工具如下\n\npygame-1.9.3-cp36-cp36m-win32.whl\n\nPyTagCloud\n\nsimplejson\n\n为了显示中文，拷贝中文字体到PyTagCloud的路径Python36-32\\Lib\\site-packages\\pytagcloud\\fonts下，并修改fonts.json,增加\n```\n    {\n\t\t\"name\": \"SimHei\",\n\t\t\"ttf\": \"simhei.ttf\",\n\t\t\"web\": \"none\"\n\t},\n```\n接下来编写代码来分析公司介绍文件coms.txt，排除了一些不关心的词做stopword,加入了些自定义的词典，但词频依然很低。请自行进行调整：\n```\nimport sys\nimport codecs\nsys.path.append('../')\n\nimport jieba\nimport jieba.analyse\nfrom optparse import OptionParser\n\nUSAGE = \"usage:    python ana.py [file name] -k [top k] -w [with weight=1 or 0]\"\njieba.load_userdict('dict.txt')\njieba.analyse.set_stop_words('stopwords.txt')\nparser = OptionParser(USAGE)\nparser.add_option(\"-k\", dest=\"topK\")\nparser.add_option(\"-w\", dest=\"withWeight\")\nopt, args = parser.parse_args()\n\n\nif len(args) < 1:\n    print(USAGE)\n    sys.exit(1)\n\nfile_name = args[0]\n\nif opt.topK is None:\n    topK = 10\nelse:\n    topK = int(opt.topK)\n\nif opt.withWeight is None:\n    withWeight = False\nelse:\n    if int(opt.withWeight) is 1:\n        withWeight = True\n    else:\n        withWeight = False\n\ncontent = open(file_name, 'rb').read()\n\ntags = jieba.analyse.extract_tags(content, topK=topK, withWeight=withWeight)\noutput = codecs.open('sort.txt', 'w','utf-8')\nif withWeight is True:\n    for tag in tags:\n        output.write('%s%s%s%s'%(tag[0],':',tag[1],'\\n'))\n\nelse:\n    print(\",\".join(tags))\n```\n\n执行之后将输出结果到sort.txt\n\n接下来生成词云，话不多说，直接上代码\n\n```\n# -*- coding: utf-8 -*-\nimport codecs\nimport random\nfrom pytagcloud import create_tag_image, create_html_data, make_tags, \\\n    LAYOUT_HORIZONTAL, LAYOUTS\nfrom pytagcloud.colors import COLOR_SCHEMES\nfrom pytagcloud.lang.counter import get_tag_counts\n\nwd = {}\n\nfp=codecs.open(\".\\sort.txt\", \"r\",'utf-8');\n\nalllines=fp.readlines();\n\nfp.close();\n\nfor eachline in alllines:\n    line = eachline.split(':')\n    wd[line[0]] =  int(float(line[1][:-11])*10000)\n    print('%s%s'%(line[0],wd[line[0]]));\n\n\nfrom operator import itemgetter\nswd = sorted(wd.items(), key=itemgetter(1), reverse=True)\ntags = make_tags(swd,minsize = 20, maxsize = 200,colors=random.choice(list(COLOR_SCHEMES.values())))\ncreate_tag_image(tags, 'keyword_tag_cloud4.png', background=(34, 34, 34, 255),\nsize=(1200, 1000),layout=LAYOUT_HORIZONTAL,\nfontname=\"SimHei\")\n```\n输出结果keyword_tag_cloud4.png\n\n![](https://static.oschina.net/uploads/space/2017/1026/161508_7vNm_584443.png)\n\nref:\n\nhttp://www.cnblogs.com/Yiutto/p/5998262.html\n\n已打包上传gitee,地址\n\nhttps://gitee.com/changwenwen/CompanysAnalysis","source":"_posts/language/python/2018-07-18-lagou-9600s-cloud-tag.md","raw":"title: 从9600+家公司的简介以及产品说明，能看出来什么\ndate: 2018/07/18 16:49:25\ncategories:\n- 爬虫 结巴分词 标签云 Node.js Python\ntags: [python,标签云]\n---\n\n最近工作有空闲，树莓派上跑了个Node服务器，爬了几天拉勾上的公司，爬取的网址类似下面的格式：\n\nhttps://www.lagou.com/gongsi/200562.html\n\n源码如下\n```\nvar fetch_url = '/gongsi/${index}.html';\n\nexports.runner = function fetchPage(index) {\n    startRequest(index);\n};\n\n\nfunction startRequest(index) {\n    CompanysModel.findOne({index: index}, '_id', function (err, _company) {\n        if (err || _company) {\n            console.log(index + '-------  got');\n            incrAndReget(index);\n            return;\n        }\n        handlerContent(index);\n    });\n}\n\nfunction handlerContent(index) {\n    //采用http模块向服务器发起一次get请求\n    var url = fetch_url.replace('${index}', index);\n\n    var options = {\n        hostname: 'www.lagou.com',\n        port: '443',\n        path: url,\n        method: 'GET',\n        headers: {\n            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n            'Accept-Encoding': 'deflate, br',\n            'Accept-Language': 'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4',\n            'Connection': 'keep-alive',\n            'Cookie': 'user_trace_token=20171019112945-24a9d09c-bcfe-47d7-8d27-3bf53bfdb347; LGUID=20171019112947-c1eabc85-b47d-11e7-9c7e-525400f775ce; JSESSIONID=ABAAABAACDBAAIAC9A9B32CD990D08ED4BAEFDDAB14C879; TG-TRACK-CODE=index_campus; _gid=GA1.2.705151711.1508383779; _ga=GA1.2.1181508252.1508383779; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508383779,1508383891,1508384000; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508392375; LGSID=20171019125706-f472e429-b489-11e7-9ca5-525400f775ce; LGRID=20171019135302-c509ee47-b491-11e7-9cac-525400f775ce',\n            'Host': 'www.lagou.com',\n            'Origin': 'http://www.lagou.com',\n            'Referer': 'http://www.lagou.com/',\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36'\n\n        }\n    }\n    http.get(options, function (res) {\n        console.log(url + '-------' + res.statusCode);\n        if (res.statusCode == 303) {\n            incrAndReget(index);\n            return;\n        }\n\n        if (res.statusCode == 302) {\n            setTimeout(function () {\n                if (retryCount == RETRYTIMES) {\n                    retryCount = 1;\n                    incrAndReget(index);\n                } else {\n                    retryCount++;\n                    handlerContent(index);\n                }\n            }, 1000 * 5);\n            return;\n        }\n        var html = '';        //用来存储请求网页的整个html内容\n        //监听data事件，每次取一块数据\n        res.on('data', function (chunk) {\n            html += chunk;\n        });\n        //监听end事件，如果整个网页内容的html都获取完毕，就执行回调函数\n        res.on('end', function () {\n\n            var $ = cheerio.load(html); //采用cheerio模块解析html\n\n            var company = {\n                index: index,\n                //公司简称\n                simpleName: $('a.hovertips').text().trim(),\n                //公司名称\n                name: $('a.hovertips').attr('title') ? $('a.hovertips').attr('title').trim() : '',\n                //公司url\n                urlLink: $('a.hovertips').attr('href') ? $('a.hovertips').attr('href').trim() : '',\n                //公司简介\n                companyDesc: $('span.company_content').text().trim(),\n                //产品名\n                productName: $('.url_valid').text().trim(),\n                //产品类型\n                productType: $('.product_details ul').text().trim(),\n                //产品描述\n                productDesc: $('.product_profile').text().trim(),\n                //产品链接地址\n                productLink: $('.url_valid').attr('href') ? $('.url_valid').attr('href').trim() : '',\n                //管理者\n                manager: $(\"#company_managers .item_manager_name\").text().trim(),\n                //管理者简介\n                managerDesc: $(\"#company_managers .item_manager_content\").text().trim(),\n                //公司类型\n                type: $($(\"#basic_container li\")[0]).text().trim(),\n                //融资进度\n                process: $($(\"#basic_container li\")[1]).text().trim(),\n                //人数\n                number: $($(\"#basic_container li\")[2]).text().trim(),\n                //坐标\n                address: $($(\"#basic_container li\")[3]).text().trim(),\n                //评分\n                score: $('#interview_container .comprehensive-review .score').text().trim(),\n                //样本\n                count: $('#interview_container .comprehensive-review .count').text().trim().replace(\"（ 来自 \", \"\").replace(\" 份评价 ）\", \"\")\n            }\n            var companysModel = new CompanysModel(company);\n            companysModel.save();\n        });\n        incrAndReget(index);\n    }).on('error', function (err) {\n        console.log(err);\n        setTimeout(function () {\n            handlerContent(index);\n        }, 1000 * 10);\n    });\n}\n\nfunction incrAndReget(index) {\n    index++;\n    startRequest(index);\n}\n```\n\n效率不是很高，可自行抓取或者优化抓取过程。抓取来的数据，放在了MongoDb中。\n\n接下来使用结巴分词进行词频的抓取，整个python使用3.6的32位，需要安装的工具如下\n\npygame-1.9.3-cp36-cp36m-win32.whl\n\nPyTagCloud\n\nsimplejson\n\n为了显示中文，拷贝中文字体到PyTagCloud的路径Python36-32\\Lib\\site-packages\\pytagcloud\\fonts下，并修改fonts.json,增加\n```\n    {\n\t\t\"name\": \"SimHei\",\n\t\t\"ttf\": \"simhei.ttf\",\n\t\t\"web\": \"none\"\n\t},\n```\n接下来编写代码来分析公司介绍文件coms.txt，排除了一些不关心的词做stopword,加入了些自定义的词典，但词频依然很低。请自行进行调整：\n```\nimport sys\nimport codecs\nsys.path.append('../')\n\nimport jieba\nimport jieba.analyse\nfrom optparse import OptionParser\n\nUSAGE = \"usage:    python ana.py [file name] -k [top k] -w [with weight=1 or 0]\"\njieba.load_userdict('dict.txt')\njieba.analyse.set_stop_words('stopwords.txt')\nparser = OptionParser(USAGE)\nparser.add_option(\"-k\", dest=\"topK\")\nparser.add_option(\"-w\", dest=\"withWeight\")\nopt, args = parser.parse_args()\n\n\nif len(args) < 1:\n    print(USAGE)\n    sys.exit(1)\n\nfile_name = args[0]\n\nif opt.topK is None:\n    topK = 10\nelse:\n    topK = int(opt.topK)\n\nif opt.withWeight is None:\n    withWeight = False\nelse:\n    if int(opt.withWeight) is 1:\n        withWeight = True\n    else:\n        withWeight = False\n\ncontent = open(file_name, 'rb').read()\n\ntags = jieba.analyse.extract_tags(content, topK=topK, withWeight=withWeight)\noutput = codecs.open('sort.txt', 'w','utf-8')\nif withWeight is True:\n    for tag in tags:\n        output.write('%s%s%s%s'%(tag[0],':',tag[1],'\\n'))\n\nelse:\n    print(\",\".join(tags))\n```\n\n执行之后将输出结果到sort.txt\n\n接下来生成词云，话不多说，直接上代码\n\n```\n# -*- coding: utf-8 -*-\nimport codecs\nimport random\nfrom pytagcloud import create_tag_image, create_html_data, make_tags, \\\n    LAYOUT_HORIZONTAL, LAYOUTS\nfrom pytagcloud.colors import COLOR_SCHEMES\nfrom pytagcloud.lang.counter import get_tag_counts\n\nwd = {}\n\nfp=codecs.open(\".\\sort.txt\", \"r\",'utf-8');\n\nalllines=fp.readlines();\n\nfp.close();\n\nfor eachline in alllines:\n    line = eachline.split(':')\n    wd[line[0]] =  int(float(line[1][:-11])*10000)\n    print('%s%s'%(line[0],wd[line[0]]));\n\n\nfrom operator import itemgetter\nswd = sorted(wd.items(), key=itemgetter(1), reverse=True)\ntags = make_tags(swd,minsize = 20, maxsize = 200,colors=random.choice(list(COLOR_SCHEMES.values())))\ncreate_tag_image(tags, 'keyword_tag_cloud4.png', background=(34, 34, 34, 255),\nsize=(1200, 1000),layout=LAYOUT_HORIZONTAL,\nfontname=\"SimHei\")\n```\n输出结果keyword_tag_cloud4.png\n\n![](https://static.oschina.net/uploads/space/2017/1026/161508_7vNm_584443.png)\n\nref:\n\nhttp://www.cnblogs.com/Yiutto/p/5998262.html\n\n已打包上传gitee,地址\n\nhttps://gitee.com/changwenwen/CompanysAnalysis","slug":"language/python/2018-07-18-lagou-9600s-cloud-tag","published":1,"updated":"2018-07-18T06:40:32.014Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl1wa8gz00362wh51jhxq26n","content":"<p>最近工作有空闲，树莓派上跑了个Node服务器，爬了几天拉勾上的公司，爬取的网址类似下面的格式：</p>\n<p><a href=\"https://www.lagou.com/gongsi/200562.html\" target=\"_blank\" rel=\"noopener\">https://www.lagou.com/gongsi/200562.html</a></p>\n<p>源码如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fetch_url = <span class=\"string\">'/gongsi/$&#123;index&#125;.html'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.runner = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchPage</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    startRequest(index);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startRequest</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    CompanysModel.findOne(&#123;<span class=\"attr\">index</span>: index&#125;, <span class=\"string\">'_id'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, _company</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err || _company) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(index + <span class=\"string\">'-------  got'</span>);</span><br><span class=\"line\">            incrAndReget(index);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        handlerContent(index);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handlerContent</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//采用http模块向服务器发起一次get请求</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> url = fetch_url.replace(<span class=\"string\">'$&#123;index&#125;'</span>, index);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">        hostname: <span class=\"string\">'www.lagou.com'</span>,</span><br><span class=\"line\">        port: <span class=\"string\">'443'</span>,</span><br><span class=\"line\">        path: url,</span><br><span class=\"line\">        method: <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">        headers: &#123;</span><br><span class=\"line\">            <span class=\"string\">'Accept'</span>: <span class=\"string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Accept-Encoding'</span>: <span class=\"string\">'deflate, br'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Accept-Language'</span>: <span class=\"string\">'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Connection'</span>: <span class=\"string\">'keep-alive'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Cookie'</span>: <span class=\"string\">'user_trace_token=20171019112945-24a9d09c-bcfe-47d7-8d27-3bf53bfdb347; LGUID=20171019112947-c1eabc85-b47d-11e7-9c7e-525400f775ce; JSESSIONID=ABAAABAACDBAAIAC9A9B32CD990D08ED4BAEFDDAB14C879; TG-TRACK-CODE=index_campus; _gid=GA1.2.705151711.1508383779; _ga=GA1.2.1181508252.1508383779; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508383779,1508383891,1508384000; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508392375; LGSID=20171019125706-f472e429-b489-11e7-9ca5-525400f775ce; LGRID=20171019135302-c509ee47-b491-11e7-9cac-525400f775ce'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Host'</span>: <span class=\"string\">'www.lagou.com'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Origin'</span>: <span class=\"string\">'http://www.lagou.com'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Referer'</span>: <span class=\"string\">'http://www.lagou.com/'</span>,</span><br><span class=\"line\">            <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    http.get(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(url + <span class=\"string\">'-------'</span> + res.statusCode);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.statusCode == <span class=\"number\">303</span>) &#123;</span><br><span class=\"line\">            incrAndReget(index);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.statusCode == <span class=\"number\">302</span>) &#123;</span><br><span class=\"line\">            setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (retryCount == RETRYTIMES) &#123;</span><br><span class=\"line\">                    retryCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">                    incrAndReget(index);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    retryCount++;</span><br><span class=\"line\">                    handlerContent(index);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span> * <span class=\"number\">5</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> html = <span class=\"string\">''</span>;        <span class=\"comment\">//用来存储请求网页的整个html内容</span></span><br><span class=\"line\">        <span class=\"comment\">//监听data事件，每次取一块数据</span></span><br><span class=\"line\">        res.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">chunk</span>) </span>&#123;</span><br><span class=\"line\">            html += chunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//监听end事件，如果整个网页内容的html都获取完毕，就执行回调函数</span></span><br><span class=\"line\">        res.on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> $ = cheerio.load(html); <span class=\"comment\">//采用cheerio模块解析html</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> company = &#123;</span><br><span class=\"line\">                index: index,</span><br><span class=\"line\">                <span class=\"comment\">//公司简称</span></span><br><span class=\"line\">                simpleName: $(<span class=\"string\">'a.hovertips'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//公司名称</span></span><br><span class=\"line\">                name: $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'title'</span>) ? $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'title'</span>).trim() : <span class=\"string\">''</span>,</span><br><span class=\"line\">                <span class=\"comment\">//公司url</span></span><br><span class=\"line\">                urlLink: $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'href'</span>) ? $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'href'</span>).trim() : <span class=\"string\">''</span>,</span><br><span class=\"line\">                <span class=\"comment\">//公司简介</span></span><br><span class=\"line\">                companyDesc: $(<span class=\"string\">'span.company_content'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品名</span></span><br><span class=\"line\">                productName: $(<span class=\"string\">'.url_valid'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品类型</span></span><br><span class=\"line\">                productType: $(<span class=\"string\">'.product_details ul'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品描述</span></span><br><span class=\"line\">                productDesc: $(<span class=\"string\">'.product_profile'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品链接地址</span></span><br><span class=\"line\">                productLink: $(<span class=\"string\">'.url_valid'</span>).attr(<span class=\"string\">'href'</span>) ? $(<span class=\"string\">'.url_valid'</span>).attr(<span class=\"string\">'href'</span>).trim() : <span class=\"string\">''</span>,</span><br><span class=\"line\">                <span class=\"comment\">//管理者</span></span><br><span class=\"line\">                manager: $(<span class=\"string\">\"#company_managers .item_manager_name\"</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//管理者简介</span></span><br><span class=\"line\">                managerDesc: $(<span class=\"string\">\"#company_managers .item_manager_content\"</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//公司类型</span></span><br><span class=\"line\">                type: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">0</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//融资进度</span></span><br><span class=\"line\">                process: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">1</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//人数</span></span><br><span class=\"line\">                number: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">2</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//坐标</span></span><br><span class=\"line\">                address: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">3</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//评分</span></span><br><span class=\"line\">                score: $(<span class=\"string\">'#interview_container .comprehensive-review .score'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//样本</span></span><br><span class=\"line\">                count: $(<span class=\"string\">'#interview_container .comprehensive-review .count'</span>).text().trim().replace(<span class=\"string\">\"（ 来自 \"</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\" 份评价 ）\"</span>, <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> companysModel = <span class=\"keyword\">new</span> CompanysModel(company);</span><br><span class=\"line\">            companysModel.save();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        incrAndReget(index);</span><br><span class=\"line\">    &#125;).on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            handlerContent(index);</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span> * <span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">incrAndReget</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    index++;</span><br><span class=\"line\">    startRequest(index);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>效率不是很高，可自行抓取或者优化抓取过程。抓取来的数据，放在了MongoDb中。</p>\n<p>接下来使用结巴分词进行词频的抓取，整个python使用3.6的32位，需要安装的工具如下</p>\n<p>pygame-1.9.3-cp36-cp36m-win32.whl</p>\n<p>PyTagCloud</p>\n<p>simplejson</p>\n<p>为了显示中文，拷贝中文字体到PyTagCloud的路径Python36-32\\Lib\\site-packages\\pytagcloud\\fonts下，并修改fonts.json,增加<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;</span><br><span class=\"line\">\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"SimHei\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"ttf\"</span>: <span class=\"string\">\"simhei.ttf\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"web\"</span>: <span class=\"string\">\"none\"</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>接下来编写代码来分析公司介绍文件coms.txt，排除了一些不关心的词做stopword,加入了些自定义的词典，但词频依然很低。请自行进行调整：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import sys</span><br><span class=\"line\">import codecs</span><br><span class=\"line\">sys.path.<span class=\"keyword\">append</span>(<span class=\"string\">'../'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">import jieba</span><br><span class=\"line\">import jieba.analyse</span><br><span class=\"line\">from optparse import OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">USAGE = <span class=\"string\">\"usage:    python ana.py [file name] -k [top k] -w [with weight=1 or 0]\"</span></span><br><span class=\"line\">jieba.load_userdict(<span class=\"string\">'dict.txt'</span>)</span><br><span class=\"line\">jieba.analyse.set_stop_words(<span class=\"string\">'stopwords.txt'</span>)</span><br><span class=\"line\">parser = OptionParser(USAGE)</span><br><span class=\"line\">parser.add_option(<span class=\"string\">\"-k\"</span>, dest=<span class=\"string\">\"topK\"</span>)</span><br><span class=\"line\">parser.add_option(<span class=\"string\">\"-w\"</span>, dest=<span class=\"string\">\"withWeight\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">opt</span>, <span class=\"keyword\">args</span> = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"keyword\">args</span>) &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span>(USAGE)</span><br><span class=\"line\">    sys.<span class=\"keyword\">exit</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">file_name = <span class=\"keyword\">args</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">opt</span>.topK <span class=\"keyword\">is</span> None:</span><br><span class=\"line\">    topK = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    topK = <span class=\"keyword\">int</span>(<span class=\"keyword\">opt</span>.topK)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">opt</span>.withWeight <span class=\"keyword\">is</span> None:</span><br><span class=\"line\">    withWeight = False</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">int</span>(<span class=\"keyword\">opt</span>.withWeight) <span class=\"keyword\">is</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        withWeight = True</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        withWeight = False</span><br><span class=\"line\"></span><br><span class=\"line\">content = <span class=\"keyword\">open</span>(file_name, <span class=\"string\">'rb'</span>).<span class=\"keyword\">read</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">tags</span> = jieba.analyse.extract_tags(content, topK=topK, withWeight=withWeight)</span><br><span class=\"line\">output = codecs.<span class=\"keyword\">open</span>(<span class=\"string\">'sort.txt'</span>, <span class=\"string\">'w'</span>,<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> withWeight <span class=\"keyword\">is</span> True:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"keyword\">tag</span> in <span class=\"keyword\">tag</span><span class=\"variable\">s:</span></span><br><span class=\"line\">        output.<span class=\"keyword\">write</span>(<span class=\"string\">'%s%s%s%s'</span>%(<span class=\"keyword\">tag</span>[<span class=\"number\">0</span>],<span class=\"string\">':'</span>,<span class=\"keyword\">tag</span>[<span class=\"number\">1</span>],<span class=\"string\">'\\n'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span>(<span class=\"string\">\",\"</span>.<span class=\"keyword\">join</span>(<span class=\"keyword\">tags</span>))</span><br></pre></td></tr></table></figure></p>\n<p>执行之后将输出结果到sort.txt</p>\n<p>接下来生成词云，话不多说，直接上代码</p>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf<span class=\"number\">-8</span> -*-</span><br><span class=\"line\"><span class=\"keyword\">import</span> codecs</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"built_in\">random</span></span><br><span class=\"line\">from pytagcloud <span class=\"keyword\">import</span> create_tag_image, create_html_data, make_tags, \\</span><br><span class=\"line\">    LAYOUT_HORIZONTAL, LAYOUTS</span><br><span class=\"line\">from pytagcloud.colors <span class=\"keyword\">import</span> COLOR_SCHEMES</span><br><span class=\"line\">from pytagcloud.lang.counter <span class=\"keyword\">import</span> get_tag_counts</span><br><span class=\"line\"></span><br><span class=\"line\">wd = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fp=codecs.<span class=\"built_in\">open</span>(<span class=\"string\">\".\\sort.txt\"</span>, <span class=\"string\">\"r\"</span>,<span class=\"string\">'utf-8'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">alllines=fp.readlines();</span><br><span class=\"line\"></span><br><span class=\"line\">fp.close();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> eachline in alllines:</span><br><span class=\"line\">    <span class=\"built_in\">line</span> = eachline.<span class=\"built_in\">split</span>(<span class=\"string\">':'</span>)</span><br><span class=\"line\">    wd[<span class=\"built_in\">line</span>[<span class=\"number\">0</span>]] =  <span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(<span class=\"built_in\">line</span>[<span class=\"number\">1</span>][:<span class=\"number\">-11</span>])*<span class=\"number\">10000</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">'%s%s'</span>%(<span class=\"built_in\">line</span>[<span class=\"number\">0</span>],wd[<span class=\"built_in\">line</span>[<span class=\"number\">0</span>]]));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">from operator <span class=\"keyword\">import</span> itemgetter</span><br><span class=\"line\">swd = sorted(wd.items(), <span class=\"built_in\">key</span>=itemgetter(<span class=\"number\">1</span>), <span class=\"built_in\">reverse</span>=True)</span><br><span class=\"line\">tags = make_tags(swd,minsize = <span class=\"number\">20</span>, maxsize = <span class=\"number\">200</span>,colors=<span class=\"built_in\">random</span>.choice(list(COLOR_SCHEMES.values())))</span><br><span class=\"line\">create_tag_image(tags, <span class=\"string\">'keyword_tag_cloud4.png'</span>, <span class=\"built_in\">background</span>=(<span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">255</span>),</span><br><span class=\"line\"><span class=\"built_in\">size</span>=(<span class=\"number\">1200</span>, <span class=\"number\">1000</span>),layout=LAYOUT_HORIZONTAL,</span><br><span class=\"line\">fontname=<span class=\"string\">\"SimHei\"</span>)</span><br></pre></td></tr></table></figure>\n<p>输出结果keyword_tag_cloud4.png</p>\n<p><img src=\"https://static.oschina.net/uploads/space/2017/1026/161508_7vNm_584443.png\" alt=\"\"></p>\n<p>ref:</p>\n<p><a href=\"http://www.cnblogs.com/Yiutto/p/5998262.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Yiutto/p/5998262.html</a></p>\n<p>已打包上传gitee,地址</p>\n<p><a href=\"https://gitee.com/changwenwen/CompanysAnalysis\" target=\"_blank\" rel=\"noopener\">https://gitee.com/changwenwen/CompanysAnalysis</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近工作有空闲，树莓派上跑了个Node服务器，爬了几天拉勾上的公司，爬取的网址类似下面的格式：</p>\n<p><a href=\"https://www.lagou.com/gongsi/200562.html\" target=\"_blank\" rel=\"noopener\">https://www.lagou.com/gongsi/200562.html</a></p>\n<p>源码如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fetch_url = <span class=\"string\">'/gongsi/$&#123;index&#125;.html'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.runner = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchPage</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    startRequest(index);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startRequest</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    CompanysModel.findOne(&#123;<span class=\"attr\">index</span>: index&#125;, <span class=\"string\">'_id'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, _company</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err || _company) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(index + <span class=\"string\">'-------  got'</span>);</span><br><span class=\"line\">            incrAndReget(index);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        handlerContent(index);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handlerContent</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//采用http模块向服务器发起一次get请求</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> url = fetch_url.replace(<span class=\"string\">'$&#123;index&#125;'</span>, index);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">        hostname: <span class=\"string\">'www.lagou.com'</span>,</span><br><span class=\"line\">        port: <span class=\"string\">'443'</span>,</span><br><span class=\"line\">        path: url,</span><br><span class=\"line\">        method: <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">        headers: &#123;</span><br><span class=\"line\">            <span class=\"string\">'Accept'</span>: <span class=\"string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Accept-Encoding'</span>: <span class=\"string\">'deflate, br'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Accept-Language'</span>: <span class=\"string\">'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Connection'</span>: <span class=\"string\">'keep-alive'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Cookie'</span>: <span class=\"string\">'user_trace_token=20171019112945-24a9d09c-bcfe-47d7-8d27-3bf53bfdb347; LGUID=20171019112947-c1eabc85-b47d-11e7-9c7e-525400f775ce; JSESSIONID=ABAAABAACDBAAIAC9A9B32CD990D08ED4BAEFDDAB14C879; TG-TRACK-CODE=index_campus; _gid=GA1.2.705151711.1508383779; _ga=GA1.2.1181508252.1508383779; Hm_lvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508383779,1508383891,1508384000; Hm_lpvt_4233e74dff0ae5bd0a3d81c6ccf756e6=1508392375; LGSID=20171019125706-f472e429-b489-11e7-9ca5-525400f775ce; LGRID=20171019135302-c509ee47-b491-11e7-9cac-525400f775ce'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Host'</span>: <span class=\"string\">'www.lagou.com'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Origin'</span>: <span class=\"string\">'http://www.lagou.com'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Referer'</span>: <span class=\"string\">'http://www.lagou.com/'</span>,</span><br><span class=\"line\">            <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    http.get(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(url + <span class=\"string\">'-------'</span> + res.statusCode);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.statusCode == <span class=\"number\">303</span>) &#123;</span><br><span class=\"line\">            incrAndReget(index);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.statusCode == <span class=\"number\">302</span>) &#123;</span><br><span class=\"line\">            setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (retryCount == RETRYTIMES) &#123;</span><br><span class=\"line\">                    retryCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">                    incrAndReget(index);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    retryCount++;</span><br><span class=\"line\">                    handlerContent(index);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span> * <span class=\"number\">5</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> html = <span class=\"string\">''</span>;        <span class=\"comment\">//用来存储请求网页的整个html内容</span></span><br><span class=\"line\">        <span class=\"comment\">//监听data事件，每次取一块数据</span></span><br><span class=\"line\">        res.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">chunk</span>) </span>&#123;</span><br><span class=\"line\">            html += chunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//监听end事件，如果整个网页内容的html都获取完毕，就执行回调函数</span></span><br><span class=\"line\">        res.on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> $ = cheerio.load(html); <span class=\"comment\">//采用cheerio模块解析html</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> company = &#123;</span><br><span class=\"line\">                index: index,</span><br><span class=\"line\">                <span class=\"comment\">//公司简称</span></span><br><span class=\"line\">                simpleName: $(<span class=\"string\">'a.hovertips'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//公司名称</span></span><br><span class=\"line\">                name: $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'title'</span>) ? $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'title'</span>).trim() : <span class=\"string\">''</span>,</span><br><span class=\"line\">                <span class=\"comment\">//公司url</span></span><br><span class=\"line\">                urlLink: $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'href'</span>) ? $(<span class=\"string\">'a.hovertips'</span>).attr(<span class=\"string\">'href'</span>).trim() : <span class=\"string\">''</span>,</span><br><span class=\"line\">                <span class=\"comment\">//公司简介</span></span><br><span class=\"line\">                companyDesc: $(<span class=\"string\">'span.company_content'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品名</span></span><br><span class=\"line\">                productName: $(<span class=\"string\">'.url_valid'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品类型</span></span><br><span class=\"line\">                productType: $(<span class=\"string\">'.product_details ul'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品描述</span></span><br><span class=\"line\">                productDesc: $(<span class=\"string\">'.product_profile'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//产品链接地址</span></span><br><span class=\"line\">                productLink: $(<span class=\"string\">'.url_valid'</span>).attr(<span class=\"string\">'href'</span>) ? $(<span class=\"string\">'.url_valid'</span>).attr(<span class=\"string\">'href'</span>).trim() : <span class=\"string\">''</span>,</span><br><span class=\"line\">                <span class=\"comment\">//管理者</span></span><br><span class=\"line\">                manager: $(<span class=\"string\">\"#company_managers .item_manager_name\"</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//管理者简介</span></span><br><span class=\"line\">                managerDesc: $(<span class=\"string\">\"#company_managers .item_manager_content\"</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//公司类型</span></span><br><span class=\"line\">                type: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">0</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//融资进度</span></span><br><span class=\"line\">                process: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">1</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//人数</span></span><br><span class=\"line\">                number: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">2</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//坐标</span></span><br><span class=\"line\">                address: $($(<span class=\"string\">\"#basic_container li\"</span>)[<span class=\"number\">3</span>]).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//评分</span></span><br><span class=\"line\">                score: $(<span class=\"string\">'#interview_container .comprehensive-review .score'</span>).text().trim(),</span><br><span class=\"line\">                <span class=\"comment\">//样本</span></span><br><span class=\"line\">                count: $(<span class=\"string\">'#interview_container .comprehensive-review .count'</span>).text().trim().replace(<span class=\"string\">\"（ 来自 \"</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\" 份评价 ）\"</span>, <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> companysModel = <span class=\"keyword\">new</span> CompanysModel(company);</span><br><span class=\"line\">            companysModel.save();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        incrAndReget(index);</span><br><span class=\"line\">    &#125;).on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            handlerContent(index);</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span> * <span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">incrAndReget</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">    index++;</span><br><span class=\"line\">    startRequest(index);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>效率不是很高，可自行抓取或者优化抓取过程。抓取来的数据，放在了MongoDb中。</p>\n<p>接下来使用结巴分词进行词频的抓取，整个python使用3.6的32位，需要安装的工具如下</p>\n<p>pygame-1.9.3-cp36-cp36m-win32.whl</p>\n<p>PyTagCloud</p>\n<p>simplejson</p>\n<p>为了显示中文，拷贝中文字体到PyTagCloud的路径Python36-32\\Lib\\site-packages\\pytagcloud\\fonts下，并修改fonts.json,增加<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;</span><br><span class=\"line\">\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"SimHei\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"ttf\"</span>: <span class=\"string\">\"simhei.ttf\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"web\"</span>: <span class=\"string\">\"none\"</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>接下来编写代码来分析公司介绍文件coms.txt，排除了一些不关心的词做stopword,加入了些自定义的词典，但词频依然很低。请自行进行调整：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import sys</span><br><span class=\"line\">import codecs</span><br><span class=\"line\">sys.path.<span class=\"keyword\">append</span>(<span class=\"string\">'../'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">import jieba</span><br><span class=\"line\">import jieba.analyse</span><br><span class=\"line\">from optparse import OptionParser</span><br><span class=\"line\"></span><br><span class=\"line\">USAGE = <span class=\"string\">\"usage:    python ana.py [file name] -k [top k] -w [with weight=1 or 0]\"</span></span><br><span class=\"line\">jieba.load_userdict(<span class=\"string\">'dict.txt'</span>)</span><br><span class=\"line\">jieba.analyse.set_stop_words(<span class=\"string\">'stopwords.txt'</span>)</span><br><span class=\"line\">parser = OptionParser(USAGE)</span><br><span class=\"line\">parser.add_option(<span class=\"string\">\"-k\"</span>, dest=<span class=\"string\">\"topK\"</span>)</span><br><span class=\"line\">parser.add_option(<span class=\"string\">\"-w\"</span>, dest=<span class=\"string\">\"withWeight\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">opt</span>, <span class=\"keyword\">args</span> = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"keyword\">args</span>) &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span>(USAGE)</span><br><span class=\"line\">    sys.<span class=\"keyword\">exit</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">file_name = <span class=\"keyword\">args</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">opt</span>.topK <span class=\"keyword\">is</span> None:</span><br><span class=\"line\">    topK = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    topK = <span class=\"keyword\">int</span>(<span class=\"keyword\">opt</span>.topK)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">opt</span>.withWeight <span class=\"keyword\">is</span> None:</span><br><span class=\"line\">    withWeight = False</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">int</span>(<span class=\"keyword\">opt</span>.withWeight) <span class=\"keyword\">is</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        withWeight = True</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        withWeight = False</span><br><span class=\"line\"></span><br><span class=\"line\">content = <span class=\"keyword\">open</span>(file_name, <span class=\"string\">'rb'</span>).<span class=\"keyword\">read</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">tags</span> = jieba.analyse.extract_tags(content, topK=topK, withWeight=withWeight)</span><br><span class=\"line\">output = codecs.<span class=\"keyword\">open</span>(<span class=\"string\">'sort.txt'</span>, <span class=\"string\">'w'</span>,<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> withWeight <span class=\"keyword\">is</span> True:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"keyword\">tag</span> in <span class=\"keyword\">tag</span><span class=\"variable\">s:</span></span><br><span class=\"line\">        output.<span class=\"keyword\">write</span>(<span class=\"string\">'%s%s%s%s'</span>%(<span class=\"keyword\">tag</span>[<span class=\"number\">0</span>],<span class=\"string\">':'</span>,<span class=\"keyword\">tag</span>[<span class=\"number\">1</span>],<span class=\"string\">'\\n'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span>(<span class=\"string\">\",\"</span>.<span class=\"keyword\">join</span>(<span class=\"keyword\">tags</span>))</span><br></pre></td></tr></table></figure></p>\n<p>执行之后将输出结果到sort.txt</p>\n<p>接下来生成词云，话不多说，直接上代码</p>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf<span class=\"number\">-8</span> -*-</span><br><span class=\"line\"><span class=\"keyword\">import</span> codecs</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"built_in\">random</span></span><br><span class=\"line\">from pytagcloud <span class=\"keyword\">import</span> create_tag_image, create_html_data, make_tags, \\</span><br><span class=\"line\">    LAYOUT_HORIZONTAL, LAYOUTS</span><br><span class=\"line\">from pytagcloud.colors <span class=\"keyword\">import</span> COLOR_SCHEMES</span><br><span class=\"line\">from pytagcloud.lang.counter <span class=\"keyword\">import</span> get_tag_counts</span><br><span class=\"line\"></span><br><span class=\"line\">wd = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fp=codecs.<span class=\"built_in\">open</span>(<span class=\"string\">\".\\sort.txt\"</span>, <span class=\"string\">\"r\"</span>,<span class=\"string\">'utf-8'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">alllines=fp.readlines();</span><br><span class=\"line\"></span><br><span class=\"line\">fp.close();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> eachline in alllines:</span><br><span class=\"line\">    <span class=\"built_in\">line</span> = eachline.<span class=\"built_in\">split</span>(<span class=\"string\">':'</span>)</span><br><span class=\"line\">    wd[<span class=\"built_in\">line</span>[<span class=\"number\">0</span>]] =  <span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(<span class=\"built_in\">line</span>[<span class=\"number\">1</span>][:<span class=\"number\">-11</span>])*<span class=\"number\">10000</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">'%s%s'</span>%(<span class=\"built_in\">line</span>[<span class=\"number\">0</span>],wd[<span class=\"built_in\">line</span>[<span class=\"number\">0</span>]]));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">from operator <span class=\"keyword\">import</span> itemgetter</span><br><span class=\"line\">swd = sorted(wd.items(), <span class=\"built_in\">key</span>=itemgetter(<span class=\"number\">1</span>), <span class=\"built_in\">reverse</span>=True)</span><br><span class=\"line\">tags = make_tags(swd,minsize = <span class=\"number\">20</span>, maxsize = <span class=\"number\">200</span>,colors=<span class=\"built_in\">random</span>.choice(list(COLOR_SCHEMES.values())))</span><br><span class=\"line\">create_tag_image(tags, <span class=\"string\">'keyword_tag_cloud4.png'</span>, <span class=\"built_in\">background</span>=(<span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">255</span>),</span><br><span class=\"line\"><span class=\"built_in\">size</span>=(<span class=\"number\">1200</span>, <span class=\"number\">1000</span>),layout=LAYOUT_HORIZONTAL,</span><br><span class=\"line\">fontname=<span class=\"string\">\"SimHei\"</span>)</span><br></pre></td></tr></table></figure>\n<p>输出结果keyword_tag_cloud4.png</p>\n<p><img src=\"https://static.oschina.net/uploads/space/2017/1026/161508_7vNm_584443.png\" alt=\"\"></p>\n<p>ref:</p>\n<p><a href=\"http://www.cnblogs.com/Yiutto/p/5998262.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Yiutto/p/5998262.html</a></p>\n<p>已打包上传gitee,地址</p>\n<p><a href=\"https://gitee.com/changwenwen/CompanysAnalysis\" target=\"_blank\" rel=\"noopener\">https://gitee.com/changwenwen/CompanysAnalysis</a></p>\n","sticky":0}],"PostAsset":[],"PostCategory":[{"post_id":"cjl1wa8ee00022wh5mphnhwez","category_id":"cjl1wa8em00042wh5n1y4bytj","_id":"cjl1wa8ex000d2wh56hakbk92"},{"post_id":"cjl1wa8ek00032wh5qdpo8sxx","category_id":"cjl1wa8es00092wh5qsbapr4c","_id":"cjl1wa8f4000k2wh57iievagq"},{"post_id":"cjl1wa8ep00062wh5obk4qfzr","category_id":"cjl1wa8ey000e2wh56kgjshts","_id":"cjl1wa8fb000q2wh5jxah7bkm"},{"post_id":"cjl1wa8eq00072wh5g0ul5ykw","category_id":"cjl1wa8ey000e2wh56kgjshts","_id":"cjl1wa8fe000v2wh5pn3jek4o"},{"post_id":"cjl1wa8er00082wh56qt2h8cf","category_id":"cjl1wa8fb000p2wh5irkuv26f","_id":"cjl1wa8fj00122wh5z0gqnxfe"},{"post_id":"cjl1wa8et000b2wh5506n6r9e","category_id":"cjl1wa8fe000x2wh56sper5g5","_id":"cjl1wa8fm00162wh51oa8dfxf"},{"post_id":"cjl1wa8ev000c2wh57j16bdit","category_id":"cjl1wa8fk00142wh5ngxtl55p","_id":"cjl1wa8fn001b2wh5e71pbhug"},{"post_id":"cjl1wa8ey000g2wh5n21ouxlr","category_id":"cjl1wa8fm00172wh5mhrucadj","_id":"cjl1wa8fo001f2wh52en0vro4"},{"post_id":"cjl1wa8f2000i2wh5n5ah8av5","category_id":"cjl1wa8fn001c2wh53j47mp2f","_id":"cjl1wa8fp001j2wh5e6tbei4f"},{"post_id":"cjl1wa8f6000n2wh54fdpy98h","category_id":"cjl1wa8fo001g2wh56f846axy","_id":"cjl1wa8fq001m2wh51pz2j1za"},{"post_id":"cjl1wa8f9000o2wh5th7nwwku","category_id":"cjl1wa8fp001k2wh5ymbkyao9","_id":"cjl1wa8fr001p2wh5wv00hjpb"},{"post_id":"cjl1wa8fc000s2wh56k5iytub","category_id":"cjl1wa8fq001n2wh5znyvhbc0","_id":"cjl1wa8ft001v2wh5btzakpnf"},{"post_id":"cjl1wa8fd000u2wh5b8s2cg3a","category_id":"cjl1wa8fp001k2wh5ymbkyao9","_id":"cjl1wa8fu00202wh5qtfdds8p"},{"post_id":"cjl1wa8fe000y2wh5hrc0mbj0","category_id":"cjl1wa8fp001k2wh5ymbkyao9","_id":"cjl1wa8fv00232wh5whlhxri5"},{"post_id":"cjl1wa8fh00112wh53dvr17er","category_id":"cjl1wa8fu001z2wh59wst1ibi","_id":"cjl1wa8fw00262wh53tnhw99u"},{"post_id":"cjl1wa8fj00132wh5bvv9ovak","category_id":"cjl1wa8fv00242wh59om4nsew","_id":"cjl1wa8fx00282wh5i9cprz3f"},{"post_id":"cjl1wa8gq002w2wh5r04w9cnx","category_id":"cjl1wa8gt002y2wh5f2fzdau2","_id":"cjl1wa8h000372wh52deyew8d"},{"post_id":"cjl1wa8gs002x2wh5cjhkfh0i","category_id":"cjl1wa8gx00332wh59q60d77j","_id":"cjl1wa8h1003b2wh5kqv4f638"},{"post_id":"cjl1wa8gt00302wh54yo38zl4","category_id":"cjl1wa8h000382wh55mpg1cbw","_id":"cjl1wa8h2003e2wh5xpu7h5x1"},{"post_id":"cjl1wa8gv00312wh5boxy1ulb","category_id":"cjl1wa8h1003c2wh53vr365ph","_id":"cjl1wa8h3003j2wh5ozw2hbrs"},{"post_id":"cjl1wa8gw00322wh5vfq22r58","category_id":"cjl1wa8h2003f2wh5wssieq5a","_id":"cjl1wa8h5003m2wh5sq4wtbes"},{"post_id":"cjl1wa8gz00362wh51jhxq26n","category_id":"cjl1wa8h4003k2wh5to0v3tx9","_id":"cjl1wa8h5003o2wh5n1peacyr"}],"PostTag":[{"post_id":"cjl1wa8ee00022wh5mphnhwez","tag_id":"cjl1wa8eo00052wh5j5t49wvy","_id":"cjl1wa8f1000h2wh52eip411h"},{"post_id":"cjl1wa8ee00022wh5mphnhwez","tag_id":"cjl1wa8et000a2wh5wjyoaijq","_id":"cjl1wa8f4000j2wh5qikps1iw"},{"post_id":"cjl1wa8ek00032wh5qdpo8sxx","tag_id":"cjl1wa8ey000f2wh5e89rycsq","_id":"cjl1wa8fd000t2wh5lic34qn4"},{"post_id":"cjl1wa8ek00032wh5qdpo8sxx","tag_id":"cjl1wa8f4000m2wh5zqecxwxs","_id":"cjl1wa8fe000w2wh5uk38g6a2"},{"post_id":"cjl1wa8ep00062wh5obk4qfzr","tag_id":"cjl1wa8fb000r2wh5j1g74lz2","_id":"cjl1wa8fg00102wh54l17hekb"},{"post_id":"cjl1wa8eq00072wh5g0ul5ykw","tag_id":"cjl1wa8fb000r2wh5j1g74lz2","_id":"cjl1wa8fm00192wh5t9f4snxw"},{"post_id":"cjl1wa8eq00072wh5g0ul5ykw","tag_id":"cjl1wa8fk00152wh52doogesn","_id":"cjl1wa8fn001a2wh5fnerw7rc"},{"post_id":"cjl1wa8er00082wh56qt2h8cf","tag_id":"cjl1wa8fm00182wh5ex6wx290","_id":"cjl1wa8fn001e2wh5wurrhgvx"},{"post_id":"cjl1wa8et000b2wh5506n6r9e","tag_id":"cjl1wa8fn001d2wh58pb05rlz","_id":"cjl1wa8fp001i2wh5glkj1kke"},{"post_id":"cjl1wa8ev000c2wh57j16bdit","tag_id":"cjl1wa8fo001h2wh5w1p0g6dj","_id":"cjl1wa8fs001s2wh5soacycvp"},{"post_id":"cjl1wa8ev000c2wh57j16bdit","tag_id":"cjl1wa8fq001l2wh5jtn4bdmo","_id":"cjl1wa8fs001t2wh50knxn3dg"},{"post_id":"cjl1wa8ev000c2wh57j16bdit","tag_id":"cjl1wa8fq001o2wh51pv1tfiu","_id":"cjl1wa8ft001x2wh550jagmjf"},{"post_id":"cjl1wa8ey000g2wh5n21ouxlr","tag_id":"cjl1wa8fr001r2wh5kb9je4gm","_id":"cjl1wa8fu001y2wh5op4y9363"},{"post_id":"cjl1wa8f2000i2wh5n5ah8av5","tag_id":"cjl1wa8ft001w2wh565epeaa1","_id":"cjl1wa8fv00222wh5n8ae5jpq"},{"post_id":"cjl1wa8f6000n2wh54fdpy98h","tag_id":"cjl1wa8fu00212wh5qv44fxxs","_id":"cjl1wa8fy002a2wh5t2hebtsh"},{"post_id":"cjl1wa8f6000n2wh54fdpy98h","tag_id":"cjl1wa8fq001l2wh5jtn4bdmo","_id":"cjl1wa8fy002b2wh5zyzfy0l0"},{"post_id":"cjl1wa8f6000n2wh54fdpy98h","tag_id":"cjl1wa8fq001o2wh51pv1tfiu","_id":"cjl1wa8fz002d2wh5ovzpc7mp"},{"post_id":"cjl1wa8f9000o2wh5th7nwwku","tag_id":"cjl1wa8fy00292wh5o01kb2ae","_id":"cjl1wa8g0002f2wh52u47k35u"},{"post_id":"cjl1wa8f9000o2wh5th7nwwku","tag_id":"cjl1wa8fz002c2wh5fx3g8bm4","_id":"cjl1wa8g1002g2wh54uwoddh7"},{"post_id":"cjl1wa8fc000s2wh56k5iytub","tag_id":"cjl1wa8g0002e2wh54ss2nls3","_id":"cjl1wa8g1002i2wh52oylc1xf"},{"post_id":"cjl1wa8fd000u2wh5b8s2cg3a","tag_id":"cjl1wa8g1002h2wh5puwfpyqg","_id":"cjl1wa8g5002l2wh5ht5di7w3"},{"post_id":"cjl1wa8fd000u2wh5b8s2cg3a","tag_id":"cjl1wa8g2002j2wh5vgsfvkv0","_id":"cjl1wa8g5002m2wh596pygmtz"},{"post_id":"cjl1wa8fe000y2wh5hrc0mbj0","tag_id":"cjl1wa8fy00292wh5o01kb2ae","_id":"cjl1wa8g7002p2wh5mqehxcj1"},{"post_id":"cjl1wa8fe000y2wh5hrc0mbj0","tag_id":"cjl1wa8g6002n2wh5ns72isnv","_id":"cjl1wa8g8002q2wh5kgmo104m"},{"post_id":"cjl1wa8fh00112wh53dvr17er","tag_id":"cjl1wa8g7002o2wh5kp736civ","_id":"cjl1wa8g9002t2wh5rlfojie4"},{"post_id":"cjl1wa8fh00112wh53dvr17er","tag_id":"cjl1wa8g8002r2wh5gmkco8jb","_id":"cjl1wa8g9002u2wh5vn38m62q"},{"post_id":"cjl1wa8fj00132wh5bvv9ovak","tag_id":"cjl1wa8g8002s2wh51f60cboc","_id":"cjl1wa8g9002v2wh5q3iwkfh3"},{"post_id":"cjl1wa8gq002w2wh5r04w9cnx","tag_id":"cjl1wa8gt002z2wh5x7v4v79x","_id":"cjl1wa8gy00352wh5a2gan3fk"},{"post_id":"cjl1wa8gs002x2wh5cjhkfh0i","tag_id":"cjl1wa8gx00342wh5mik3hlw5","_id":"cjl1wa8h1003a2wh56k9he7ke"},{"post_id":"cjl1wa8gt00302wh54yo38zl4","tag_id":"cjl1wa8h100392wh5y3cb7roj","_id":"cjl1wa8h3003h2wh5zzn9giqc"},{"post_id":"cjl1wa8gt00302wh54yo38zl4","tag_id":"cjl1wa8h2003d2wh50smgdt2m","_id":"cjl1wa8h3003i2wh5qfu5gh4x"},{"post_id":"cjl1wa8gv00312wh5boxy1ulb","tag_id":"cjl1wa8h3003g2wh5wwhn3mdb","_id":"cjl1wa8h6003q2wh5hzxknz3t"},{"post_id":"cjl1wa8gv00312wh5boxy1ulb","tag_id":"cjl1wa8h4003l2wh5kvnxvu3u","_id":"cjl1wa8h7003r2wh5lcovvt6i"},{"post_id":"cjl1wa8gv00312wh5boxy1ulb","tag_id":"cjl1wa8h5003n2wh59nvygect","_id":"cjl1wa8h8003t2wh597j63wfv"},{"post_id":"cjl1wa8gw00322wh5vfq22r58","tag_id":"cjl1wa8h3003g2wh5wwhn3mdb","_id":"cjl1wa8h9003v2wh5qtbjr0vf"},{"post_id":"cjl1wa8gw00322wh5vfq22r58","tag_id":"cjl1wa8h7003s2wh5itl6x2n5","_id":"cjl1wa8ha003w2wh51ws8rs84"},{"post_id":"cjl1wa8gz00362wh51jhxq26n","tag_id":"cjl1wa8h8003u2wh5mjqrc9p9","_id":"cjl1wa8hc003y2wh5o109hlld"},{"post_id":"cjl1wa8gz00362wh51jhxq26n","tag_id":"cjl1wa8hb003x2wh5gstfysnh","_id":"cjl1wa8hc003z2wh59cmwlhxz"}],"Tag":[{"name":"oracle","_id":"cjl1wa8eo00052wh5j5t49wvy"},{"name":"死锁","_id":"cjl1wa8et000a2wh5wjyoaijq"},{"name":"mysql","_id":"cjl1wa8ey000f2wh5e89rycsq"},{"name":"mysql-safe","_id":"cjl1wa8f4000m2wh5zqecxwxs"},{"name":"docker","_id":"cjl1wa8fb000r2wh5j1g74lz2"},{"name":"run","_id":"cjl1wa8fk00152wh52doogesn"},{"name":"Go","_id":"cjl1wa8fm00182wh5ex6wx290"},{"name":"lambda","_id":"cjl1wa8fn001d2wh58pb05rlz"},{"name":"程序员","_id":"cjl1wa8fo001h2wh5w1p0g6dj"},{"name":"乱七八糟","_id":"cjl1wa8fq001l2wh5jtn4bdmo"},{"name":"心情","_id":"cjl1wa8fq001o2wh51pv1tfiu"},{"name":"魔方","_id":"cjl1wa8fr001r2wh5kb9je4gm"},{"name":"心理学","_id":"cjl1wa8ft001w2wh565epeaa1"},{"name":"五年记录","_id":"cjl1wa8fu00212wh5qv44fxxs"},{"name":"Linux","_id":"cjl1wa8fy00292wh5o01kb2ae"},{"name":"SSH","_id":"cjl1wa8fz002c2wh5fx3g8bm4"},{"name":"cron","_id":"cjl1wa8g0002e2wh54ss2nls3"},{"name":"ubuntu","_id":"cjl1wa8g1002h2wh5puwfpyqg"},{"name":"charset","_id":"cjl1wa8g2002j2wh5vgsfvkv0"},{"name":"Ubuntu","_id":"cjl1wa8g6002n2wh5ns72isnv"},{"name":"vbs","_id":"cjl1wa8g7002o2wh5kp736civ"},{"name":"email","_id":"cjl1wa8g8002r2wh5gmkco8jb"},{"name":"VMware","_id":"cjl1wa8g8002s2wh51f60cboc"},{"name":"Maven","_id":"cjl1wa8gt002z2wh5x7v4v79x"},{"name":"rabbitmq","_id":"cjl1wa8gx00342wh5mik3hlw5"},{"name":"SpringBoot","_id":"cjl1wa8h100392wh5y3cb7roj"},{"name":"单元测试","_id":"cjl1wa8h2003d2wh50smgdt2m"},{"name":"javascript","_id":"cjl1wa8h3003g2wh5wwhn3mdb"},{"name":"html","_id":"cjl1wa8h4003l2wh5kvnxvu3u"},{"name":"checkbox","_id":"cjl1wa8h5003n2wh59nvygect"},{"name":"timezone","_id":"cjl1wa8h7003s2wh5itl6x2n5"},{"name":"python","_id":"cjl1wa8h8003u2wh5mjqrc9p9"},{"name":"标签云","_id":"cjl1wa8hb003x2wh5gstfysnh"}]}}